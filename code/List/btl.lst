
AVRASM ver. 2.1.30  D:\OneDrive - student.hust.edu.vn\HUST\Learn in Hust\20192 Ky thuat ghep noi may tinh\BTL\BTL_Kythuatghepnoi\code\List\btl.asm Mon Jun 15 07:55:46 2020

D:\OneDrive - student.hust.edu.vn\HUST\Learn in Hust\20192 Ky thuat ghep noi may tinh\BTL\BTL_Kythuatghepnoi\code\List\btl.asm(1090): warning: Register r5 already defined by the .DEF directive
D:\OneDrive - student.hust.edu.vn\HUST\Learn in Hust\20192 Ky thuat ghep noi may tinh\BTL\BTL_Kythuatghepnoi\code\List\btl.asm(1091): warning: Register r4 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Release
                 ;Chip type              : ATmega328P
                 ;Program type           : Application
                 ;Clock frequency        : 11.059200 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Speed
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : long, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega328P
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x08FF
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _recv_buf_ind=R5
                 	.DEF _recv_done=R4
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0070 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0112 	JMP  _USART_receive_isr
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000034 0000      	.DB  0x0,0x0
                 
                 _0x2F:
000035 0000
000036 0000
000037 0000
000038 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000039 0000
00003a 0000
00003b 0000
00003c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00003d 0000
00003e 0000
00003f 0000
000040 ff00      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xFF
000041 ffff
000042 ffff
D:\OneDrive - student.hust.edu.vn\HUST\Learn in Hust\20192 Ky thuat ghep noi may tinh\BTL\BTL_Kythuatghepnoi\code\List\btl.asm(1138): warning: .cseg .db misalignment - padding zero byte
000043 00ff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x0:
000044 6425
000045 3000
000046 2520
000047 2064      	.DB  0x25,0x64,0x0,0x30,0x20,0x25,0x64,0x20
000048 6425
000049 2520
00004a 0064
00004b 3a54      	.DB  0x25,0x64,0x20,0x25,0x64,0x0,0x54,0x3A
00004c 6425
00004d 436f
00004e 202c
00004f 3a48      	.DB  0x25,0x64,0x6F,0x43,0x2C,0x20,0x48,0x3A
000050 6425
000051 2525
000052 4c00
000053 253a      	.DB  0x25,0x64,0x25,0x25,0x0,0x4C,0x3A,0x25
000054 2e34
000055 6632
000056 2525
000057 2d00      	.DB  0x34,0x2E,0x32,0x66,0x25,0x25,0x0,0x2D
000058 2031
000059 6425
00005a 3100
00005b 2520      	.DB  0x31,0x20,0x25,0x64,0x0,0x31,0x20,0x25
00005c 2064
00005d 6425
00005e 2520
00005f 0064      	.DB  0x64,0x20,0x25,0x64,0x20,0x25,0x64,0x0
                 _0x2000000:
000060 4e2d
000061 4e41
D:\OneDrive - student.hust.edu.vn\HUST\Learn in Hust\20192 Ky thuat ghep noi may tinh\BTL\BTL_Kythuatghepnoi\code\List\btl.asm(1148): warning: .cseg .db misalignment - padding zero byte
000062 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x20A0060:
D:\OneDrive - student.hust.edu.vn\HUST\Learn in Hust\20192 Ky thuat ghep noi may tinh\BTL\BTL_Kythuatghepnoi\code\List\btl.asm(1150): warning: .cseg .db misalignment - padding zero byte
000063 0001      	.DB  0x1
                 _0x20A0000:
000064 4e2d
000065 4e41
000066 4900
000067 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\OneDrive - student.hust.edu.vn\HUST\Learn in Hust\20192 Ky thuat ghep noi may tinh\BTL\BTL_Kythuatghepnoi\code\List\btl.asm(1153): warning: .cseg .db misalignment - padding zero byte
000068 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000069 0002      	.DW  0x02
00006a 0004      	.DW  0x04
00006b 0068      	.DW  __REG_VARS*2
                 
00006c 0001      	.DW  0x01
00006d 0314      	.DW  __seed_G105
00006e 00c6      	.DW  _0x20A0060*2
                 
                 _0xFFFFFFFF:
00006f 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000070 94f8      	CLI
000071 27ee      	CLR  R30
000072 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000073 e0f1      	LDI  R31,1
000074 bff5      	OUT  MCUCR,R31
000075 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000076 e1f8      	LDI  R31,0x18
000077 95a8      	WDR
000078 b7a4      	IN   R26,MCUSR
000079 7fa7      	CBR  R26,8
00007a bfa4      	OUT  MCUSR,R26
00007b 93f0 0060 	STS  WDTCSR,R31
00007d 93e0 0060 	STS  WDTCSR,R30
                 
                 ;CLEAR R2-R14
00007f e08d      	LDI  R24,(14-2)+1
000080 e0a2      	LDI  R26,2
000081 27bb      	CLR  R27
                 __CLEAR_REG:
000082 93ed      	ST   X+,R30
000083 958a      	DEC  R24
000084 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000085 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000086 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000087 e0a0      	LDI  R26,LOW(__SRAM_START)
000088 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000089 93ed      	ST   X+,R30
00008a 9701      	SBIW R24,1
00008b f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00008c ede2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00008d e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00008e 9185      	LPM  R24,Z+
00008f 9195      	LPM  R25,Z+
000090 9700      	SBIW R24,0
000091 f061      	BREQ __GLOBAL_INI_END
000092 91a5      	LPM  R26,Z+
000093 91b5      	LPM  R27,Z+
000094 9005      	LPM  R0,Z+
000095 9015      	LPM  R1,Z+
000096 01bf      	MOVW R22,R30
000097 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000098 9005      	LPM  R0,Z+
000099 920d      	ST   X+,R0
00009a 9701      	SBIW R24,1
00009b f7e1      	BRNE __GLOBAL_INI_LOOP
00009c 01fb      	MOVW R30,R22
00009d cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
00009e e0e0      	LDI  R30,__GPIOR0_INIT
00009f bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000a0 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000a1 bfed      	OUT  SPL,R30
0000a2 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000a3 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000a4 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000a5 e0d3      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000a6 940c 0274 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x300
                 
                 	.CSEG
                 ;#include <mega328p.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <eeprom.h>
                 ;#include <string.h>
                 ;#define BAUD 9600
                 ;#define SYS_CLOCK 11059200
                 ;#define DHT11_PORT PORTB
                 ;#define DHT11_DDR DDRB
                 ;#define DHT11_PIN PINB
                 ;#define DHT11_INPUTPIN 1
                 ;#define DHT11_TIMEOUT 200
                 ;#define V_REF 5.0
                 ;#define LCD_PORT PORTD
                 ;#define LCD_DPIN DDRD
                 ;#define LCD_RSPIN 2
                 ;#define LCD_ENPIN 3
                 ;
                 ;char recv_buf[20];
                 ;char recv_buf_ind = 0;
                 ;char recv_done = 0;
                 ;
                 ;void ADC_init(){
                 ; 0000 0017 void ADC_init(){
                 
                 	.CSEG
                 _ADC_init:
                 ; .FSTART _ADC_init
                 ; 0000 0018     // select Vref = AVcc
                 ; 0000 0019     ADMUX |= (1<<REFS0);
0000a8 91e0 007c 	LDS  R30,124
0000aa 64e0      	ORI  R30,0x40
0000ab 93e0 007c 	STS  124,R30
                 ; 0000 001A //    // Left adjust ADC result to allow easy 8 bit reading
                 ; 0000 001B //    ADMUX |= (1 << ADLAR);
                 ; 0000 001C     // set prescaler to 64 and enable ADC
                 ; 0000 001D     ADCSRA |= (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0)| (1 << ADEN);
0000ad 91e0 007a 	LDS  R30,122
0000af 68e7      	ORI  R30,LOW(0x87)
0000b0 93e0 007a 	STS  122,R30
                 ; 0000 001E }
0000b2 9508      	RET
                 ; .FEND
                 ;
                 ;unsigned int ADC_read(unsigned char ADCchannel){
                 ; 0000 0020 unsigned int ADC_read(unsigned char ADCchannel){
                 _ADC_read:
                 ; .FSTART _ADC_read
                 ; 0000 0021     //select ADC channel with safety mask
                 ; 0000 0022     ADMUX = (ADMUX & 0xF0) | (ADCchannel & 0x0F);
0000b3 93aa      	ST   -Y,R26
                 ;	ADCchannel -> Y+0
0000b4 91e0 007c 	LDS  R30,124
0000b6 7fe0      	ANDI R30,LOW(0xF0)
0000b7 2fae      	MOV  R26,R30
0000b8 81e8      	LD   R30,Y
0000b9 70ef      	ANDI R30,LOW(0xF)
0000ba 2bea      	OR   R30,R26
0000bb 93e0 007c 	STS  124,R30
                 ; 0000 0023     //single conversion mode
                 ; 0000 0024     ADCSRA |= (1<<ADSC);
0000bd 91e0 007a 	LDS  R30,122
0000bf 64e0      	ORI  R30,0x40
0000c0 93e0 007a 	STS  122,R30
                 ; 0000 0025     // wait until ADC conversion is complete
                 ; 0000 0026     while( ADCSRA & (1<<ADSC));
                 _0x3:
0000c2 91e0 007a 	LDS  R30,122
0000c4 74e0      	ANDI R30,LOW(0x40)
0000c5 f7e1      	BRNE _0x3
                 ; 0000 0027     return ADCL + (ADCH & 0x03) * 256;
0000c6 91e0 0078 	LDS  R30,120
0000c8 e0f0      	LDI  R31,0
0000c9 01df      	MOVW R26,R30
0000ca 91e0 0079 	LDS  R30,121
0000cc e0f0      	LDI  R31,0
0000cd 70e3      	ANDI R30,LOW(0x3)
0000ce 70f0      	ANDI R31,HIGH(0x3)
0000cf 2ffe      	MOV  R31,R30
0000d0 e0e0      	LDI  R30,0
0000d1 0fea      	ADD  R30,R26
0000d2 1ffb      	ADC  R31,R27
0000d3 c08d      	RJMP _0x20C000C
                 ; 0000 0028 }
                 ; .FEND
                 ;
                 ;void USART_init(unsigned int ubrr){
                 ; 0000 002A void USART_init(unsigned int ubrr){
                 _USART_init:
                 ; .FSTART _USART_init
                 ; 0000 002B 	// set baud rate
                 ; 0000 002C 	UBRR0H = (unsigned char)(ubrr >> 8);
0000d4 93ba      	ST   -Y,R27
0000d5 93aa      	ST   -Y,R26
                 ;	ubrr -> Y+0
0000d6 81e9      	LDD  R30,Y+1
0000d7 93e0 00c5 	STS  197,R30
                 ; 0000 002D 	UBRR0L = (unsigned char)ubrr;
0000d9 81e8      	LD   R30,Y
0000da 93e0 00c4 	STS  196,R30
                 ; 0000 002E 	// enable receiver and transmitter, receive interrupt
                 ; 0000 002F 	UCSR0B = 0x98;
0000dc e9e8      	LDI  R30,LOW(152)
0000dd 93e0 00c1 	STS  193,R30
                 ; 0000 0030 	// set frame format: 8 bit data, 1 stop bit
                 ; 0000 0031 	UCSR0C = 0x06;
0000df e0e6      	LDI  R30,LOW(6)
0000e0 93e0 00c2 	STS  194,R30
                 ; 0000 0032 }
0000e2 9622      	ADIW R28,2
0000e3 9508      	RET
                 ; .FEND
                 ;
                 ;void USART_put(unsigned char * buf){
                 ; 0000 0034 void USART_put(unsigned char * buf){
                 _USART_put:
                 ; .FSTART _USART_put
                 ; 0000 0035     int i = 0;
                 ; 0000 0036     while(buf[i] != 0){
0000e4 93ba      	ST   -Y,R27
0000e5 93aa      	ST   -Y,R26
0000e6 931a      	ST   -Y,R17
0000e7 930a      	ST   -Y,R16
                 ;	*buf -> Y+2
                 ;	i -> R16,R17
                +
0000e8 e000     +LDI R16 , LOW ( 0 )
0000e9 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x6:
0000ea 01f8      	MOVW R30,R16
0000eb 81aa      	LDD  R26,Y+2
0000ec 81bb      	LDD  R27,Y+2+1
0000ed 0fae      	ADD  R26,R30
0000ee 1fbf      	ADC  R27,R31
0000ef 91ec      	LD   R30,X
0000f0 30e0      	CPI  R30,0
0000f1 f079      	BREQ _0x8
                 ; 0000 0037         while(!(UCSR0A & (1 << UDRE0))); // wait for empty transmit buffer
                 _0x9:
0000f2 91e0 00c0 	LDS  R30,192
0000f4 72e0      	ANDI R30,LOW(0x20)
0000f5 f3e1      	BREQ _0x9
                 ; 0000 0038         UDR0 = buf[i];
0000f6 01f8      	MOVW R30,R16
0000f7 81aa      	LDD  R26,Y+2
0000f8 81bb      	LDD  R27,Y+2+1
0000f9 0fae      	ADD  R26,R30
0000fa 1fbf      	ADC  R27,R31
0000fb 91ec      	LD   R30,X
0000fc 93e0 00c6 	STS  198,R30
                 ; 0000 0039         i++;
                +
0000fe 5f0f     +SUBI R16 , LOW ( - 1 )
0000ff 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 003A     }
000100 cfe9      	RJMP _0x6
                 _0x8:
                 ; 0000 003B     // sending '\n' '\r'
                 ; 0000 003C     while(!(UCSR0A & (1 << UDRE0)));
                 _0xC:
000101 91e0 00c0 	LDS  R30,192
000103 72e0      	ANDI R30,LOW(0x20)
000104 f3e1      	BREQ _0xC
                 ; 0000 003D     UDR0 = '\n';
000105 e0ea      	LDI  R30,LOW(10)
000106 93e0 00c6 	STS  198,R30
                 ; 0000 003E     while(!(UCSR0A & (1 << UDRE0)));
                 _0xF:
000108 91e0 00c0 	LDS  R30,192
00010a 72e0      	ANDI R30,LOW(0x20)
00010b f3e1      	BREQ _0xF
                 ; 0000 003F     UDR0 = '\r';
00010c e0ed      	LDI  R30,LOW(13)
00010d 93e0 00c6 	STS  198,R30
                 ; 0000 0040 }
00010f 8119      	LDD  R17,Y+1
000110 8108      	LDD  R16,Y+0
000111 c0cd      	RJMP _0x20C000B
                 ; .FEND
                 ;
                 ;interrupt [USART_RXC] void USART_receive_isr (void){
                 ; 0000 0042 interrupt [19] void USART_receive_isr (void){
                 _USART_receive_isr:
                 ; .FSTART _USART_receive_isr
000112 920a      	ST   -Y,R0
000113 921a      	ST   -Y,R1
000114 939a      	ST   -Y,R25
000115 93aa      	ST   -Y,R26
000116 93ba      	ST   -Y,R27
000117 93ea      	ST   -Y,R30
000118 93fa      	ST   -Y,R31
000119 b7ef      	IN   R30,SREG
00011a 93ea      	ST   -Y,R30
                 ; 0000 0043     recv_buf_ind = (recv_buf_ind + 1) % 20;
00011b 2de5      	MOV  R30,R5
00011c e0f0      	LDI  R31,0
00011d 9631      	ADIW R30,1
00011e 01df      	MOVW R26,R30
00011f e1e4      	LDI  R30,LOW(20)
000120 e0f0      	LDI  R31,HIGH(20)
000121 940e 0f4d 	CALL __MODW21
000123 2e5e      	MOV  R5,R30
                 ; 0000 0044     recv_buf[recv_buf_ind] = UDR0;
000124 2da5      	MOV  R26,R5
000125 e0b0      	LDI  R27,0
000126 50a0      	SUBI R26,LOW(-_recv_buf)
000127 4fbd      	SBCI R27,HIGH(-_recv_buf)
000128 91e0 00c6 	LDS  R30,198
00012a 93ec      	ST   X,R30
                 ; 0000 0045     if(recv_buf[recv_buf_ind] == 'e') recv_done = 1;
00012b 2de5      	MOV  R30,R5
00012c e0f0      	LDI  R31,0
00012d 50e0      	SUBI R30,LOW(-_recv_buf)
00012e 4ffd      	SBCI R31,HIGH(-_recv_buf)
00012f 81a0      	LD   R26,Z
000130 36a5      	CPI  R26,LOW(0x65)
000131 f411      	BRNE _0x12
000132 e0e1      	LDI  R30,LOW(1)
000133 2e4e      	MOV  R4,R30
                 ; 0000 0046 }
                 _0x12:
000134 91e9      	LD   R30,Y+
000135 bfef      	OUT  SREG,R30
000136 91f9      	LD   R31,Y+
000137 91e9      	LD   R30,Y+
000138 91b9      	LD   R27,Y+
000139 91a9      	LD   R26,Y+
00013a 9199      	LD   R25,Y+
00013b 9019      	LD   R1,Y+
00013c 9009      	LD   R0,Y+
00013d 9518      	RETI
                 ; .FEND
                 ;
                 ;void LCD_action(unsigned char cmnd){
                 ; 0000 0048 void LCD_action(unsigned char cmnd){
                 _LCD_action:
                 ; .FSTART _LCD_action
                 ; 0000 0049     // 4 bit mode
                 ; 0000 004A     LCD_PORT = (LCD_PORT & 0x0F) | (cmnd & 0xF0); // send upper nibble
00013e 93aa      	ST   -Y,R26
                 ;	cmnd -> Y+0
00013f b1eb      	IN   R30,0xB
000140 70ef      	ANDI R30,LOW(0xF)
000141 2fae      	MOV  R26,R30
000142 81e8      	LD   R30,Y
000143 7fe0      	ANDI R30,LOW(0xF0)
000144 2bea      	OR   R30,R26
000145 b9eb      	OUT  0xB,R30
                 ; 0000 004B     LCD_PORT &= ~(1 << LCD_RSPIN); // RS = 0
000146 985a      	CBI  0xB,2
                 ; 0000 004C     LCD_PORT |= (1 << LCD_ENPIN); // EN = 1
000147 9a5b      	SBI  0xB,3
                 ; 0000 004D     delay_us(1);
                +
000148 e084     +LDI R24 , LOW ( 4 )
                +__DELAY_USB_LOOP :
000149 958a     +DEC R24
00014a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 4
                 ; 0000 004E     LCD_PORT &= ~(1 << LCD_ENPIN); // EN = 0
00014b 985b      	CBI  0xB,3
                 ; 0000 004F     delay_us(200);
                +
00014c e289     +LDI R24 , LOW ( 553 )
00014d e092     +LDI R25 , HIGH ( 553 )
                +__DELAY_USW_LOOP :
00014e 9701     +SBIW R24 , 1
00014f f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 553
                 ; 0000 0050     LCD_PORT = (LCD_PORT & 0x0F) | (cmnd << 4); // send lower nibble
000150 b1eb      	IN   R30,0xB
000151 70ef      	ANDI R30,LOW(0xF)
000152 2fae      	MOV  R26,R30
000153 81e8      	LD   R30,Y
000154 95e2      	SWAP R30
000155 7fe0      	ANDI R30,0xF0
000156 2bea      	OR   R30,R26
000157 b9eb      	OUT  0xB,R30
                 ; 0000 0051     LCD_PORT |= (1 << LCD_ENPIN); // EN = 1
000158 9a5b      	SBI  0xB,3
                 ; 0000 0052     delay_us(1);
                +
000159 e084     +LDI R24 , LOW ( 4 )
                +__DELAY_USB_LOOP :
00015a 958a     +DEC R24
00015b f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 4
                 ; 0000 0053     LCD_PORT &= ~(1 << LCD_ENPIN); // EN = 0
00015c 985b      	CBI  0xB,3
                 ; 0000 0054     delay_ms(2);
00015d e0a2      	LDI  R26,LOW(2)
00015e e0b0      	LDI  R27,0
00015f 940e 0cef 	CALL _delay_ms
                 ; 0000 0055 }
                 _0x20C000C:
000161 9621      	ADIW R28,1
000162 9508      	RET
                 ; .FEND
                 ;
                 ;void LCD_init(void){
                 ; 0000 0057 void LCD_init(void){
                 _LCD_init:
                 ; .FSTART _LCD_init
                 ; 0000 0058     LCD_DPIN = 0xFF;
000163 efef      	LDI  R30,LOW(255)
000164 b9ea      	OUT  0xA,R30
                 ; 0000 0059     delay_ms(20); // wait before LCD activation
000165 e1a4      	LDI  R26,LOW(20)
000166 e0b0      	LDI  R27,0
000167 940e 0cef 	CALL _delay_ms
                 ; 0000 005A     LCD_action(0x02); // 4 bit control
000169 e0a2      	LDI  R26,LOW(2)
00016a dfd3      	RCALL _LCD_action
                 ; 0000 005B     LCD_action(0x28); // initialization of 16X2 LCD in 4bit mode
00016b e2a8      	LDI  R26,LOW(40)
00016c dfd1      	RCALL _LCD_action
                 ; 0000 005C     LCD_action(0x0C); // disable cursor
00016d e0ac      	LDI  R26,LOW(12)
00016e dfcf      	RCALL _LCD_action
                 ; 0000 005D     LCD_action(0x06); // auto increment cursor
00016f e0a6      	LDI  R26,LOW(6)
000170 dfcd      	RCALL _LCD_action
                 ; 0000 005E     LCD_action(0x01); // clear LCD
000171 e0a1      	LDI  R26,LOW(1)
000172 dfcb      	RCALL _LCD_action
                 ; 0000 005F     LCD_action(0x80); // cursor at home position
000173 e8a0      	LDI  R26,LOW(128)
000174 dfc9      	RCALL _LCD_action
                 ; 0000 0060     delay_ms(2);
000175 e0a2      	LDI  R26,LOW(2)
000176 e0b0      	LDI  R27,0
000177 940e 0cef 	CALL _delay_ms
                 ; 0000 0061 }
000179 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;void LCD_clear(void){
                 ; 0000 0064 void LCD_clear(void){
                 _LCD_clear:
                 ; .FSTART _LCD_clear
                 ; 0000 0065     LCD_action(0x01); // clear LCD
00017a e0a1      	LDI  R26,LOW(1)
00017b dfc2      	RCALL _LCD_action
                 ; 0000 0066     delay_ms(2);
00017c e0a2      	LDI  R26,LOW(2)
00017d e0b0      	LDI  R27,0
00017e 940e 0cef 	CALL _delay_ms
                 ; 0000 0067     LCD_action(0x80); // move to line 1, position 1
000180 e8a0      	LDI  R26,LOW(128)
000181 dfbc      	RCALL _LCD_action
                 ; 0000 0068 }
000182 9508      	RET
                 ; .FEND
                 ;
                 ;void LCD_print(char *str){
                 ; 0000 006A void LCD_print(char *str){
                 _LCD_print:
                 ; .FSTART _LCD_print
                 ; 0000 006B     int i;
                 ; 0000 006C 	for(i=0; str[i]!=0; i++)
000183 93ba      	ST   -Y,R27
000184 93aa      	ST   -Y,R26
000185 931a      	ST   -Y,R17
000186 930a      	ST   -Y,R16
                 ;	*str -> Y+2
                 ;	i -> R16,R17
                +
000187 e000     +LDI R16 , LOW ( 0 )
000188 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x14:
000189 01f8      	MOVW R30,R16
00018a 81aa      	LDD  R26,Y+2
00018b 81bb      	LDD  R27,Y+2+1
00018c 0fae      	ADD  R26,R30
00018d 1fbf      	ADC  R27,R31
00018e 91ec      	LD   R30,X
00018f 30e0      	CPI  R30,0
000190 f179      	BREQ _0x15
                 ; 0000 006D 	{
                 ; 0000 006E 		LCD_PORT = (LCD_PORT & 0x0F) | (str[i] & 0xF0);
000191 b1eb      	IN   R30,0xB
000192 70ef      	ANDI R30,LOW(0xF)
000193 2e0e      	MOV  R0,R30
000194 01f8      	MOVW R30,R16
000195 81aa      	LDD  R26,Y+2
000196 81bb      	LDD  R27,Y+2+1
000197 0fae      	ADD  R26,R30
000198 1fbf      	ADC  R27,R31
000199 91ec      	LD   R30,X
00019a 7fe0      	ANDI R30,LOW(0xF0)
00019b 29e0      	OR   R30,R0
00019c b9eb      	OUT  0xB,R30
                 ; 0000 006F 		LCD_PORT |= (1<<LCD_RSPIN); // RS = 1, data reg
00019d 9a5a      	SBI  0xB,2
                 ; 0000 0070 		LCD_PORT |= (1<<LCD_ENPIN); // EN = 1
00019e 9a5b      	SBI  0xB,3
                 ; 0000 0071 		delay_us(1);
                +
00019f e084     +LDI R24 , LOW ( 4 )
                +__DELAY_USB_LOOP :
0001a0 958a     +DEC R24
0001a1 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 4
                 ; 0000 0072 		LCD_PORT &= ~ (1<<LCD_ENPIN); // EN = 0
0001a2 985b      	CBI  0xB,3
                 ; 0000 0073 		delay_us(200);
                +
0001a3 e289     +LDI R24 , LOW ( 553 )
0001a4 e092     +LDI R25 , HIGH ( 553 )
                +__DELAY_USW_LOOP :
0001a5 9701     +SBIW R24 , 1
0001a6 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 553
                 ; 0000 0074 		LCD_PORT = (LCD_PORT & 0x0F) | (str[i] << 4);
0001a7 b1eb      	IN   R30,0xB
0001a8 70ef      	ANDI R30,LOW(0xF)
0001a9 2e0e      	MOV  R0,R30
0001aa 01f8      	MOVW R30,R16
0001ab 81aa      	LDD  R26,Y+2
0001ac 81bb      	LDD  R27,Y+2+1
0001ad 0fae      	ADD  R26,R30
0001ae 1fbf      	ADC  R27,R31
0001af 91ec      	LD   R30,X
0001b0 95e2      	SWAP R30
0001b1 7fe0      	ANDI R30,0xF0
0001b2 29e0      	OR   R30,R0
0001b3 b9eb      	OUT  0xB,R30
                 ; 0000 0075 		LCD_PORT |= (1<<LCD_ENPIN);
0001b4 9a5b      	SBI  0xB,3
                 ; 0000 0076 		delay_us(1);
                +
0001b5 e084     +LDI R24 , LOW ( 4 )
                +__DELAY_USB_LOOP :
0001b6 958a     +DEC R24
0001b7 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 4
                 ; 0000 0077 		LCD_PORT &= ~ (1<<LCD_ENPIN);
0001b8 985b      	CBI  0xB,3
                 ; 0000 0078 		delay_ms(2);
0001b9 e0a2      	LDI  R26,LOW(2)
0001ba e0b0      	LDI  R27,0
0001bb 940e 0cef 	CALL _delay_ms
                 ; 0000 0079 	}
                +
0001bd 5f0f     +SUBI R16 , LOW ( - 1 )
0001be 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0001bf cfc9      	RJMP _0x14
                 _0x15:
                 ; 0000 007A }
0001c0 8119      	LDD  R17,Y+1
0001c1 8108      	LDD  R16,Y+0
0001c2 c01c      	RJMP _0x20C000B
                 ; .FEND
                 ;
                 ;void LCD_print_pos(char row, char pos, char *str){
                 ; 0000 007C void LCD_print_pos(char row, char pos, char *str){
                 _LCD_print_pos:
                 ; .FSTART _LCD_print_pos
                 ; 0000 007D     if(row == 0 && pos < 16) // line 1
0001c3 93ba      	ST   -Y,R27
0001c4 93aa      	ST   -Y,R26
                 ;	row -> Y+3
                 ;	pos -> Y+2
                 ;	*str -> Y+0
0001c5 81ab      	LDD  R26,Y+3
0001c6 30a0      	CPI  R26,LOW(0x0)
0001c7 f419      	BRNE _0x17
0001c8 81aa      	LDD  R26,Y+2
0001c9 31a0      	CPI  R26,LOW(0x10)
0001ca f008      	BRLO _0x18
                 _0x17:
0001cb c004      	RJMP _0x16
                 _0x18:
                 ; 0000 007E         LCD_action((pos & 0x0F)|0x80);
0001cc 81ea      	LDD  R30,Y+2
0001cd 70ef      	ANDI R30,LOW(0xF)
0001ce 68e0      	ORI  R30,0x80
0001cf c00a      	RJMP _0x49
                 ; 0000 007F     else if(row == 1 && pos < 16) // line 2
                 _0x16:
0001d0 81ab      	LDD  R26,Y+3
0001d1 30a1      	CPI  R26,LOW(0x1)
0001d2 f419      	BRNE _0x1B
0001d3 81aa      	LDD  R26,Y+2
0001d4 31a0      	CPI  R26,LOW(0x10)
0001d5 f008      	BRLO _0x1C
                 _0x1B:
0001d6 c005      	RJMP _0x1A
                 _0x1C:
                 ; 0000 0080         LCD_action((pos & 0x0F)|0xC0);
0001d7 81ea      	LDD  R30,Y+2
0001d8 70ef      	ANDI R30,LOW(0xF)
0001d9 6ce0      	ORI  R30,LOW(0xC0)
                 _0x49:
0001da 2fae      	MOV  R26,R30
0001db df62      	RCALL _LCD_action
                 ; 0000 0081     LCD_print(str);
                 _0x1A:
0001dc 81a8      	LD   R26,Y
0001dd 81b9      	LDD  R27,Y+1
0001de dfa4      	RCALL _LCD_print
                 ; 0000 0082 }
                 _0x20C000B:
0001df 9624      	ADIW R28,4
0001e0 9508      	RET
                 ; .FEND
                 ;
                 ;int read_dht11(int* temp, int* humidity){
                 ; 0000 0084 int read_dht11(int* temp, int* humidity){
                 _read_dht11:
                 ; .FSTART _read_dht11
                 ; 0000 0085     unsigned char i, j, bytes[5], time_count;
                 ; 0000 0086     //reset port
                 ; 0000 0087     DHT11_DDR |= (1<<DHT11_INPUTPIN); //output mode
0001e1 93ba      	ST   -Y,R27
0001e2 93aa      	ST   -Y,R26
0001e3 9725      	SBIW R28,5
0001e4 940e 0fcf 	CALL __SAVELOCR4
                 ;	*temp -> Y+11
                 ;	*humidity -> Y+9
                 ;	i -> R17
                 ;	j -> R16
                 ;	bytes -> Y+4
                 ;	time_count -> R19
0001e6 9a21      	SBI  0x4,1
                 ; 0000 0088     DHT11_PORT |= (1<<DHT11_INPUTPIN); // high
0001e7 9a29      	SBI  0x5,1
                 ; 0000 0089     delay_ms(100);
0001e8 e6a4      	LDI  R26,LOW(100)
0001e9 e0b0      	LDI  R27,0
0001ea 940e 0cef 	CALL _delay_ms
                 ; 0000 008A 	// send start signal
                 ; 0000 008B 	DHT11_PORT &= ~(1<<DHT11_INPUTPIN); // low
0001ec 9829      	CBI  0x5,1
                 ; 0000 008C 	delay_ms(18);
0001ed e1a2      	LDI  R26,LOW(18)
0001ee e0b0      	LDI  R27,0
0001ef 940e 0cef 	CALL _delay_ms
                 ; 0000 008D 	DHT11_PORT |= (1<<DHT11_INPUTPIN); // high
0001f1 9a29      	SBI  0x5,1
                 ; 0000 008E 	DHT11_DDR &= ~(1<<DHT11_INPUTPIN); //input mode
0001f2 9821      	CBI  0x4,1
                 ; 0000 008F 	delay_us(40);
                +
0001f3 e983     +LDI R24 , LOW ( 147 )
                +__DELAY_USB_LOOP :
0001f4 958a     +DEC R24
0001f5 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 147
                 ; 0000 0090     // check DHT response signal
                 ; 0000 0091     if((DHT11_PIN & (1 << DHT11_INPUTPIN))){
0001f6 9b19      	SBIS 0x3,1
0001f7 c003      	RJMP _0x1D
                 ; 0000 0092         // error
                 ; 0000 0093         return -1;
0001f8 efef      	LDI  R30,LOW(65535)
0001f9 efff      	LDI  R31,HIGH(65535)
0001fa c075      	RJMP _0x20C000A
                 ; 0000 0094     }
                 ; 0000 0095     delay_us(80);
                 _0x1D:
                +
0001fb ed8d     +LDI R24 , LOW ( 221 )
0001fc e090     +LDI R25 , HIGH ( 221 )
                +__DELAY_USW_LOOP :
0001fd 9701     +SBIW R24 , 1
0001fe f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 221
                 ; 0000 0096     // check DHT pulls up
                 ; 0000 0097     if(!(DHT11_PIN & (1 << DHT11_INPUTPIN))){
0001ff 9919      	SBIC 0x3,1
000200 c003      	RJMP _0x1E
                 ; 0000 0098         // error
                 ; 0000 0099         return -2;
000201 efee      	LDI  R30,LOW(65534)
000202 efff      	LDI  R31,HIGH(65534)
000203 c06c      	RJMP _0x20C000A
                 ; 0000 009A     }
                 ; 0000 009B     delay_us(80);
                 _0x1E:
                +
000204 ed8d     +LDI R24 , LOW ( 221 )
000205 e090     +LDI R25 , HIGH ( 221 )
                +__DELAY_USW_LOOP :
000206 9701     +SBIW R24 , 1
000207 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 221
                 ; 0000 009C     // read 5 bytes
                 ; 0000 009D     for(i = 0; i < 5; i++){
000208 e010      	LDI  R17,LOW(0)
                 _0x20:
000209 3015      	CPI  R17,5
00020a f5e0      	BRSH _0x21
                 ; 0000 009E         unsigned char result = 0;
                 ; 0000 009F         for(j = 0; j < 8; j++){
00020b 9721      	SBIW R28,1
00020c e0e0      	LDI  R30,LOW(0)
00020d 83e8      	ST   Y,R30
                 ;	*temp -> Y+12
                 ;	*humidity -> Y+10
                 ;	bytes -> Y+5
                 ;	result -> Y+0
00020e e000      	LDI  R16,LOW(0)
                 _0x23:
00020f 3008      	CPI  R16,8
000210 f558      	BRSH _0x24
                 ; 0000 00A0             time_count = 0;
000211 e030      	LDI  R19,LOW(0)
                 ; 0000 00A1             // wait for a high voltage
                 ; 0000 00A2             while(!(DHT11_PIN & (1 << DHT11_INPUTPIN))){
                 _0x25:
000212 9919      	SBIC 0x3,1
000213 c00b      	RJMP _0x27
                 ; 0000 00A3                 time_count++;
000214 5f3f      	SUBI R19,-1
                 ; 0000 00A4                 if(time_count > DHT11_TIMEOUT) return -3; // timeout error
000215 3c39      	CPI  R19,201
000216 f020      	BRLO _0x28
000217 efed      	LDI  R30,LOW(65533)
000218 efff      	LDI  R31,HIGH(65533)
000219 9621      	ADIW R28,1
00021a c055      	RJMP _0x20C000A
                 ; 0000 00A5                 delay_us(1);
                 _0x28:
                +
00021b e084     +LDI R24 , LOW ( 4 )
                +__DELAY_USB_LOOP :
00021c 958a     +DEC R24
00021d f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 4
                 ; 0000 00A6             }
00021e cff3      	RJMP _0x25
                 _0x27:
                 ; 0000 00A7             delay_us(30);
                +
00021f e68f     +LDI R24 , LOW ( 111 )
                +__DELAY_USB_LOOP :
000220 958a     +DEC R24
000221 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 111
                 ; 0000 00A8             if(DHT11_PIN & (1 << DHT11_INPUTPIN)) // high after 30 us -> bit 1
000222 9b19      	SBIS 0x3,1
000223 c008      	RJMP _0x29
                 ; 0000 00A9                 result |= (1<<(7-j));
000224 e0e7      	LDI  R30,LOW(7)
000225 1be0      	SUB  R30,R16
000226 e0a1      	LDI  R26,LOW(1)
000227 940e 0eb7 	CALL __LSLB12
000229 81a8      	LD   R26,Y
00022a 2bea      	OR   R30,R26
00022b 83e8      	ST   Y,R30
                 ; 0000 00AA             time_count = 0;
                 _0x29:
00022c e030      	LDI  R19,LOW(0)
                 ; 0000 00AB             // wait until get low
                 ; 0000 00AC             while(DHT11_PIN & (1 << DHT11_INPUTPIN)){
                 _0x2A:
00022d 9b19      	SBIS 0x3,1
00022e c00b      	RJMP _0x2C
                 ; 0000 00AD                 time_count++;
00022f 5f3f      	SUBI R19,-1
                 ; 0000 00AE                 if(time_count > DHT11_TIMEOUT) return -3; // timeout error
000230 3c39      	CPI  R19,201
000231 f020      	BRLO _0x2D
000232 efed      	LDI  R30,LOW(65533)
000233 efff      	LDI  R31,HIGH(65533)
000234 9621      	ADIW R28,1
000235 c03a      	RJMP _0x20C000A
                 ; 0000 00AF                 delay_us(1);
                 _0x2D:
                +
000236 e084     +LDI R24 , LOW ( 4 )
                +__DELAY_USB_LOOP :
000237 958a     +DEC R24
000238 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 4
                 ; 0000 00B0             }
000239 cff3      	RJMP _0x2A
                 _0x2C:
                 ; 0000 00B1         }
00023a 5f0f      	SUBI R16,-1
00023b cfd3      	RJMP _0x23
                 _0x24:
                 ; 0000 00B2         bytes[i] = result;
00023c 2fe1      	MOV  R30,R17
00023d e0f0      	LDI  R31,0
00023e 01de      	MOVW R26,R28
00023f 9615      	ADIW R26,5
000240 0fea      	ADD  R30,R26
000241 1ffb      	ADC  R31,R27
000242 81a8      	LD   R26,Y
000243 83a0      	STD  Z+0,R26
                 ; 0000 00B3     }
000244 9621      	ADIW R28,1
000245 5f1f      	SUBI R17,-1
000246 cfc2      	RJMP _0x20
                 _0x21:
                 ; 0000 00B4     // reset port
                 ; 0000 00B5     DHT11_DDR |= (1<<DHT11_INPUTPIN); //output mode
000247 9a21      	SBI  0x4,1
                 ; 0000 00B6     DHT11_PORT |= (1<<DHT11_INPUTPIN); // high
000248 9a29      	SBI  0x5,1
                 ; 0000 00B7     delay_ms(100);
000249 e6a4      	LDI  R26,LOW(100)
00024a e0b0      	LDI  R27,0
00024b 940e 0cef 	CALL _delay_ms
                 ; 0000 00B8     // checksum
                 ; 0000 00B9     if((unsigned char)(bytes[0] + bytes[1] + bytes[2] + bytes[3]) == bytes[4]){
00024d 81ac      	LDD  R26,Y+4
00024e 27bb      	CLR  R27
00024f 81ed      	LDD  R30,Y+5
000250 e0f0      	LDI  R31,0
000251 0fae      	ADD  R26,R30
000252 1fbf      	ADC  R27,R31
000253 81ee      	LDD  R30,Y+6
000254 e0f0      	LDI  R31,0
000255 0fae      	ADD  R26,R30
000256 1fbf      	ADC  R27,R31
000257 81ef      	LDD  R30,Y+7
000258 e0f0      	LDI  R31,0
000259 0fea      	ADD  R30,R26
00025a 1ffb      	ADC  R31,R27
00025b 2fae      	MOV  R26,R30
00025c 85e8      	LDD  R30,Y+8
00025d 17ea      	CP   R30,R26
00025e f479      	BRNE _0x2E
                 ; 0000 00BA         *temp = bytes[2];
00025f 81ee      	LDD  R30,Y+6
000260 85ab      	LDD  R26,Y+11
000261 85bc      	LDD  R27,Y+11+1
000262 e0f0      	LDI  R31,0
000263 93ed      	ST   X+,R30
000264 93fc      	ST   X,R31
                 ; 0000 00BB //        *temp = *temp << 8;
                 ; 0000 00BC //        *temp = *temp | bytes[3];
                 ; 0000 00BD         *humidity = bytes[0];
000265 81ec      	LDD  R30,Y+4
000266 85a9      	LDD  R26,Y+9
000267 85ba      	LDD  R27,Y+9+1
000268 e0f0      	LDI  R31,0
000269 93ed      	ST   X+,R30
00026a 93fc      	ST   X,R31
                 ; 0000 00BE //        *humidity = *humidity << 8;
                 ; 0000 00BF //        *humidity = *humidity | bytes[1];
                 ; 0000 00C0         return 0;
00026b e0e0      	LDI  R30,LOW(0)
00026c e0f0      	LDI  R31,HIGH(0)
00026d c002      	RJMP _0x20C000A
                 ; 0000 00C1     }
                 ; 0000 00C2     // checksum error
                 ; 0000 00C3     return -4;
                 _0x2E:
00026e efec      	LDI  R30,LOW(65532)
00026f efff      	LDI  R31,HIGH(65532)
                 _0x20C000A:
000270 940e 0fd6 	CALL __LOADLOCR4
000272 962d      	ADIW R28,13
000273 9508      	RET
                 ; 0000 00C4 }
                 ; .FEND
                 ;
                 ;void main(void){
                 ; 0000 00C6 void main(void){
                 _main:
                 ; .FSTART _main
                 ; 0000 00C7     int temp, humidity, err_code, light, temp_threshold = -1, humidity_threshold = -1, light_threshold = -1;
                 ; 0000 00C8     char i, j, recv_data[20], loop_count = 0, *p;
                 ; 0000 00C9     char mss[24];
                 ; 0000 00CA     #asm("sei ");
000274 97e9      	SBIW R28,57
000275 e18d      	LDI  R24,29
000276 e1aa      	LDI  R26,LOW(26)
000277 e0b0      	LDI  R27,HIGH(26)
000278 e6ea      	LDI  R30,LOW(_0x2F*2)
000279 e0f0      	LDI  R31,HIGH(_0x2F*2)
00027a 940e 0fdb 	CALL __INITLOCB
                 ;	temp -> R16,R17
                 ;	humidity -> R18,R19
                 ;	err_code -> R20,R21
                 ;	light -> Y+55
                 ;	temp_threshold -> Y+53
                 ;	humidity_threshold -> Y+51
                 ;	light_threshold -> Y+49
                 ;	i -> Y+48
                 ;	j -> Y+47
                 ;	recv_data -> Y+27
                 ;	loop_count -> Y+26
                 ;	*p -> Y+24
                 ;	mss -> Y+0
00027c 9478      	sei 
                 ; 0000 00CB     // ADC init - ADC6
                 ; 0000 00CC     ADC_init();
00027d de2a      	RCALL _ADC_init
                 ; 0000 00CD 	USART_init(SYS_CLOCK/16/BAUD - 1);
00027e e4a7      	LDI  R26,LOW(71)
00027f e0b0      	LDI  R27,0
000280 de53      	RCALL _USART_init
                 ; 0000 00CE     LCD_init();
000281 dee1      	RCALL _LCD_init
                 ; 0000 00CF     // init led pin
                 ; 0000 00D0     DDRB |= 0x1C; // 2,3,4
000282 b1e4      	IN   R30,0x4
000283 61ec      	ORI  R30,LOW(0x1C)
000284 b9e4      	OUT  0x4,R30
                 ; 0000 00D1     temp_threshold = eeprom_read_word(0);
000285 e0a0      	LDI  R26,LOW(0)
000286 e0b0      	LDI  R27,HIGH(0)
000287 940e 0fa0 	CALL __EEPROMRDW
000289 abed      	STD  Y+53,R30
00028a abfe      	STD  Y+53+1,R31
                 ; 0000 00D2     humidity_threshold = eeprom_read_word(2);
00028b e0a2      	LDI  R26,LOW(2)
00028c e0b0      	LDI  R27,HIGH(2)
00028d 940e 0fa0 	CALL __EEPROMRDW
00028f abeb      	STD  Y+51,R30
000290 abfc      	STD  Y+51+1,R31
                 ; 0000 00D3     light_threshold = eeprom_read_word(4);
000291 e0a4      	LDI  R26,LOW(4)
000292 e0b0      	LDI  R27,HIGH(4)
000293 940e 0fa0 	CALL __EEPROMRDW
000295 abe9      	STD  Y+49,R30
000296 abfa      	STD  Y+49+1,R31
                 ; 0000 00D4     //USART_put("Hello from ATmega328p");
                 ; 0000 00D5 	while(1){
                 _0x30:
                 ; 0000 00D6         // check uart data received
                 ; 0000 00D7         loop_count++;
000297 8dea      	LDD  R30,Y+26
000298 5fef      	SUBI R30,-LOW(1)
000299 8fea      	STD  Y+26,R30
                 ; 0000 00D8         if(recv_done){
00029a 2044      	TST  R4
00029b f409      	BRNE PC+2
00029c c0c5      	RJMP _0x33
                 ; 0000 00D9             recv_done = 0;
00029d 2444      	CLR  R4
                 ; 0000 00DA             for(i = 0; i < 20; i++) // find 's';
00029e e0e0      	LDI  R30,LOW(0)
00029f abe8      	STD  Y+48,R30
                 _0x35:
0002a0 a9a8      	LDD  R26,Y+48
0002a1 31a4      	CPI  R26,LOW(0x14)
0002a2 f458      	BRSH _0x36
                 ; 0000 00DB                 if(recv_buf[i] == 's') break;
0002a3 a9e8      	LDD  R30,Y+48
0002a4 e0f0      	LDI  R31,0
0002a5 50e0      	SUBI R30,LOW(-_recv_buf)
0002a6 4ffd      	SBCI R31,HIGH(-_recv_buf)
0002a7 81a0      	LD   R26,Z
0002a8 37a3      	CPI  R26,LOW(0x73)
0002a9 f021      	BREQ _0x36
                 ; 0000 00DC             if(i != 20){
0002aa a9e8      	LDD  R30,Y+48
0002ab 5fef      	SUBI R30,-LOW(1)
0002ac abe8      	STD  Y+48,R30
0002ad cff2      	RJMP _0x35
                 _0x36:
0002ae a9a8      	LDD  R26,Y+48
0002af 31a4      	CPI  R26,LOW(0x14)
0002b0 f409      	BRNE PC+2
0002b1 c0b0      	RJMP _0x38
                 ; 0000 00DD                 j = (i + 1) % 20;
0002b2 a9e8      	LDD  R30,Y+48
0002b3 e0f0      	LDI  R31,0
0002b4 9631      	ADIW R30,1
0002b5 01df      	MOVW R26,R30
0002b6 e1e4      	LDI  R30,LOW(20)
0002b7 e0f0      	LDI  R31,HIGH(20)
0002b8 940e 0f4d 	CALL __MODW21
0002ba a7ef      	STD  Y+47,R30
                 ; 0000 00DE                 memset(recv_data, 0, 20);
0002bb 01fe      	MOVW R30,R28
0002bc 967b      	ADIW R30,27
0002bd 93fa      	ST   -Y,R31
0002be 93ea      	ST   -Y,R30
0002bf e0e0      	LDI  R30,LOW(0)
0002c0 93ea      	ST   -Y,R30
0002c1 e1a4      	LDI  R26,LOW(20)
0002c2 e0b0      	LDI  R27,0
0002c3 940e 0b18 	CALL _memset
                 ; 0000 00DF                 while(j != i){
                 _0x39:
0002c5 a9e8      	LDD  R30,Y+48
0002c6 a5af      	LDD  R26,Y+47
0002c7 17ea      	CP   R30,R26
0002c8 f151      	BREQ _0x3B
                 ; 0000 00E0                     if(recv_buf[j] == 'e') break;
0002c9 a5ef      	LDD  R30,Y+47
0002ca e0f0      	LDI  R31,0
0002cb 50e0      	SUBI R30,LOW(-_recv_buf)
0002cc 4ffd      	SBCI R31,HIGH(-_recv_buf)
0002cd 81a0      	LD   R26,Z
0002ce 36a5      	CPI  R26,LOW(0x65)
0002cf f119      	BREQ _0x3B
                 ; 0000 00E1                     recv_data[(j-i+20)%20-1] = recv_buf[j];
0002d0 a5af      	LDD  R26,Y+47
0002d1 27bb      	CLR  R27
0002d2 a9e8      	LDD  R30,Y+48
0002d3 e0f0      	LDI  R31,0
0002d4 940e 0f99 	CALL __SWAPW12
0002d6 1bea      	SUB  R30,R26
0002d7 0bfb      	SBC  R31,R27
0002d8 9674      	ADIW R30,20
0002d9 01df      	MOVW R26,R30
0002da e1e4      	LDI  R30,LOW(20)
0002db e0f0      	LDI  R31,HIGH(20)
0002dc 940e 0f4d 	CALL __MODW21
0002de 9731      	SBIW R30,1
0002df 01de      	MOVW R26,R28
0002e0 965b      	ADIW R26,27
0002e1 0fae      	ADD  R26,R30
0002e2 1fbf      	ADC  R27,R31
0002e3 a5ef      	LDD  R30,Y+47
0002e4 e0f0      	LDI  R31,0
0002e5 50e0      	SUBI R30,LOW(-_recv_buf)
0002e6 4ffd      	SBCI R31,HIGH(-_recv_buf)
0002e7 81e0      	LD   R30,Z
0002e8 93ec      	ST   X,R30
                 ; 0000 00E2                     j = (j+1) % 20;
0002e9 a5ef      	LDD  R30,Y+47
0002ea e0f0      	LDI  R31,0
0002eb 9631      	ADIW R30,1
0002ec 01df      	MOVW R26,R30
0002ed e1e4      	LDI  R30,LOW(20)
0002ee e0f0      	LDI  R31,HIGH(20)
0002ef 940e 0f4d 	CALL __MODW21
0002f1 a7ef      	STD  Y+47,R30
                 ; 0000 00E3                 }
0002f2 cfd2      	RJMP _0x39
                 _0x3B:
                 ; 0000 00E4                 if(j != i){
0002f3 a9e8      	LDD  R30,Y+48
0002f4 a5af      	LDD  R26,Y+47
0002f5 17ea      	CP   R30,R26
0002f6 f409      	BRNE PC+2
0002f7 c06a      	RJMP _0x3D
                 ; 0000 00E5                     i = 0;
0002f8 e0e0      	LDI  R30,LOW(0)
0002f9 abe8      	STD  Y+48,R30
                 ; 0000 00E6                     p = strrchr(recv_data, ' ');
0002fa 01fe      	MOVW R30,R28
0002fb 967b      	ADIW R30,27
0002fc 93fa      	ST   -Y,R31
0002fd 93ea      	ST   -Y,R30
0002fe e2a0      	LDI  R26,LOW(32)
0002ff 940e 0b4e 	CALL _strrchr
000301 8fe8      	STD  Y+24,R30
000302 8ff9      	STD  Y+24+1,R31
                 ; 0000 00E7                     sscanf(p + 1, "%d", &light_threshold);
000303 9631      	ADIW R30,1
000304 93fa      	ST   -Y,R31
000305 93ea      	ST   -Y,R30
                +
000306 e8e8     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000307 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000308 93fa      	ST   -Y,R31
000309 93ea      	ST   -Y,R30
00030a 01fe      	MOVW R30,R28
00030b 96f5      	ADIW R30,53
00030c 2766      	CLR  R22
00030d 2777      	CLR  R23
00030e 940e 0f89 	CALL __PUTPARD1
000310 e084      	LDI  R24,4
000311 940e 0ae5 	CALL _sscanf
000313 9628      	ADIW R28,8
                 ; 0000 00E8                     *p = 0;
000314 8da8      	LDD  R26,Y+24
000315 8db9      	LDD  R27,Y+24+1
000316 e0e0      	LDI  R30,LOW(0)
000317 93ec      	ST   X,R30
                 ; 0000 00E9                     p = strrchr(recv_data, ' ');
000318 01fe      	MOVW R30,R28
000319 967b      	ADIW R30,27
00031a 93fa      	ST   -Y,R31
00031b 93ea      	ST   -Y,R30
00031c e2a0      	LDI  R26,LOW(32)
00031d 940e 0b4e 	CALL _strrchr
00031f 8fe8      	STD  Y+24,R30
000320 8ff9      	STD  Y+24+1,R31
                 ; 0000 00EA                     sscanf(p + 1, "%d", &humidity_threshold);
000321 9631      	ADIW R30,1
000322 93fa      	ST   -Y,R31
000323 93ea      	ST   -Y,R30
                +
000324 e8e8     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000325 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000326 93fa      	ST   -Y,R31
000327 93ea      	ST   -Y,R30
000328 01fe      	MOVW R30,R28
000329 96f7      	ADIW R30,55
00032a 2766      	CLR  R22
00032b 2777      	CLR  R23
00032c 940e 0f89 	CALL __PUTPARD1
00032e e084      	LDI  R24,4
00032f 940e 0ae5 	CALL _sscanf
000331 9628      	ADIW R28,8
                 ; 0000 00EB                     *p = 0;
000332 8da8      	LDD  R26,Y+24
000333 8db9      	LDD  R27,Y+24+1
000334 e0e0      	LDI  R30,LOW(0)
000335 93ec      	ST   X,R30
                 ; 0000 00EC                     p = strrchr(recv_data, ' ');
000336 01fe      	MOVW R30,R28
000337 967b      	ADIW R30,27
000338 93fa      	ST   -Y,R31
000339 93ea      	ST   -Y,R30
00033a e2a0      	LDI  R26,LOW(32)
00033b 940e 0b4e 	CALL _strrchr
00033d 8fe8      	STD  Y+24,R30
00033e 8ff9      	STD  Y+24+1,R31
                 ; 0000 00ED                     sscanf(p + 1, "%d", &temp_threshold);
00033f 9631      	ADIW R30,1
000340 93fa      	ST   -Y,R31
000341 93ea      	ST   -Y,R30
                +
000342 e8e8     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000343 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000344 93fa      	ST   -Y,R31
000345 93ea      	ST   -Y,R30
000346 01fe      	MOVW R30,R28
000347 96f9      	ADIW R30,57
000348 2766      	CLR  R22
000349 2777      	CLR  R23
00034a 940e 0f89 	CALL __PUTPARD1
00034c e084      	LDI  R24,4
00034d 940e 0ae5 	CALL _sscanf
00034f 9628      	ADIW R28,8
                 ; 0000 00EE                     // eeprom  write
                 ; 0000 00EF                     eeprom_write_word(0, temp_threshold);
000350 a9ed      	LDD  R30,Y+53
000351 a9fe      	LDD  R31,Y+53+1
000352 e0a0      	LDI  R26,LOW(0)
000353 e0b0      	LDI  R27,HIGH(0)
000354 940e 0fb0 	CALL __EEPROMWRW
                 ; 0000 00F0                     eeprom_write_word(2, humidity_threshold);
000356 a9eb      	LDD  R30,Y+51
000357 a9fc      	LDD  R31,Y+51+1
000358 e0a2      	LDI  R26,LOW(2)
000359 e0b0      	LDI  R27,HIGH(2)
00035a 940e 0fb0 	CALL __EEPROMWRW
                 ; 0000 00F1                     eeprom_write_word(4, light_threshold);
00035c a9e9      	LDD  R30,Y+49
00035d a9fa      	LDD  R31,Y+49+1
00035e e0a4      	LDI  R26,LOW(4)
00035f e0b0      	LDI  R27,HIGH(4)
000360 940e 0fb0 	CALL __EEPROMWRW
                 ; 0000 00F2                 }
                 ; 0000 00F3             }
                 _0x3D:
                 ; 0000 00F4         }
                 _0x38:
                 ; 0000 00F5 
                 ; 0000 00F6 
                 ; 0000 00F7         if(loop_count % 10 == 0){ // read rht11 sensor after every 1s
                 _0x33:
000362 8daa      	LDD  R26,Y+26
000363 27bb      	CLR  R27
000364 e0ea      	LDI  R30,LOW(10)
000365 e0f0      	LDI  R31,HIGH(10)
000366 940e 0f4d 	CALL __MODW21
000368 9730      	SBIW R30,0
000369 f009      	BREQ PC+2
00036a c08d      	RJMP _0x3E
                 ; 0000 00F8             light = ADC_read(6);
00036b e0a6      	LDI  R26,LOW(6)
00036c dd46      	RCALL _ADC_read
00036d abef      	STD  Y+55,R30
00036e aff8      	STD  Y+55+1,R31
                 ; 0000 00F9             if((err_code = read_dht11(&temp, &humidity)) == 0){
00036f b7ed      	IN   R30,SPL
000370 b7fe      	IN   R31,SPH
000371 9731      	SBIW R30,1
000372 93fa      	ST   -Y,R31
000373 93ea      	ST   -Y,R30
000374 931f      	PUSH R17
000375 930f      	PUSH R16
000376 b7ad      	IN   R26,SPL
000377 b7be      	IN   R27,SPH
000378 9711      	SBIW R26,1
000379 933f      	PUSH R19
00037a 932f      	PUSH R18
00037b de65      	RCALL _read_dht11
00037c 912f      	POP  R18
00037d 913f      	POP  R19
00037e 910f      	POP  R16
00037f 911f      	POP  R17
000380 01af      	MOVW R20,R30
000381 9730      	SBIW R30,0
000382 f009      	BREQ PC+2
000383 c062      	RJMP _0x3F
                 ; 0000 00FA                 sprintf(mss, "0 %d %d %d", temp, humidity, light);
000384 01fe      	MOVW R30,R28
000385 93fa      	ST   -Y,R31
000386 93ea      	ST   -Y,R30
                +
000387 e8eb     +LDI R30 , LOW ( 2 * _0x0 + ( 3 ) )
000388 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 3 ) )
                 	__POINTW1FN _0x0,3
000389 93fa      	ST   -Y,R31
00038a 93ea      	ST   -Y,R30
00038b 01f8      	MOVW R30,R16
00038c 940e 0ec5 	CALL __CWD1
00038e 940e 0f89 	CALL __PUTPARD1
000390 01f9      	MOVW R30,R18
000391 940e 0ec5 	CALL __CWD1
000393 940e 0f89 	CALL __PUTPARD1
                +
000395 01fe     +MOVW R30 , R28
000396 5bed     +SUBI R30 , LOW ( - 67 )
000397 4fff     +SBCI R31 , HIGH ( - 67 )
000398 9001     +LD R0 , Z +
000399 81f0     +LD R31 , Z
00039a 2de0     +MOV R30 , R0
                 	__GETW1SX 67
00039b 940e 0ec5 	CALL __CWD1
00039d 940e 0f89 	CALL __PUTPARD1
00039f e08c      	LDI  R24,12
0003a0 940e 08d1 	CALL _sprintf
0003a2 9660      	ADIW R28,16
                 ; 0000 00FB                 USART_put(mss);
0003a3 01de      	MOVW R26,R28
0003a4 dd3f      	RCALL _USART_put
                 ; 0000 00FC                 // LCD update
                 ; 0000 00FD                 LCD_clear();
0003a5 ddd4      	RCALL _LCD_clear
                 ; 0000 00FE                 sprintf(mss, "T:%doC, H:%d%%", temp, humidity);
0003a6 01fe      	MOVW R30,R28
0003a7 93fa      	ST   -Y,R31
0003a8 93ea      	ST   -Y,R30
                +
0003a9 e9e6     +LDI R30 , LOW ( 2 * _0x0 + ( 14 ) )
0003aa e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 14 ) )
                 	__POINTW1FN _0x0,14
0003ab 93fa      	ST   -Y,R31
0003ac 93ea      	ST   -Y,R30
0003ad 01f8      	MOVW R30,R16
0003ae 940e 0ec5 	CALL __CWD1
0003b0 940e 0f89 	CALL __PUTPARD1
0003b2 01f9      	MOVW R30,R18
0003b3 940e 0ec5 	CALL __CWD1
0003b5 940e 0f89 	CALL __PUTPARD1
0003b7 e088      	LDI  R24,8
0003b8 940e 08d1 	CALL _sprintf
0003ba 962c      	ADIW R28,12
                 ; 0000 00FF                 LCD_print(mss);
0003bb 01de      	MOVW R26,R28
0003bc ddc6      	RCALL _LCD_print
                 ; 0000 0100                 sprintf(mss, "L:%4.2f%%", light*100.0/1024);
0003bd 01fe      	MOVW R30,R28
0003be 93fa      	ST   -Y,R31
0003bf 93ea      	ST   -Y,R30
                +
0003c0 eae5     +LDI R30 , LOW ( 2 * _0x0 + ( 29 ) )
0003c1 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 29 ) )
                 	__POINTW1FN _0x0,29
0003c2 93fa      	ST   -Y,R31
0003c3 93ea      	ST   -Y,R30
0003c4 adeb      	LDD  R30,Y+59
0003c5 adfc      	LDD  R31,Y+59+1
0003c6 940e 0ec5 	CALL __CWD1
0003c8 940e 0d65 	CALL __CDF1
                +
0003ca e0a0     +LDI R26 , LOW ( 0x42C80000 )
0003cb e0b0     +LDI R27 , HIGH ( 0x42C80000 )
0003cc ec88     +LDI R24 , BYTE3 ( 0x42C80000 )
0003cd e492     +LDI R25 , BYTE4 ( 0x42C80000 )
                 	__GETD2N 0x42C80000
0003ce 940e 0def 	CALL __MULF12
0003d0 01df      	MOVW R26,R30
0003d1 01cb      	MOVW R24,R22
                +
0003d2 e0e0     +LDI R30 , LOW ( 0x44800000 )
0003d3 e0f0     +LDI R31 , HIGH ( 0x44800000 )
0003d4 e860     +LDI R22 , BYTE3 ( 0x44800000 )
0003d5 e474     +LDI R23 , BYTE4 ( 0x44800000 )
                 	__GETD1N 0x44800000
0003d6 940e 0e3d 	CALL __DIVF21
0003d8 940e 0f89 	CALL __PUTPARD1
0003da e084      	LDI  R24,4
0003db 940e 08d1 	CALL _sprintf
0003dd 9628      	ADIW R28,8
                 ; 0000 0101                 LCD_print_pos(1, 0, mss);
0003de e0e1      	LDI  R30,LOW(1)
0003df 93ea      	ST   -Y,R30
0003e0 e0e0      	LDI  R30,LOW(0)
0003e1 93ea      	ST   -Y,R30
0003e2 01de      	MOVW R26,R28
0003e3 9612      	ADIW R26,2
0003e4 ddde      	RCALL _LCD_print_pos
                 ; 0000 0102 
                 ; 0000 0103             } else{
0003e5 c012      	RJMP _0x40
                 _0x3F:
                 ; 0000 0104                 sprintf(mss, "-1 %d", err_code);
0003e6 01fe      	MOVW R30,R28
0003e7 93fa      	ST   -Y,R31
0003e8 93ea      	ST   -Y,R30
                +
0003e9 eaef     +LDI R30 , LOW ( 2 * _0x0 + ( 39 ) )
0003ea e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 39 ) )
                 	__POINTW1FN _0x0,39
0003eb 93fa      	ST   -Y,R31
0003ec 93ea      	ST   -Y,R30
0003ed 01fa      	MOVW R30,R20
0003ee 940e 0ec5 	CALL __CWD1
0003f0 940e 0f89 	CALL __PUTPARD1
0003f2 e084      	LDI  R24,4
0003f3 940e 08d1 	CALL _sprintf
0003f5 9628      	ADIW R28,8
                 ; 0000 0105                 USART_put(mss);
0003f6 01de      	MOVW R26,R28
0003f7 dcec      	RCALL _USART_put
                 ; 0000 0106             }
                 _0x40:
                 ; 0000 0107         }
                 ; 0000 0108 
                 ; 0000 0109         if(loop_count >= 55){ // send threshold
                 _0x3E:
0003f8 8daa      	LDD  R26,Y+26
0003f9 33a7      	CPI  R26,LOW(0x37)
0003fa f108      	BRLO _0x41
                 ; 0000 010A             loop_count = 0;
0003fb e0e0      	LDI  R30,LOW(0)
0003fc 8fea      	STD  Y+26,R30
                 ; 0000 010B             sprintf(mss, "1 %d %d %d", temp_threshold, humidity_threshold, light_threshold);
0003fd 01fe      	MOVW R30,R28
0003fe 93fa      	ST   -Y,R31
0003ff 93ea      	ST   -Y,R30
                +
000400 ebe5     +LDI R30 , LOW ( 2 * _0x0 + ( 45 ) )
000401 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 45 ) )
                 	__POINTW1FN _0x0,45
000402 93fa      	ST   -Y,R31
000403 93ea      	ST   -Y,R30
000404 ade9      	LDD  R30,Y+57
000405 adfa      	LDD  R31,Y+57+1
000406 940e 0ec5 	CALL __CWD1
000408 940e 0f89 	CALL __PUTPARD1
00040a adeb      	LDD  R30,Y+59
00040b adfc      	LDD  R31,Y+59+1
00040c 940e 0ec5 	CALL __CWD1
00040e 940e 0f89 	CALL __PUTPARD1
000410 aded      	LDD  R30,Y+61
000411 adfe      	LDD  R31,Y+61+1
000412 940e 0ec5 	CALL __CWD1
000414 940e 0f89 	CALL __PUTPARD1
000416 e08c      	LDI  R24,12
000417 940e 08d1 	CALL _sprintf
000419 9660      	ADIW R28,16
                 ; 0000 010C             USART_put(mss);
00041a 01de      	MOVW R26,R28
00041b dcc8      	RCALL _USART_put
                 ; 0000 010D         }
                 ; 0000 010E 
                 ; 0000 010F         // check threshold
                 ; 0000 0110         PORTB.2 = temp_threshold < temp;
                 _0x41:
00041c 01f8      	MOVW R30,R16
00041d a9ad      	LDD  R26,Y+53
00041e a9be      	LDD  R27,Y+53+1
00041f 940e 0eca 	CALL __LTW12
000421 30e0      	CPI  R30,0
000422 f411      	BRNE _0x42
000423 982a      	CBI  0x5,2
000424 c001      	RJMP _0x43
                 _0x42:
000425 9a2a      	SBI  0x5,2
                 _0x43:
                 ; 0000 0111         PORTB.3 = humidity_threshold < humidity;
000426 01f9      	MOVW R30,R18
000427 a9ab      	LDD  R26,Y+51
000428 a9bc      	LDD  R27,Y+51+1
000429 940e 0eca 	CALL __LTW12
00042b 30e0      	CPI  R30,0
00042c f411      	BRNE _0x44
00042d 982b      	CBI  0x5,3
00042e c001      	RJMP _0x45
                 _0x44:
00042f 9a2b      	SBI  0x5,3
                 _0x45:
                 ; 0000 0112         PORTB.4 = light_threshold > light;
000430 a9ef      	LDD  R30,Y+55
000431 adf8      	LDD  R31,Y+55+1
000432 a9a9      	LDD  R26,Y+49
000433 a9ba      	LDD  R27,Y+49+1
000434 940e 0ed0 	CALL __GTW12
000436 30e0      	CPI  R30,0
000437 f411      	BRNE _0x46
000438 982c      	CBI  0x5,4
000439 c001      	RJMP _0x47
                 _0x46:
00043a 9a2c      	SBI  0x5,4
                 _0x47:
                 ; 0000 0113 
                 ; 0000 0114 		delay_ms(100);
00043b e6a4      	LDI  R26,LOW(100)
00043c e0b0      	LDI  R27,0
00043d 940e 0cef 	CALL _delay_ms
                 ; 0000 0115 	}
00043f ce57      	RJMP _0x30
                 ; 0000 0116 }
                 _0x48:
000440 cfff      	RJMP _0x48
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
000441 93ba      	ST   -Y,R27
000442 93aa      	ST   -Y,R26
000443 931a      	ST   -Y,R17
000444 930a      	ST   -Y,R16
000445 81aa      	LDD  R26,Y+2
000446 81bb      	LDD  R27,Y+2+1
000447 9612      	ADIW R26,2
000448 940e 0f6b 	CALL __GETW1P
00044a 9730      	SBIW R30,0
00044b f159      	BREQ _0x2000016
00044c 81aa      	LDD  R26,Y+2
00044d 81bb      	LDD  R27,Y+2+1
00044e 9614      	ADIW R26,4
00044f 940e 0f6b 	CALL __GETW1P
000451 018f      	MOVW R16,R30
000452 9730      	SBIW R30,0
000453 f061      	BREQ _0x2000018
                +
000454 3002     +CPI R16 , LOW ( 2 )
000455 e0e0     +LDI R30 , HIGH ( 2 )
000456 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000457 f098      	BRLO _0x2000019
000458 01f8      	MOVW R30,R16
000459 9731      	SBIW R30,1
00045a 018f      	MOVW R16,R30
                +
00045b 81aa     +LDD R26 , Y + 2
00045c 81bb     +LDD R27 , Y + 2 + 1
00045d 9614     +ADIW R26 , 4
00045e 93ed     +ST X + , R30
00045f 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000018:
000460 81aa      	LDD  R26,Y+2
000461 81bb      	LDD  R27,Y+2+1
000462 9612      	ADIW R26,2
000463 91ed      	LD   R30,X+
000464 91fd      	LD   R31,X+
000465 9631      	ADIW R30,1
000466 93fe      	ST   -X,R31
000467 93ee      	ST   -X,R30
000468 9731      	SBIW R30,1
000469 81ac      	LDD  R26,Y+4
00046a 83a0      	STD  Z+0,R26
                 _0x2000019:
00046b 81aa      	LDD  R26,Y+2
00046c 81bb      	LDD  R27,Y+2+1
00046d 940e 0f6b 	CALL __GETW1P
00046f 23ff      	TST  R31
000470 f02a      	BRMI _0x200001A
000471 91ed      	LD   R30,X+
000472 91fd      	LD   R31,X+
000473 9631      	ADIW R30,1
000474 93fe      	ST   -X,R31
000475 93ee      	ST   -X,R30
                 _0x200001A:
000476 c006      	RJMP _0x200001B
                 _0x2000016:
000477 81aa      	LDD  R26,Y+2
000478 81bb      	LDD  R27,Y+2+1
000479 efef      	LDI  R30,LOW(65535)
00047a efff      	LDI  R31,HIGH(65535)
00047b 93ed      	ST   X+,R30
00047c 93fc      	ST   X,R31
                 _0x200001B:
00047d 8119      	LDD  R17,Y+1
00047e 8108      	LDD  R16,Y+0
00047f 940c 0b26 	JMP  _0x20C0004
                 ; .FEND
                 __ftoe_G100:
                 ; .FSTART __ftoe_G100
000481 93ba      	ST   -Y,R27
000482 93aa      	ST   -Y,R26
000483 9724      	SBIW R28,4
000484 e0e0      	LDI  R30,LOW(0)
000485 83e8      	ST   Y,R30
000486 83e9      	STD  Y+1,R30
000487 e8e0      	LDI  R30,LOW(128)
000488 83ea      	STD  Y+2,R30
000489 e3ef      	LDI  R30,LOW(63)
00048a 83eb      	STD  Y+3,R30
00048b 940e 0fcf 	CALL __SAVELOCR4
00048d 85ee      	LDD  R30,Y+14
00048e 85ff      	LDD  R31,Y+14+1
00048f 3fef      	CPI  R30,LOW(0xFFFF)
000490 efaf      	LDI  R26,HIGH(0xFFFF)
000491 07fa      	CPC  R31,R26
000492 f449      	BRNE _0x200001F
000493 85e8      	LDD  R30,Y+8
000494 85f9      	LDD  R31,Y+8+1
000495 93fa      	ST   -Y,R31
000496 93ea      	ST   -Y,R30
                +
000497 eca0     +LDI R26 , LOW ( 2 * _0x2000000 + ( 0 ) )
000498 e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW2FN _0x2000000,0
000499 940e 0b28 	CALL _strcpyf
00049b c144      	RJMP _0x20C0009
                 _0x200001F:
00049c 3fef      	CPI  R30,LOW(0x7FFF)
00049d e7af      	LDI  R26,HIGH(0x7FFF)
00049e 07fa      	CPC  R31,R26
00049f f449      	BRNE _0x200001E
0004a0 85e8      	LDD  R30,Y+8
0004a1 85f9      	LDD  R31,Y+8+1
0004a2 93fa      	ST   -Y,R31
0004a3 93ea      	ST   -Y,R30
                +
0004a4 eca1     +LDI R26 , LOW ( 2 * _0x2000000 + ( 1 ) )
0004a5 e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW2FN _0x2000000,1
0004a6 940e 0b28 	CALL _strcpyf
0004a8 c137      	RJMP _0x20C0009
                 _0x200001E:
0004a9 85ab      	LDD  R26,Y+11
0004aa 30a7      	CPI  R26,LOW(0x7)
0004ab f010      	BRLO _0x2000021
0004ac e0e6      	LDI  R30,LOW(6)
0004ad 87eb      	STD  Y+11,R30
                 _0x2000021:
0004ae 851b      	LDD  R17,Y+11
                 _0x2000022:
0004af 2fe1      	MOV  R30,R17
0004b0 5011      	SUBI R17,1
0004b1 30e0      	CPI  R30,0
0004b2 f079      	BREQ _0x2000024
                +
0004b3 81ac     +LDD R26 , Y + 4
0004b4 81bd     +LDD R27 , Y + 4 + 1
0004b5 818e     +LDD R24 , Y + 4 + 2
0004b6 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
0004b7 e0e0     +LDI R30 , LOW ( 0x41200000 )
0004b8 e0f0     +LDI R31 , HIGH ( 0x41200000 )
0004b9 e260     +LDI R22 , BYTE3 ( 0x41200000 )
0004ba e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0004bb 940e 0def 	CALL __MULF12
                +
0004bd 83ec     +STD Y + 4 , R30
0004be 83fd     +STD Y + 4 + 1 , R31
0004bf 836e     +STD Y + 4 + 2 , R22
0004c0 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
0004c1 cfed      	RJMP _0x2000022
                 _0x2000024:
                +
0004c2 85ec     +LDD R30 , Y + 12
0004c3 85fd     +LDD R31 , Y + 12 + 1
0004c4 856e     +LDD R22 , Y + 12 + 2
0004c5 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0004c6 940e 0fc9 	CALL __CPD10
0004c8 f481      	BRNE _0x2000025
0004c9 e030      	LDI  R19,LOW(0)
                +
0004ca 81ac     +LDD R26 , Y + 4
0004cb 81bd     +LDD R27 , Y + 4 + 1
0004cc 818e     +LDD R24 , Y + 4 + 2
0004cd 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
0004ce e0e0     +LDI R30 , LOW ( 0x41200000 )
0004cf e0f0     +LDI R31 , HIGH ( 0x41200000 )
0004d0 e260     +LDI R22 , BYTE3 ( 0x41200000 )
0004d1 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0004d2 940e 0def 	CALL __MULF12
                +
0004d4 83ec     +STD Y + 4 , R30
0004d5 83fd     +STD Y + 4 + 1 , R31
0004d6 836e     +STD Y + 4 + 2 , R22
0004d7 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
0004d8 c07d      	RJMP _0x2000026
                 _0x2000025:
0004d9 853b      	LDD  R19,Y+11
                +
0004da 81ec     +LDD R30 , Y + 4
0004db 81fd     +LDD R31 , Y + 4 + 1
0004dc 816e     +LDD R22 , Y + 4 + 2
0004dd 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
0004de 85ac     +LDD R26 , Y + 12
0004df 85bd     +LDD R27 , Y + 12 + 1
0004e0 858e     +LDD R24 , Y + 12 + 2
0004e1 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0004e2 940e 0e82 	CALL __CMPF12
0004e4 f009      	BREQ PC+2
0004e5 f408      	BRCC PC+2
0004e6 c026      	RJMP _0x2000027
                +
0004e7 81ac     +LDD R26 , Y + 4
0004e8 81bd     +LDD R27 , Y + 4 + 1
0004e9 818e     +LDD R24 , Y + 4 + 2
0004ea 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
0004eb e0e0     +LDI R30 , LOW ( 0x41200000 )
0004ec e0f0     +LDI R31 , HIGH ( 0x41200000 )
0004ed e260     +LDI R22 , BYTE3 ( 0x41200000 )
0004ee e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0004ef 940e 0def 	CALL __MULF12
                +
0004f1 83ec     +STD Y + 4 , R30
0004f2 83fd     +STD Y + 4 + 1 , R31
0004f3 836e     +STD Y + 4 + 2 , R22
0004f4 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                 _0x2000028:
                +
0004f5 81ec     +LDD R30 , Y + 4
0004f6 81fd     +LDD R31 , Y + 4 + 1
0004f7 816e     +LDD R22 , Y + 4 + 2
0004f8 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
0004f9 85ac     +LDD R26 , Y + 12
0004fa 85bd     +LDD R27 , Y + 12 + 1
0004fb 858e     +LDD R24 , Y + 12 + 2
0004fc 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0004fd 940e 0e82 	CALL __CMPF12
0004ff f060      	BRLO _0x200002A
                +
000500 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000501 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000502 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000503 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000504 940e 0def 	CALL __MULF12
                +
000506 87ec     +STD Y + 12 , R30
000507 87fd     +STD Y + 12 + 1 , R31
000508 876e     +STD Y + 12 + 2 , R22
000509 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00050a 5f3f      	SUBI R19,-LOW(1)
00050b cfe9      	RJMP _0x2000028
                 _0x200002A:
00050c c025      	RJMP _0x200002B
                 _0x2000027:
                 _0x200002C:
                +
00050d 81ec     +LDD R30 , Y + 4
00050e 81fd     +LDD R31 , Y + 4 + 1
00050f 816e     +LDD R22 , Y + 4 + 2
000510 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
000511 85ac     +LDD R26 , Y + 12
000512 85bd     +LDD R27 , Y + 12 + 1
000513 858e     +LDD R24 , Y + 12 + 2
000514 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000515 940e 0e82 	CALL __CMPF12
000517 f460      	BRSH _0x200002E
                +
000518 e0e0     +LDI R30 , LOW ( 0x41200000 )
000519 e0f0     +LDI R31 , HIGH ( 0x41200000 )
00051a e260     +LDI R22 , BYTE3 ( 0x41200000 )
00051b e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00051c 940e 0def 	CALL __MULF12
                +
00051e 87ec     +STD Y + 12 , R30
00051f 87fd     +STD Y + 12 + 1 , R31
000520 876e     +STD Y + 12 + 2 , R22
000521 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000522 5031      	SUBI R19,LOW(1)
000523 cfe9      	RJMP _0x200002C
                 _0x200002E:
                +
000524 81ac     +LDD R26 , Y + 4
000525 81bd     +LDD R27 , Y + 4 + 1
000526 818e     +LDD R24 , Y + 4 + 2
000527 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000528 e0e0     +LDI R30 , LOW ( 0x41200000 )
000529 e0f0     +LDI R31 , HIGH ( 0x41200000 )
00052a e260     +LDI R22 , BYTE3 ( 0x41200000 )
00052b e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00052c 940e 0def 	CALL __MULF12
                +
00052e 83ec     +STD Y + 4 , R30
00052f 83fd     +STD Y + 4 + 1 , R31
000530 836e     +STD Y + 4 + 2 , R22
000531 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                 _0x200002B:
                +
000532 85ec     +LDD R30 , Y + 12
000533 85fd     +LDD R31 , Y + 12 + 1
000534 856e     +LDD R22 , Y + 12 + 2
000535 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
                +
000536 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000537 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000538 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000539 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
00053a 940e 0d9f 	CALL __ADDF12
                +
00053c 87ec     +STD Y + 12 , R30
00053d 87fd     +STD Y + 12 + 1 , R31
00053e 876e     +STD Y + 12 + 2 , R22
00053f 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
                +
000540 81ec     +LDD R30 , Y + 4
000541 81fd     +LDD R31 , Y + 4 + 1
000542 816e     +LDD R22 , Y + 4 + 2
000543 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
000544 85ac     +LDD R26 , Y + 12
000545 85bd     +LDD R27 , Y + 12 + 1
000546 858e     +LDD R24 , Y + 12 + 2
000547 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000548 940e 0e82 	CALL __CMPF12
00054a f058      	BRLO _0x200002F
                +
00054b eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00054c ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00054d ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00054e e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00054f 940e 0def 	CALL __MULF12
                +
000551 87ec     +STD Y + 12 , R30
000552 87fd     +STD Y + 12 + 1 , R31
000553 876e     +STD Y + 12 + 2 , R22
000554 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000555 5f3f      	SUBI R19,-LOW(1)
                 _0x200002F:
                 _0x2000026:
000556 e010      	LDI  R17,LOW(0)
                 _0x2000030:
000557 85eb      	LDD  R30,Y+11
000558 17e1      	CP   R30,R17
000559 f408      	BRSH PC+2
00055a c04f      	RJMP _0x2000032
                +
00055b 81ac     +LDD R26 , Y + 4
00055c 81bd     +LDD R27 , Y + 4 + 1
00055d 818e     +LDD R24 , Y + 4 + 2
00055e 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
00055f eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000560 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000561 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000562 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000563 940e 0def 	CALL __MULF12
                +
000565 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000566 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000567 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000568 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000569 940e 0d9f 	CALL __ADDF12
00056b 01df      	MOVW R26,R30
00056c 01cb      	MOVW R24,R22
00056d 940e 0bb0 	CALL _floor
                +
00056f 83ec     +STD Y + 4 , R30
000570 83fd     +STD Y + 4 + 1 , R31
000571 836e     +STD Y + 4 + 2 , R22
000572 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                +
000573 85ac     +LDD R26 , Y + 12
000574 85bd     +LDD R27 , Y + 12 + 1
000575 858e     +LDD R24 , Y + 12 + 2
000576 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000577 940e 0e3d 	CALL __DIVF21
000579 940e 0d2c 	CALL __CFD1U
00057b 2f0e      	MOV  R16,R30
00057c 85a8      	LDD  R26,Y+8
00057d 85b9      	LDD  R27,Y+8+1
00057e 9611      	ADIW R26,1
00057f 87a8      	STD  Y+8,R26
000580 87b9      	STD  Y+8+1,R27
000581 9711      	SBIW R26,1
000582 5de0      	SUBI R30,-LOW(48)
000583 93ec      	ST   X,R30
000584 2fe0      	MOV  R30,R16
000585 27ff      	CLR  R31
000586 2766      	CLR  R22
000587 2777      	CLR  R23
000588 940e 0d65 	CALL __CDF1
                +
00058a 81ac     +LDD R26 , Y + 4
00058b 81bd     +LDD R27 , Y + 4 + 1
00058c 818e     +LDD R24 , Y + 4 + 2
00058d 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00058e 940e 0def 	CALL __MULF12
                +
000590 85ac     +LDD R26 , Y + 12
000591 85bd     +LDD R27 , Y + 12 + 1
000592 858e     +LDD R24 , Y + 12 + 2
000593 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000594 940e 0f93 	CALL __SWAPD12
000596 940e 0d98 	CALL __SUBF12
                +
000598 87ec     +STD Y + 12 , R30
000599 87fd     +STD Y + 12 + 1 , R31
00059a 876e     +STD Y + 12 + 2 , R22
00059b 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00059c 2fe1      	MOV  R30,R17
00059d 5f1f      	SUBI R17,-1
00059e 30e0      	CPI  R30,0
00059f f009      	BREQ _0x2000033
0005a0 cfb6      	RJMP _0x2000030
                 _0x2000033:
0005a1 85a8      	LDD  R26,Y+8
0005a2 85b9      	LDD  R27,Y+8+1
0005a3 9611      	ADIW R26,1
0005a4 87a8      	STD  Y+8,R26
0005a5 87b9      	STD  Y+8+1,R27
0005a6 9711      	SBIW R26,1
0005a7 e2ee      	LDI  R30,LOW(46)
0005a8 93ec      	ST   X,R30
0005a9 cfad      	RJMP _0x2000030
                 _0x2000032:
0005aa 85e8      	LDD  R30,Y+8
0005ab 85f9      	LDD  R31,Y+8+1
0005ac 9631      	ADIW R30,1
0005ad 87e8      	STD  Y+8,R30
0005ae 87f9      	STD  Y+8+1,R31
0005af 9731      	SBIW R30,1
0005b0 85aa      	LDD  R26,Y+10
0005b1 83a0      	STD  Z+0,R26
0005b2 3030      	CPI  R19,0
0005b3 f42c      	BRGE _0x2000034
0005b4 9531      	NEG  R19
0005b5 85a8      	LDD  R26,Y+8
0005b6 85b9      	LDD  R27,Y+8+1
0005b7 e2ed      	LDI  R30,LOW(45)
0005b8 c003      	RJMP _0x200011C
                 _0x2000034:
0005b9 85a8      	LDD  R26,Y+8
0005ba 85b9      	LDD  R27,Y+8+1
0005bb e2eb      	LDI  R30,LOW(43)
                 _0x200011C:
0005bc 93ec      	ST   X,R30
0005bd 85e8      	LDD  R30,Y+8
0005be 85f9      	LDD  R31,Y+8+1
0005bf 9631      	ADIW R30,1
0005c0 87e8      	STD  Y+8,R30
0005c1 87f9      	STD  Y+8+1,R31
0005c2 9631      	ADIW R30,1
0005c3 87e8      	STD  Y+8,R30
0005c4 87f9      	STD  Y+8+1,R31
0005c5 9731      	SBIW R30,1
0005c6 01bf      	MOVW R22,R30
0005c7 2fa3      	MOV  R26,R19
0005c8 e0ea      	LDI  R30,LOW(10)
0005c9 940e 0f04 	CALL __DIVB21
0005cb 5de0      	SUBI R30,-LOW(48)
0005cc 01db      	MOVW R26,R22
0005cd 93ec      	ST   X,R30
0005ce 85e8      	LDD  R30,Y+8
0005cf 85f9      	LDD  R31,Y+8+1
0005d0 9631      	ADIW R30,1
0005d1 87e8      	STD  Y+8,R30
0005d2 87f9      	STD  Y+8+1,R31
0005d3 9731      	SBIW R30,1
0005d4 01bf      	MOVW R22,R30
0005d5 2fa3      	MOV  R26,R19
0005d6 e0ea      	LDI  R30,LOW(10)
0005d7 940e 0f41 	CALL __MODB21
0005d9 5de0      	SUBI R30,-LOW(48)
0005da 01db      	MOVW R26,R22
0005db 93ec      	ST   X,R30
0005dc 85a8      	LDD  R26,Y+8
0005dd 85b9      	LDD  R27,Y+8+1
0005de e0e0      	LDI  R30,LOW(0)
0005df 93ec      	ST   X,R30
                 _0x20C0009:
0005e0 940e 0fd6 	CALL __LOADLOCR4
0005e2 9660      	ADIW R28,16
0005e3 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
0005e4 93ba      	ST   -Y,R27
0005e5 93aa      	ST   -Y,R26
0005e6 97ef      	SBIW R28,63
0005e7 9761      	SBIW R28,17
0005e8 940e 0fcd 	CALL __SAVELOCR6
0005ea e010      	LDI  R17,0
                +
0005eb 01fe     +MOVW R30 , R28
0005ec 5ae8     +SUBI R30 , LOW ( - 88 )
0005ed 4fff     +SBCI R31 , HIGH ( - 88 )
0005ee 9001     +LD R0 , Z +
0005ef 81f0     +LD R31 , Z
0005f0 2de0     +MOV R30 , R0
                 	__GETW1SX 88
0005f1 87e8      	STD  Y+8,R30
0005f2 87f9      	STD  Y+8+1,R31
                +
0005f3 01fe     +MOVW R30 , R28
0005f4 5aea     +SUBI R30 , LOW ( - 86 )
0005f5 4fff     +SBCI R31 , HIGH ( - 86 )
0005f6 9001     +LD R0 , Z +
0005f7 81f0     +LD R31 , Z
0005f8 2de0     +MOV R30 , R0
                 	__GETW1SX 86
0005f9 83ee      	STD  Y+6,R30
0005fa 83ff      	STD  Y+6+1,R31
0005fb 81ae      	LDD  R26,Y+6
0005fc 81bf      	LDD  R27,Y+6+1
0005fd e0e0      	LDI  R30,LOW(0)
0005fe e0f0      	LDI  R31,HIGH(0)
0005ff 93ed      	ST   X+,R30
000600 93fc      	ST   X,R31
                 _0x2000036:
000601 01de      	MOVW R26,R28
000602 5aa4      	SUBI R26,LOW(-(92))
000603 4fbf      	SBCI R27,HIGH(-(92))
000604 91ed      	LD   R30,X+
000605 91fd      	LD   R31,X+
000606 9631      	ADIW R30,1
000607 93fe      	ST   -X,R31
000608 93ee      	ST   -X,R30
000609 9731      	SBIW R30,1
00060a 91e4      	LPM  R30,Z
00060b 2f2e      	MOV  R18,R30
00060c 30e0      	CPI  R30,0
00060d f409      	BRNE PC+2
00060e c2b9      	RJMP _0x2000038
00060f 2fe1      	MOV  R30,R17
000610 30e0      	CPI  R30,0
000611 f459      	BRNE _0x200003C
000612 3225      	CPI  R18,37
000613 f411      	BRNE _0x200003D
000614 e011      	LDI  R17,LOW(1)
000615 c006      	RJMP _0x200003E
                 _0x200003D:
000616 932a      	ST   -Y,R18
000617 81af      	LDD  R26,Y+7
000618 85b8      	LDD  R27,Y+7+1
000619 85e9      	LDD  R30,Y+9
00061a 85fa      	LDD  R31,Y+9+1
00061b 9509      	ICALL
                 _0x200003E:
00061c c2aa      	RJMP _0x200003B
                 _0x200003C:
00061d 30e1      	CPI  R30,LOW(0x1)
00061e f4e1      	BRNE _0x200003F
00061f 3225      	CPI  R18,37
000620 f439      	BRNE _0x2000040
000621 932a      	ST   -Y,R18
000622 81af      	LDD  R26,Y+7
000623 85b8      	LDD  R27,Y+7+1
000624 85e9      	LDD  R30,Y+9
000625 85fa      	LDD  R31,Y+9+1
000626 9509      	ICALL
000627 c29e      	RJMP _0x200011D
                 _0x2000040:
000628 e012      	LDI  R17,LOW(2)
000629 e0e0      	LDI  R30,LOW(0)
00062a 8bed      	STD  Y+21,R30
00062b e000      	LDI  R16,LOW(0)
00062c 322d      	CPI  R18,45
00062d f411      	BRNE _0x2000041
00062e e001      	LDI  R16,LOW(1)
00062f c297      	RJMP _0x200003B
                 _0x2000041:
000630 322b      	CPI  R18,43
000631 f419      	BRNE _0x2000042
000632 e2eb      	LDI  R30,LOW(43)
000633 8bed      	STD  Y+21,R30
000634 c292      	RJMP _0x200003B
                 _0x2000042:
000635 3220      	CPI  R18,32
000636 f419      	BRNE _0x2000043
000637 e2e0      	LDI  R30,LOW(32)
000638 8bed      	STD  Y+21,R30
000639 c28d      	RJMP _0x200003B
                 _0x2000043:
00063a c002      	RJMP _0x2000044
                 _0x200003F:
00063b 30e2      	CPI  R30,LOW(0x2)
00063c f439      	BRNE _0x2000045
                 _0x2000044:
00063d e050      	LDI  R21,LOW(0)
00063e e013      	LDI  R17,LOW(3)
00063f 3320      	CPI  R18,48
000640 f411      	BRNE _0x2000046
000641 6800      	ORI  R16,LOW(128)
000642 c284      	RJMP _0x200003B
                 _0x2000046:
000643 c002      	RJMP _0x2000047
                 _0x2000045:
000644 30e3      	CPI  R30,LOW(0x3)
000645 f491      	BRNE _0x2000048
                 _0x2000047:
000646 3320      	CPI  R18,48
000647 f010      	BRLO _0x200004A
000648 332a      	CPI  R18,58
000649 f008      	BRLO _0x200004B
                 _0x200004A:
00064a c007      	RJMP _0x2000049
                 _0x200004B:
00064b e0aa      	LDI  R26,LOW(10)
00064c 9f5a      	MUL  R21,R26
00064d 2d50      	MOV  R21,R0
00064e 2fe2      	MOV  R30,R18
00064f 53e0      	SUBI R30,LOW(48)
000650 0f5e      	ADD  R21,R30
000651 c275      	RJMP _0x200003B
                 _0x2000049:
000652 e040      	LDI  R20,LOW(0)
000653 322e      	CPI  R18,46
000654 f411      	BRNE _0x200004C
000655 e014      	LDI  R17,LOW(4)
000656 c270      	RJMP _0x200003B
                 _0x200004C:
000657 c00f      	RJMP _0x200004D
                 _0x2000048:
000658 30e4      	CPI  R30,LOW(0x4)
000659 f499      	BRNE _0x200004F
00065a 3320      	CPI  R18,48
00065b f010      	BRLO _0x2000051
00065c 332a      	CPI  R18,58
00065d f008      	BRLO _0x2000052
                 _0x2000051:
00065e c008      	RJMP _0x2000050
                 _0x2000052:
00065f 6200      	ORI  R16,LOW(32)
000660 e0aa      	LDI  R26,LOW(10)
000661 9f4a      	MUL  R20,R26
000662 2d40      	MOV  R20,R0
000663 2fe2      	MOV  R30,R18
000664 53e0      	SUBI R30,LOW(48)
000665 0f4e      	ADD  R20,R30
000666 c260      	RJMP _0x200003B
                 _0x2000050:
                 _0x200004D:
000667 362c      	CPI  R18,108
000668 f419      	BRNE _0x2000053
000669 6002      	ORI  R16,LOW(2)
00066a e015      	LDI  R17,LOW(5)
00066b c25b      	RJMP _0x200003B
                 _0x2000053:
00066c c003      	RJMP _0x2000054
                 _0x200004F:
00066d 30e5      	CPI  R30,LOW(0x5)
00066e f009      	BREQ PC+2
00066f c257      	RJMP _0x200003B
                 _0x2000054:
000670 2fe2      	MOV  R30,R18
000671 36e3      	CPI  R30,LOW(0x63)
000672 f4a1      	BRNE _0x2000059
                +
000673 01fe     +MOVW R30 , R28
000674 5ae6     +SUBI R30 , LOW ( - 90 )
000675 4fff     +SBCI R31 , HIGH ( - 90 )
000676 9001     +LD R0 , Z +
000677 81f0     +LD R31 , Z
000678 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000679 9734      	SBIW R30,4
                +
00067a 01de     +MOVW R26 , R28
00067b 5aa6     +SUBI R26 , LOW ( - 90 )
00067c 4fbf     +SBCI R27 , HIGH ( - 90 )
00067d 93ed     +ST X + , R30
00067e 93fc     +ST X , R31
                 	__PUTW1SX 90
00067f 81a4      	LDD  R26,Z+4
000680 93aa      	ST   -Y,R26
000681 81af      	LDD  R26,Y+7
000682 85b8      	LDD  R27,Y+7+1
000683 85e9      	LDD  R30,Y+9
000684 85fa      	LDD  R31,Y+9+1
000685 9509      	ICALL
000686 c23f      	RJMP _0x200005A
                 _0x2000059:
000687 34e5      	CPI  R30,LOW(0x45)
000688 f011      	BREQ _0x200005D
000689 36e5      	CPI  R30,LOW(0x65)
00068a f409      	BRNE _0x200005E
                 _0x200005D:
00068b c003      	RJMP _0x200005F
                 _0x200005E:
00068c 36e6      	CPI  R30,LOW(0x66)
00068d f009      	BREQ PC+2
00068e c068      	RJMP _0x2000060
                 _0x200005F:
00068f 01fe      	MOVW R30,R28
000690 9676      	ADIW R30,22
000691 87ee      	STD  Y+14,R30
000692 87ff      	STD  Y+14+1,R31
                +
000693 01de     +MOVW R26 , R28
000694 5aa6     +SUBI R26 , LOW ( - 90 )
000695 4fbf     +SBCI R27 , HIGH ( - 90 )
000696 900d     +LD R0 , X +
000697 91bc     +LD R27 , X
000698 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000699 940e 0f6f 	CALL __GETD1P
                +
00069b 87ea     +STD Y + 10 , R30
00069c 87fb     +STD Y + 10 + 1 , R31
00069d 876c     +STD Y + 10 + 2 , R22
00069e 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
                +
00069f 01fe     +MOVW R30 , R28
0006a0 5ae6     +SUBI R30 , LOW ( - 90 )
0006a1 4fff     +SBCI R31 , HIGH ( - 90 )
0006a2 9001     +LD R0 , Z +
0006a3 81f0     +LD R31 , Z
0006a4 2de0     +MOV R30 , R0
                 	__GETW1SX 90
0006a5 9734      	SBIW R30,4
                +
0006a6 01de     +MOVW R26 , R28
0006a7 5aa6     +SUBI R26 , LOW ( - 90 )
0006a8 4fbf     +SBCI R27 , HIGH ( - 90 )
0006a9 93ed     +ST X + , R30
0006aa 93fc     +ST X , R31
                 	__PUTW1SX 90
0006ab 85ad      	LDD  R26,Y+13
0006ac 23aa      	TST  R26
0006ad f032      	BRMI _0x2000061
0006ae 89ad      	LDD  R26,Y+21
0006af 32ab      	CPI  R26,LOW(0x2B)
0006b0 f079      	BREQ _0x2000063
0006b1 32a0      	CPI  R26,LOW(0x20)
0006b2 f0b9      	BREQ _0x2000065
0006b3 c01e      	RJMP _0x2000066
                 _0x2000061:
                +
0006b4 85ea     +LDD R30 , Y + 10
0006b5 85fb     +LDD R31 , Y + 10 + 1
0006b6 856c     +LDD R22 , Y + 10 + 2
0006b7 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
0006b8 940e 0cf9 	CALL __ANEGF1
                +
0006ba 87ea     +STD Y + 10 , R30
0006bb 87fb     +STD Y + 10 + 1 , R31
0006bc 876c     +STD Y + 10 + 2 , R22
0006bd 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0006be e2ed      	LDI  R30,LOW(45)
0006bf 8bed      	STD  Y+21,R30
                 _0x2000063:
0006c0 ff07      	SBRS R16,7
0006c1 c008      	RJMP _0x2000067
0006c2 89ed      	LDD  R30,Y+21
0006c3 93ea      	ST   -Y,R30
0006c4 81af      	LDD  R26,Y+7
0006c5 85b8      	LDD  R27,Y+7+1
0006c6 85e9      	LDD  R30,Y+9
0006c7 85fa      	LDD  R31,Y+9+1
0006c8 9509      	ICALL
0006c9 c008      	RJMP _0x2000068
                 _0x2000067:
                 _0x2000065:
0006ca 85ee      	LDD  R30,Y+14
0006cb 85ff      	LDD  R31,Y+14+1
0006cc 9631      	ADIW R30,1
0006cd 87ee      	STD  Y+14,R30
0006ce 87ff      	STD  Y+14+1,R31
0006cf 9731      	SBIW R30,1
0006d0 89ad      	LDD  R26,Y+21
0006d1 83a0      	STD  Z+0,R26
                 _0x2000068:
                 _0x2000066:
0006d2 ff05      	SBRS R16,5
0006d3 e046      	LDI  R20,LOW(6)
0006d4 3626      	CPI  R18,102
0006d5 f461      	BRNE _0x200006A
                +
0006d6 85ea     +LDD R30 , Y + 10
0006d7 85fb     +LDD R31 , Y + 10 + 1
0006d8 856c     +LDD R22 , Y + 10 + 2
0006d9 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
0006da 940e 0f89 	CALL __PUTPARD1
0006dc 934a      	ST   -Y,R20
0006dd 89ab      	LDD  R26,Y+19
0006de 89bc      	LDD  R27,Y+19+1
0006df 940e 0bc7 	CALL _ftoa
0006e1 c00b      	RJMP _0x200006B
                 _0x200006A:
                +
0006e2 85ea     +LDD R30 , Y + 10
0006e3 85fb     +LDD R31 , Y + 10 + 1
0006e4 856c     +LDD R22 , Y + 10 + 2
0006e5 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
0006e6 940e 0f89 	CALL __PUTPARD1
0006e8 934a      	ST   -Y,R20
0006e9 932a      	ST   -Y,R18
0006ea 89ac      	LDD  R26,Y+20
0006eb 89bd      	LDD  R27,Y+20+1
0006ec dd94      	RCALL __ftoe_G100
                 _0x200006B:
0006ed 01fe      	MOVW R30,R28
0006ee 9676      	ADIW R30,22
0006ef 87ee      	STD  Y+14,R30
0006f0 87ff      	STD  Y+14+1,R31
0006f1 85ae      	LDD  R26,Y+14
0006f2 85bf      	LDD  R27,Y+14+1
0006f3 940e 0b35 	CALL _strlen
0006f5 2f1e      	MOV  R17,R30
0006f6 c045      	RJMP _0x200006C
                 _0x2000060:
0006f7 37e3      	CPI  R30,LOW(0x73)
0006f8 f4e9      	BRNE _0x200006E
                +
0006f9 01fe     +MOVW R30 , R28
0006fa 5ae6     +SUBI R30 , LOW ( - 90 )
0006fb 4fff     +SBCI R31 , HIGH ( - 90 )
0006fc 9001     +LD R0 , Z +
0006fd 81f0     +LD R31 , Z
0006fe 2de0     +MOV R30 , R0
                 	__GETW1SX 90
0006ff 9734      	SBIW R30,4
                +
000700 01de     +MOVW R26 , R28
000701 5aa6     +SUBI R26 , LOW ( - 90 )
000702 4fbf     +SBCI R27 , HIGH ( - 90 )
000703 93ed     +ST X + , R30
000704 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
000705 01de     +MOVW R26 , R28
000706 5aa6     +SUBI R26 , LOW ( - 90 )
000707 4fbf     +SBCI R27 , HIGH ( - 90 )
000708 900d     +LD R0 , X +
000709 91bc     +LD R27 , X
00070a 2da0     +MOV R26 , R0
                 	__GETW2SX 90
00070b 9614      	ADIW R26,4
00070c 940e 0f6b 	CALL __GETW1P
00070e 87ee      	STD  Y+14,R30
00070f 87ff      	STD  Y+14+1,R31
000710 85ae      	LDD  R26,Y+14
000711 85bf      	LDD  R27,Y+14+1
000712 940e 0b35 	CALL _strlen
000714 2f1e      	MOV  R17,R30
000715 c01f      	RJMP _0x200006F
                 _0x200006E:
000716 37e0      	CPI  R30,LOW(0x70)
000717 f549      	BRNE _0x2000071
                +
000718 01fe     +MOVW R30 , R28
000719 5ae6     +SUBI R30 , LOW ( - 90 )
00071a 4fff     +SBCI R31 , HIGH ( - 90 )
00071b 9001     +LD R0 , Z +
00071c 81f0     +LD R31 , Z
00071d 2de0     +MOV R30 , R0
                 	__GETW1SX 90
00071e 9734      	SBIW R30,4
                +
00071f 01de     +MOVW R26 , R28
000720 5aa6     +SUBI R26 , LOW ( - 90 )
000721 4fbf     +SBCI R27 , HIGH ( - 90 )
000722 93ed     +ST X + , R30
000723 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
000724 01de     +MOVW R26 , R28
000725 5aa6     +SUBI R26 , LOW ( - 90 )
000726 4fbf     +SBCI R27 , HIGH ( - 90 )
000727 900d     +LD R0 , X +
000728 91bc     +LD R27 , X
000729 2da0     +MOV R26 , R0
                 	__GETW2SX 90
00072a 9614      	ADIW R26,4
00072b 940e 0f6b 	CALL __GETW1P
00072d 87ee      	STD  Y+14,R30
00072e 87ff      	STD  Y+14+1,R31
00072f 85ae      	LDD  R26,Y+14
000730 85bf      	LDD  R27,Y+14+1
000731 940e 0b41 	CALL _strlenf
000733 2f1e      	MOV  R17,R30
000734 6008      	ORI  R16,LOW(8)
                 _0x200006F:
000735 770f      	ANDI R16,LOW(127)
000736 3040      	CPI  R20,0
000737 f011      	BREQ _0x2000073
000738 1741      	CP   R20,R17
000739 f008      	BRLO _0x2000074
                 _0x2000073:
00073a c001      	RJMP _0x2000072
                 _0x2000074:
00073b 2f14      	MOV  R17,R20
                 _0x2000072:
                 _0x200006C:
00073c e040      	LDI  R20,LOW(0)
00073d e0e0      	LDI  R30,LOW(0)
00073e 8bec      	STD  Y+20,R30
00073f e030      	LDI  R19,LOW(0)
000740 c0a9      	RJMP _0x2000075
                 _0x2000071:
000741 36e4      	CPI  R30,LOW(0x64)
000742 f011      	BREQ _0x2000078
000743 36e9      	CPI  R30,LOW(0x69)
000744 f411      	BRNE _0x2000079
                 _0x2000078:
000745 6004      	ORI  R16,LOW(4)
000746 c002      	RJMP _0x200007A
                 _0x2000079:
000747 37e5      	CPI  R30,LOW(0x75)
000748 f4c1      	BRNE _0x200007B
                 _0x200007A:
000749 e0ea      	LDI  R30,LOW(10)
00074a 8bec      	STD  Y+20,R30
00074b ff01      	SBRS R16,1
00074c c00a      	RJMP _0x200007C
                +
00074d e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
00074e ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
00074f e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
000750 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
                +
000751 8be8     +STD Y + 16 , R30
000752 8bf9     +STD Y + 16 + 1 , R31
000753 8b6a     +STD Y + 16 + 2 , R22
000754 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000755 e01a      	LDI  R17,LOW(10)
000756 c028      	RJMP _0x200007D
                 _0x200007C:
                +
000757 e1e0     +LDI R30 , LOW ( 0x2710 )
000758 e2f7     +LDI R31 , HIGH ( 0x2710 )
000759 e060     +LDI R22 , BYTE3 ( 0x2710 )
00075a e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
                +
00075b 8be8     +STD Y + 16 , R30
00075c 8bf9     +STD Y + 16 + 1 , R31
00075d 8b6a     +STD Y + 16 + 2 , R22
00075e 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
00075f e015      	LDI  R17,LOW(5)
000760 c01e      	RJMP _0x200007D
                 _0x200007B:
000761 35e8      	CPI  R30,LOW(0x58)
000762 f411      	BRNE _0x200007F
000763 6008      	ORI  R16,LOW(8)
000764 c003      	RJMP _0x2000080
                 _0x200007F:
000765 37e8      	CPI  R30,LOW(0x78)
000766 f009      	BREQ PC+2
000767 c15e      	RJMP _0x20000BE
                 _0x2000080:
000768 e1e0      	LDI  R30,LOW(16)
000769 8bec      	STD  Y+20,R30
00076a ff01      	SBRS R16,1
00076b c00a      	RJMP _0x2000082
                +
00076c e0e0     +LDI R30 , LOW ( 0x10000000 )
00076d e0f0     +LDI R31 , HIGH ( 0x10000000 )
00076e e060     +LDI R22 , BYTE3 ( 0x10000000 )
00076f e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
                +
000770 8be8     +STD Y + 16 , R30
000771 8bf9     +STD Y + 16 + 1 , R31
000772 8b6a     +STD Y + 16 + 2 , R22
000773 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000774 e018      	LDI  R17,LOW(8)
000775 c009      	RJMP _0x200007D
                 _0x2000082:
                +
000776 e0e0     +LDI R30 , LOW ( 0x1000 )
000777 e1f0     +LDI R31 , HIGH ( 0x1000 )
000778 e060     +LDI R22 , BYTE3 ( 0x1000 )
000779 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
                +
00077a 8be8     +STD Y + 16 , R30
00077b 8bf9     +STD Y + 16 + 1 , R31
00077c 8b6a     +STD Y + 16 + 2 , R22
00077d 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
00077e e014      	LDI  R17,LOW(4)
                 _0x200007D:
00077f 3040      	CPI  R20,0
000780 f011      	BREQ _0x2000083
000781 770f      	ANDI R16,LOW(127)
000782 c001      	RJMP _0x2000084
                 _0x2000083:
000783 e041      	LDI  R20,LOW(1)
                 _0x2000084:
000784 ff01      	SBRS R16,1
000785 c016      	RJMP _0x2000085
                +
000786 01fe     +MOVW R30 , R28
000787 5ae6     +SUBI R30 , LOW ( - 90 )
000788 4fff     +SBCI R31 , HIGH ( - 90 )
000789 9001     +LD R0 , Z +
00078a 81f0     +LD R31 , Z
00078b 2de0     +MOV R30 , R0
                 	__GETW1SX 90
00078c 9734      	SBIW R30,4
                +
00078d 01de     +MOVW R26 , R28
00078e 5aa6     +SUBI R26 , LOW ( - 90 )
00078f 4fbf     +SBCI R27 , HIGH ( - 90 )
000790 93ed     +ST X + , R30
000791 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
000792 01de     +MOVW R26 , R28
000793 5aa6     +SUBI R26 , LOW ( - 90 )
000794 4fbf     +SBCI R27 , HIGH ( - 90 )
000795 900d     +LD R0 , X +
000796 91bc     +LD R27 , X
000797 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000798 9614      	ADIW R26,4
000799 940e 0f6f 	CALL __GETD1P
00079b c031      	RJMP _0x200011E
                 _0x2000085:
00079c ff02      	SBRS R16,2
00079d c018      	RJMP _0x2000087
                +
00079e 01fe     +MOVW R30 , R28
00079f 5ae6     +SUBI R30 , LOW ( - 90 )
0007a0 4fff     +SBCI R31 , HIGH ( - 90 )
0007a1 9001     +LD R0 , Z +
0007a2 81f0     +LD R31 , Z
0007a3 2de0     +MOV R30 , R0
                 	__GETW1SX 90
0007a4 9734      	SBIW R30,4
                +
0007a5 01de     +MOVW R26 , R28
0007a6 5aa6     +SUBI R26 , LOW ( - 90 )
0007a7 4fbf     +SBCI R27 , HIGH ( - 90 )
0007a8 93ed     +ST X + , R30
0007a9 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
0007aa 01de     +MOVW R26 , R28
0007ab 5aa6     +SUBI R26 , LOW ( - 90 )
0007ac 4fbf     +SBCI R27 , HIGH ( - 90 )
0007ad 900d     +LD R0 , X +
0007ae 91bc     +LD R27 , X
0007af 2da0     +MOV R26 , R0
                 	__GETW2SX 90
0007b0 9614      	ADIW R26,4
0007b1 940e 0f6b 	CALL __GETW1P
0007b3 940e 0ec5 	CALL __CWD1
0007b5 c017      	RJMP _0x200011E
                 _0x2000087:
                +
0007b6 01fe     +MOVW R30 , R28
0007b7 5ae6     +SUBI R30 , LOW ( - 90 )
0007b8 4fff     +SBCI R31 , HIGH ( - 90 )
0007b9 9001     +LD R0 , Z +
0007ba 81f0     +LD R31 , Z
0007bb 2de0     +MOV R30 , R0
                 	__GETW1SX 90
0007bc 9734      	SBIW R30,4
                +
0007bd 01de     +MOVW R26 , R28
0007be 5aa6     +SUBI R26 , LOW ( - 90 )
0007bf 4fbf     +SBCI R27 , HIGH ( - 90 )
0007c0 93ed     +ST X + , R30
0007c1 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
0007c2 01de     +MOVW R26 , R28
0007c3 5aa6     +SUBI R26 , LOW ( - 90 )
0007c4 4fbf     +SBCI R27 , HIGH ( - 90 )
0007c5 900d     +LD R0 , X +
0007c6 91bc     +LD R27 , X
0007c7 2da0     +MOV R26 , R0
                 	__GETW2SX 90
0007c8 9614      	ADIW R26,4
0007c9 940e 0f6b 	CALL __GETW1P
0007cb 2766      	CLR  R22
0007cc 2777      	CLR  R23
                 _0x200011E:
                +
0007cd 87ea     +STD Y + 10 , R30
0007ce 87fb     +STD Y + 10 + 1 , R31
0007cf 876c     +STD Y + 10 + 2 , R22
0007d0 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0007d1 ff02      	SBRS R16,2
0007d2 c016      	RJMP _0x2000089
0007d3 85ad      	LDD  R26,Y+13
0007d4 23aa      	TST  R26
0007d5 f462      	BRPL _0x200008A
                +
0007d6 85ea     +LDD R30 , Y + 10
0007d7 85fb     +LDD R31 , Y + 10 + 1
0007d8 856c     +LDD R22 , Y + 10 + 2
0007d9 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
0007da 940e 0eaf 	CALL __ANEGD1
                +
0007dc 87ea     +STD Y + 10 , R30
0007dd 87fb     +STD Y + 10 + 1 , R31
0007de 876c     +STD Y + 10 + 2 , R22
0007df 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0007e0 e2ed      	LDI  R30,LOW(45)
0007e1 8bed      	STD  Y+21,R30
                 _0x200008A:
0007e2 89ed      	LDD  R30,Y+21
0007e3 30e0      	CPI  R30,0
0007e4 f019      	BREQ _0x200008B
0007e5 5f1f      	SUBI R17,-LOW(1)
0007e6 5f4f      	SUBI R20,-LOW(1)
0007e7 c001      	RJMP _0x200008C
                 _0x200008B:
0007e8 7f0b      	ANDI R16,LOW(251)
                 _0x200008C:
                 _0x2000089:
0007e9 2f34      	MOV  R19,R20
                 _0x2000075:
0007ea fd00      	SBRC R16,0
0007eb c018      	RJMP _0x200008D
                 _0x200008E:
0007ec 1715      	CP   R17,R21
0007ed f410      	BRSH _0x2000091
0007ee 1735      	CP   R19,R21
0007ef f008      	BRLO _0x2000092
                 _0x2000091:
0007f0 c013      	RJMP _0x2000090
                 _0x2000092:
0007f1 ff07      	SBRS R16,7
0007f2 c008      	RJMP _0x2000093
0007f3 ff02      	SBRS R16,2
0007f4 c004      	RJMP _0x2000094
0007f5 7f0b      	ANDI R16,LOW(251)
0007f6 892d      	LDD  R18,Y+21
0007f7 5011      	SUBI R17,LOW(1)
0007f8 c001      	RJMP _0x2000095
                 _0x2000094:
0007f9 e320      	LDI  R18,LOW(48)
                 _0x2000095:
0007fa c001      	RJMP _0x2000096
                 _0x2000093:
0007fb e220      	LDI  R18,LOW(32)
                 _0x2000096:
0007fc 932a      	ST   -Y,R18
0007fd 81af      	LDD  R26,Y+7
0007fe 85b8      	LDD  R27,Y+7+1
0007ff 85e9      	LDD  R30,Y+9
000800 85fa      	LDD  R31,Y+9+1
000801 9509      	ICALL
000802 5051      	SUBI R21,LOW(1)
000803 cfe8      	RJMP _0x200008E
                 _0x2000090:
                 _0x200008D:
                 _0x2000097:
000804 1714      	CP   R17,R20
000805 f520      	BRSH _0x2000099
000806 6100      	ORI  R16,LOW(16)
000807 ff02      	SBRS R16,2
000808 c015      	RJMP _0x200009A
000809 7f0b      	ANDI R16,LOW(251)
00080a 89ed      	LDD  R30,Y+21
00080b 93ea      	ST   -Y,R30
                +
00080c 01de     +MOVW R26 , R28
00080d 5aa9     +SUBI R26 , LOW ( - 87 )
00080e 4fbf     +SBCI R27 , HIGH ( - 87 )
00080f 900d     +LD R0 , X +
000810 91bc     +LD R27 , X
000811 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
000812 01fe     +MOVW R30 , R28
000813 5ae7     +SUBI R30 , LOW ( - 89 )
000814 4fff     +SBCI R31 , HIGH ( - 89 )
000815 9001     +LD R0 , Z +
000816 81f0     +LD R31 , Z
000817 2de0     +MOV R30 , R0
                 	__GETW1SX 89
000818 9509      	ICALL
000819 3050      	CPI  R21,0
00081a f009      	BREQ _0x200009B
00081b 5051      	SUBI R21,LOW(1)
                 _0x200009B:
00081c 5011      	SUBI R17,LOW(1)
00081d 5041      	SUBI R20,LOW(1)
                 _0x200009A:
00081e e3e0      	LDI  R30,LOW(48)
00081f 93ea      	ST   -Y,R30
000820 81af      	LDD  R26,Y+7
000821 85b8      	LDD  R27,Y+7+1
000822 85e9      	LDD  R30,Y+9
000823 85fa      	LDD  R31,Y+9+1
000824 9509      	ICALL
000825 3050      	CPI  R21,0
000826 f009      	BREQ _0x200009C
000827 5051      	SUBI R21,LOW(1)
                 _0x200009C:
000828 5041      	SUBI R20,LOW(1)
000829 cfda      	RJMP _0x2000097
                 _0x2000099:
00082a 2f31      	MOV  R19,R17
00082b 89ec      	LDD  R30,Y+20
00082c 30e0      	CPI  R30,0
00082d f4d9      	BRNE _0x200009D
                 _0x200009E:
00082e 3030      	CPI  R19,0
00082f f0c1      	BREQ _0x20000A0
000830 ff03      	SBRS R16,3
000831 c006      	RJMP _0x20000A1
000832 85ee      	LDD  R30,Y+14
000833 85ff      	LDD  R31,Y+14+1
000834 9125      	LPM  R18,Z+
000835 87ee      	STD  Y+14,R30
000836 87ff      	STD  Y+14+1,R31
000837 c005      	RJMP _0x20000A2
                 _0x20000A1:
000838 85ae      	LDD  R26,Y+14
000839 85bf      	LDD  R27,Y+14+1
00083a 912d      	LD   R18,X+
00083b 87ae      	STD  Y+14,R26
00083c 87bf      	STD  Y+14+1,R27
                 _0x20000A2:
00083d 932a      	ST   -Y,R18
00083e 81af      	LDD  R26,Y+7
00083f 85b8      	LDD  R27,Y+7+1
000840 85e9      	LDD  R30,Y+9
000841 85fa      	LDD  R31,Y+9+1
000842 9509      	ICALL
000843 3050      	CPI  R21,0
000844 f009      	BREQ _0x20000A3
000845 5051      	SUBI R21,LOW(1)
                 _0x20000A3:
000846 5031      	SUBI R19,LOW(1)
000847 cfe6      	RJMP _0x200009E
                 _0x20000A0:
000848 c070      	RJMP _0x20000A4
                 _0x200009D:
                 _0x20000A6:
                +
000849 89e8     +LDD R30 , Y + 16
00084a 89f9     +LDD R31 , Y + 16 + 1
00084b 896a     +LDD R22 , Y + 16 + 2
00084c 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
00084d 85aa     +LDD R26 , Y + 10
00084e 85bb     +LDD R27 , Y + 10 + 1
00084f 858c     +LDD R24 , Y + 10 + 2
000850 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000851 940e 0f1c 	CALL __DIVD21U
000853 2f2e      	MOV  R18,R30
000854 302a      	CPI  R18,10
000855 f030      	BRLO _0x20000A8
000856 ff03      	SBRS R16,3
000857 c002      	RJMP _0x20000A9
000858 5c29      	SUBI R18,-LOW(55)
000859 c001      	RJMP _0x20000AA
                 _0x20000A9:
00085a 5a29      	SUBI R18,-LOW(87)
                 _0x20000AA:
00085b c001      	RJMP _0x20000AB
                 _0x20000A8:
00085c 5d20      	SUBI R18,-LOW(48)
                 _0x20000AB:
00085d fd04      	SBRC R16,4
00085e c030      	RJMP _0x20000AD
00085f 3321      	CPI  R18,49
000860 f460      	BRSH _0x20000AF
                +
000861 89a8     +LDD R26 , Y + 16
000862 89b9     +LDD R27 , Y + 16 + 1
000863 898a     +LDD R24 , Y + 16 + 2
000864 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
000865 30a1     +CPI R26 , LOW ( 0x1 )
000866 e0e0     +LDI R30 , HIGH ( 0x1 )
000867 07be     +CPC R27 , R30
000868 e0e0     +LDI R30 , BYTE3 ( 0x1 )
000869 078e     +CPC R24 , R30
00086a e0e0     +LDI R30 , BYTE4 ( 0x1 )
00086b 079e     +CPC R25 , R30
                 	__CPD2N 0x1
00086c f409      	BRNE _0x20000AE
                 _0x20000AF:
00086d c00b      	RJMP _0x20000B1
                 _0x20000AE:
00086e 1743      	CP   R20,R19
00086f f440      	BRSH _0x200011F
000870 1753      	CP   R21,R19
000871 f010      	BRLO _0x20000B4
000872 ff00      	SBRS R16,0
000873 c001      	RJMP _0x20000B5
                 _0x20000B4:
000874 c023      	RJMP _0x20000B3
                 _0x20000B5:
000875 e220      	LDI  R18,LOW(32)
000876 ff07      	SBRS R16,7
000877 c017      	RJMP _0x20000B6
                 _0x200011F:
000878 e320      	LDI  R18,LOW(48)
                 _0x20000B1:
000879 6100      	ORI  R16,LOW(16)
00087a ff02      	SBRS R16,2
00087b c013      	RJMP _0x20000B7
00087c 7f0b      	ANDI R16,LOW(251)
00087d 89ed      	LDD  R30,Y+21
00087e 93ea      	ST   -Y,R30
                +
00087f 01de     +MOVW R26 , R28
000880 5aa9     +SUBI R26 , LOW ( - 87 )
000881 4fbf     +SBCI R27 , HIGH ( - 87 )
000882 900d     +LD R0 , X +
000883 91bc     +LD R27 , X
000884 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
000885 01fe     +MOVW R30 , R28
000886 5ae7     +SUBI R30 , LOW ( - 89 )
000887 4fff     +SBCI R31 , HIGH ( - 89 )
000888 9001     +LD R0 , Z +
000889 81f0     +LD R31 , Z
00088a 2de0     +MOV R30 , R0
                 	__GETW1SX 89
00088b 9509      	ICALL
00088c 3050      	CPI  R21,0
00088d f009      	BREQ _0x20000B8
00088e 5051      	SUBI R21,LOW(1)
                 _0x20000B8:
                 _0x20000B7:
                 _0x20000B6:
                 _0x20000AD:
00088f 932a      	ST   -Y,R18
000890 81af      	LDD  R26,Y+7
000891 85b8      	LDD  R27,Y+7+1
000892 85e9      	LDD  R30,Y+9
000893 85fa      	LDD  R31,Y+9+1
000894 9509      	ICALL
000895 3050      	CPI  R21,0
000896 f009      	BREQ _0x20000B9
000897 5051      	SUBI R21,LOW(1)
                 _0x20000B9:
                 _0x20000B3:
000898 5031      	SUBI R19,LOW(1)
                +
000899 89e8     +LDD R30 , Y + 16
00089a 89f9     +LDD R31 , Y + 16 + 1
00089b 896a     +LDD R22 , Y + 16 + 2
00089c 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
00089d 85aa     +LDD R26 , Y + 10
00089e 85bb     +LDD R27 , Y + 10 + 1
00089f 858c     +LDD R24 , Y + 10 + 2
0008a0 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
0008a1 940e 0f5b 	CALL __MODD21U
                +
0008a3 87ea     +STD Y + 10 , R30
0008a4 87fb     +STD Y + 10 + 1 , R31
0008a5 876c     +STD Y + 10 + 2 , R22
0008a6 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0008a7 89ec      	LDD  R30,Y+20
                +
0008a8 89a8     +LDD R26 , Y + 16
0008a9 89b9     +LDD R27 , Y + 16 + 1
0008aa 898a     +LDD R24 , Y + 16 + 2
0008ab 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
0008ac 27ff      	CLR  R31
0008ad 2766      	CLR  R22
0008ae 2777      	CLR  R23
0008af 940e 0f1c 	CALL __DIVD21U
                +
0008b1 8be8     +STD Y + 16 , R30
0008b2 8bf9     +STD Y + 16 + 1 , R31
0008b3 8b6a     +STD Y + 16 + 2 , R22
0008b4 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
0008b5 940e 0fc9 	CALL __CPD10
0008b7 f009      	BREQ _0x20000A7
0008b8 cf90      	RJMP _0x20000A6
                 _0x20000A7:
                 _0x20000A4:
0008b9 ff00      	SBRS R16,0
0008ba c00b      	RJMP _0x20000BA
                 _0x20000BB:
0008bb 3050      	CPI  R21,0
0008bc f049      	BREQ _0x20000BD
0008bd 5051      	SUBI R21,LOW(1)
0008be e2e0      	LDI  R30,LOW(32)
0008bf 93ea      	ST   -Y,R30
0008c0 81af      	LDD  R26,Y+7
0008c1 85b8      	LDD  R27,Y+7+1
0008c2 85e9      	LDD  R30,Y+9
0008c3 85fa      	LDD  R31,Y+9+1
0008c4 9509      	ICALL
0008c5 cff5      	RJMP _0x20000BB
                 _0x20000BD:
                 _0x20000BA:
                 _0x20000BE:
                 _0x200005A:
                 _0x200011D:
0008c6 e010      	LDI  R17,LOW(0)
                 _0x200003B:
0008c7 cd39      	RJMP _0x2000036
                 _0x2000038:
0008c8 81ae      	LDD  R26,Y+6
0008c9 81bf      	LDD  R27,Y+6+1
0008ca 940e 0f6b 	CALL __GETW1P
0008cc 940e 0fd4 	CALL __LOADLOCR6
0008ce 96ef      	ADIW R28,63
0008cf 966f      	ADIW R28,31
0008d0 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0008d1 92ff      	PUSH R15
0008d2 2ef8      	MOV  R15,R24
0008d3 9726      	SBIW R28,6
0008d4 940e 0fcf 	CALL __SAVELOCR4
0008d6 01de      	MOVW R26,R28
0008d7 961c      	ADIW R26,12
0008d8 940e 0ea2 	CALL __ADDW2R15
0008da 940e 0f6b 	CALL __GETW1P
0008dc 9730      	SBIW R30,0
0008dd f419      	BRNE _0x20000BF
0008de efef      	LDI  R30,LOW(65535)
0008df efff      	LDI  R31,HIGH(65535)
0008e0 c027      	RJMP _0x20C0008
                 _0x20000BF:
0008e1 01de      	MOVW R26,R28
0008e2 9616      	ADIW R26,6
0008e3 940e 0ea2 	CALL __ADDW2R15
0008e5 018d      	MOVW R16,R26
0008e6 01de      	MOVW R26,R28
0008e7 961c      	ADIW R26,12
0008e8 940e 0ea2 	CALL __ADDW2R15
0008ea 940e 0f6b 	CALL __GETW1P
0008ec 83ee      	STD  Y+6,R30
0008ed 83ff      	STD  Y+6+1,R31
0008ee e0e0      	LDI  R30,LOW(0)
0008ef 87e8      	STD  Y+8,R30
0008f0 87e9      	STD  Y+8+1,R30
0008f1 01de      	MOVW R26,R28
0008f2 961a      	ADIW R26,10
0008f3 940e 0ea2 	CALL __ADDW2R15
0008f5 940e 0f6b 	CALL __GETW1P
0008f7 93fa      	ST   -Y,R31
0008f8 93ea      	ST   -Y,R30
0008f9 931a      	ST   -Y,R17
0008fa 930a      	ST   -Y,R16
0008fb e4e1      	LDI  R30,LOW(_put_buff_G100)
0008fc e0f4      	LDI  R31,HIGH(_put_buff_G100)
0008fd 93fa      	ST   -Y,R31
0008fe 93ea      	ST   -Y,R30
0008ff 01de      	MOVW R26,R28
000900 961a      	ADIW R26,10
000901 dce2      	RCALL __print_G100
000902 019f      	MOVW R18,R30
000903 81ae      	LDD  R26,Y+6
000904 81bf      	LDD  R27,Y+6+1
000905 e0e0      	LDI  R30,LOW(0)
000906 93ec      	ST   X,R30
000907 01f9      	MOVW R30,R18
                 _0x20C0008:
000908 940e 0fd6 	CALL __LOADLOCR4
00090a 962a      	ADIW R28,10
00090b 90ff      	POP  R15
00090c 9508      	RET
                 ; .FEND
                 _get_buff_G100:
                 ; .FSTART _get_buff_G100
00090d 93ba      	ST   -Y,R27
00090e 93aa      	ST   -Y,R26
00090f 931a      	ST   -Y,R17
000910 81a9      	LDD  R26,Y+1
000911 81ba      	LDD  R27,Y+1+1
000912 e0e0      	LDI  R30,LOW(0)
000913 93ec      	ST   X,R30
000914 81ab      	LDD  R26,Y+3
000915 81bc      	LDD  R27,Y+3+1
000916 91ec      	LD   R30,X
000917 2f1e      	MOV  R17,R30
000918 30e0      	CPI  R30,0
000919 f019      	BREQ _0x20000C7
00091a e0e0      	LDI  R30,LOW(0)
00091b 93ec      	ST   X,R30
00091c c019      	RJMP _0x20000C8
                 _0x20000C7:
00091d 81a9      	LDD  R26,Y+1
00091e 81ba      	LDD  R27,Y+1+1
00091f 9611      	ADIW R26,1
000920 940e 0f6b 	CALL __GETW1P
000922 9730      	SBIW R30,0
000923 f089      	BREQ _0x20000C9
000924 81e9      	LDD  R30,Y+1
000925 81fa      	LDD  R31,Y+1+1
000926 81a1      	LDD  R26,Z+1
000927 81b2      	LDD  R27,Z+2
000928 91ec      	LD   R30,X
000929 2f1e      	MOV  R17,R30
00092a 30e0      	CPI  R30,0
00092b f041      	BREQ _0x20000CA
00092c 81a9      	LDD  R26,Y+1
00092d 81ba      	LDD  R27,Y+1+1
00092e 9611      	ADIW R26,1
00092f 91ed      	LD   R30,X+
000930 91fd      	LD   R31,X+
000931 9631      	ADIW R30,1
000932 93fe      	ST   -X,R31
000933 93ee      	ST   -X,R30
                 _0x20000CA:
000934 c001      	RJMP _0x20000CB
                 _0x20000C9:
000935 e010      	LDI  R17,LOW(0)
                 _0x20000CB:
                 _0x20000C8:
000936 2fe1      	MOV  R30,R17
000937 8118      	LDD  R17,Y+0
000938 c1ed      	RJMP _0x20C0004
                 ; .FEND
                 __scanf_G100:
                 ; .FSTART __scanf_G100
000939 92ff      	PUSH R15
00093a 93ba      	ST   -Y,R27
00093b 93aa      	ST   -Y,R26
00093c 9726      	SBIW R28,6
00093d 940e 0fcd 	CALL __SAVELOCR6
00093f e0e0      	LDI  R30,LOW(0)
000940 e0f0      	LDI  R31,HIGH(0)
000941 87ea      	STD  Y+10,R30
000942 87fb      	STD  Y+10+1,R31
000943 2f4e      	MOV  R20,R30
                 _0x20000CC:
000944 89ea      	LDD  R30,Y+18
000945 89fb      	LDD  R31,Y+18+1
000946 9631      	ADIW R30,1
000947 8bea      	STD  Y+18,R30
000948 8bfb      	STD  Y+18+1,R31
000949 9731      	SBIW R30,1
00094a 91e4      	LPM  R30,Z
00094b 2f3e      	MOV  R19,R30
00094c 30e0      	CPI  R30,0
00094d f409      	BRNE PC+2
00094e c18f      	RJMP _0x20000CE
00094f 2fa3      	MOV  R26,R19
000950 940e 0b65 	CALL _isspace
000952 30e0      	CPI  R30,0
000953 f0f9      	BREQ _0x20000CF
                 _0x20000D0:
000954 b7ed      	IN   R30,SPL
000955 b7fe      	IN   R31,SPH
000956 93fa      	ST   -Y,R31
000957 93ea      	ST   -Y,R30
000958 934f      	PUSH R20
000959 85ae      	LDD  R26,Y+14
00095a 85bf      	LDD  R27,Y+14+1
00095b 89e8      	LDD  R30,Y+16
00095c 89f9      	LDD  R31,Y+16+1
00095d 9509      	ICALL
00095e 914f      	POP  R20
00095f 2f3e      	MOV  R19,R30
000960 30e0      	CPI  R30,0
000961 f029      	BREQ _0x20000D3
000962 2fa3      	MOV  R26,R19
000963 940e 0b65 	CALL _isspace
000965 30e0      	CPI  R30,0
000966 f409      	BRNE _0x20000D4
                 _0x20000D3:
000967 c009      	RJMP _0x20000D2
                 _0x20000D4:
000968 85ac      	LDD  R26,Y+12
000969 85bd      	LDD  R27,Y+12+1
00096a 91ac      	LD   R26,X
00096b 30a0      	CPI  R26,0
00096c f41c      	BRGE _0x20000D5
00096d efef      	LDI  R30,LOW(65535)
00096e efff      	LDI  R31,HIGH(65535)
00096f c170      	RJMP _0x20C0006
                 _0x20000D5:
000970 cfe3      	RJMP _0x20000D0
                 _0x20000D2:
000971 2f43      	MOV  R20,R19
000972 c16a      	RJMP _0x20000D6
                 _0x20000CF:
000973 3235      	CPI  R19,37
000974 f009      	BREQ PC+2
000975 c14a      	RJMP _0x20000D7
000976 e050      	LDI  R21,LOW(0)
                 _0x20000D8:
000977 89ea      	LDD  R30,Y+18
000978 89fb      	LDD  R31,Y+18+1
000979 9135      	LPM  R19,Z+
00097a 8bea      	STD  Y+18,R30
00097b 8bfb      	STD  Y+18+1,R31
00097c 3330      	CPI  R19,48
00097d f010      	BRLO _0x20000DC
00097e 333a      	CPI  R19,58
00097f f008      	BRLO _0x20000DB
                 _0x20000DC:
000980 c007      	RJMP _0x20000DA
                 _0x20000DB:
000981 e0aa      	LDI  R26,LOW(10)
000982 9f5a      	MUL  R21,R26
000983 2d50      	MOV  R21,R0
000984 2fe3      	MOV  R30,R19
000985 53e0      	SUBI R30,LOW(48)
000986 0f5e      	ADD  R21,R30
000987 cfef      	RJMP _0x20000D8
                 _0x20000DA:
000988 3030      	CPI  R19,0
000989 f409      	BRNE _0x20000DE
00098a c153      	RJMP _0x20000CE
                 _0x20000DE:
                 _0x20000DF:
00098b b7ed      	IN   R30,SPL
00098c b7fe      	IN   R31,SPH
00098d 93fa      	ST   -Y,R31
00098e 93ea      	ST   -Y,R30
00098f 934f      	PUSH R20
000990 85ae      	LDD  R26,Y+14
000991 85bf      	LDD  R27,Y+14+1
000992 89e8      	LDD  R30,Y+16
000993 89f9      	LDD  R31,Y+16+1
000994 9509      	ICALL
000995 914f      	POP  R20
000996 2f2e      	MOV  R18,R30
000997 2fae      	MOV  R26,R30
000998 940e 0b65 	CALL _isspace
00099a 30e0      	CPI  R30,0
00099b f049      	BREQ _0x20000E1
00099c 85ac      	LDD  R26,Y+12
00099d 85bd      	LDD  R27,Y+12+1
00099e 91ac      	LD   R26,X
00099f 30a0      	CPI  R26,0
0009a0 f41c      	BRGE _0x20000E2
0009a1 efef      	LDI  R30,LOW(65535)
0009a2 efff      	LDI  R31,HIGH(65535)
0009a3 c13c      	RJMP _0x20C0006
                 _0x20000E2:
0009a4 cfe6      	RJMP _0x20000DF
                 _0x20000E1:
0009a5 3020      	CPI  R18,0
0009a6 f409      	BRNE _0x20000E3
0009a7 c12d      	RJMP _0x20000E4
                 _0x20000E3:
0009a8 2f42      	MOV  R20,R18
0009a9 3050      	CPI  R21,0
0009aa f409      	BRNE _0x20000E5
0009ab ef5f      	LDI  R21,LOW(255)
                 _0x20000E5:
0009ac 94e8      	CLT
0009ad f8f3      	BLD  R15,3
0009ae 2fe3      	MOV  R30,R19
0009af 36e3      	CPI  R30,LOW(0x63)
0009b0 f501      	BRNE _0x20000E9
0009b1 89e8      	LDD  R30,Y+16
0009b2 89f9      	LDD  R31,Y+16+1
0009b3 9734      	SBIW R30,4
0009b4 8be8      	STD  Y+16,R30
0009b5 8bf9      	STD  Y+16+1,R31
0009b6 89a8      	LDD  R26,Y+16
0009b7 89b9      	LDD  R27,Y+16+1
0009b8 9614      	ADIW R26,4
0009b9 910d      	LD   R16,X+
0009ba 911c      	LD   R17,X
0009bb b7ed      	IN   R30,SPL
0009bc b7fe      	IN   R31,SPH
0009bd 93fa      	ST   -Y,R31
0009be 93ea      	ST   -Y,R30
0009bf 934f      	PUSH R20
0009c0 85ae      	LDD  R26,Y+14
0009c1 85bf      	LDD  R27,Y+14+1
0009c2 89e8      	LDD  R30,Y+16
0009c3 89f9      	LDD  R31,Y+16+1
0009c4 9509      	ICALL
0009c5 914f      	POP  R20
0009c6 01d8      	MOVW R26,R16
0009c7 93ec      	ST   X,R30
0009c8 85ac      	LDD  R26,Y+12
0009c9 85bd      	LDD  R27,Y+12+1
0009ca 91ac      	LD   R26,X
0009cb 30a0      	CPI  R26,0
0009cc f41c      	BRGE _0x20000EA
0009cd efef      	LDI  R30,LOW(65535)
0009ce efff      	LDI  R31,HIGH(65535)
0009cf c110      	RJMP _0x20C0006
                 _0x20000EA:
0009d0 c0e9      	RJMP _0x20000E8
                 _0x20000E9:
0009d1 37e3      	CPI  R30,LOW(0x73)
0009d2 f5b9      	BRNE _0x20000EB
0009d3 89e8      	LDD  R30,Y+16
0009d4 89f9      	LDD  R31,Y+16+1
0009d5 9734      	SBIW R30,4
0009d6 8be8      	STD  Y+16,R30
0009d7 8bf9      	STD  Y+16+1,R31
0009d8 89a8      	LDD  R26,Y+16
0009d9 89b9      	LDD  R27,Y+16+1
0009da 9614      	ADIW R26,4
0009db 910d      	LD   R16,X+
0009dc 911c      	LD   R17,X
                 _0x20000EC:
0009dd 2fe5      	MOV  R30,R21
0009de 5051      	SUBI R21,1
0009df 30e0      	CPI  R30,0
0009e0 f129      	BREQ _0x20000EE
0009e1 b7ed      	IN   R30,SPL
0009e2 b7fe      	IN   R31,SPH
0009e3 93fa      	ST   -Y,R31
0009e4 93ea      	ST   -Y,R30
0009e5 934f      	PUSH R20
0009e6 85ae      	LDD  R26,Y+14
0009e7 85bf      	LDD  R27,Y+14+1
0009e8 89e8      	LDD  R30,Y+16
0009e9 89f9      	LDD  R31,Y+16+1
0009ea 9509      	ICALL
0009eb 914f      	POP  R20
0009ec 2f3e      	MOV  R19,R30
0009ed 30e0      	CPI  R30,0
0009ee f029      	BREQ _0x20000F0
0009ef 2fa3      	MOV  R26,R19
0009f0 940e 0b65 	CALL _isspace
0009f2 30e0      	CPI  R30,0
0009f3 f049      	BREQ _0x20000EF
                 _0x20000F0:
0009f4 85ac      	LDD  R26,Y+12
0009f5 85bd      	LDD  R27,Y+12+1
0009f6 91ac      	LD   R26,X
0009f7 30a0      	CPI  R26,0
0009f8 f41c      	BRGE _0x20000F2
0009f9 efef      	LDI  R30,LOW(65535)
0009fa efff      	LDI  R31,HIGH(65535)
0009fb c0e4      	RJMP _0x20C0006
                 _0x20000F2:
0009fc c009      	RJMP _0x20000EE
                 _0x20000EF:
0009fd 931f      	PUSH R17
0009fe 930f      	PUSH R16
                +
0009ff 5f0f     +SUBI R16 , LOW ( - 1 )
000a00 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000a01 2fe3      	MOV  R30,R19
000a02 91af      	POP  R26
000a03 91bf      	POP  R27
000a04 93ec      	ST   X,R30
000a05 cfd7      	RJMP _0x20000EC
                 _0x20000EE:
000a06 01d8      	MOVW R26,R16
000a07 e0e0      	LDI  R30,LOW(0)
000a08 93ec      	ST   X,R30
000a09 c0b0      	RJMP _0x20000E8
                 _0x20000EB:
000a0a 36ec      	CPI  R30,LOW(0x6C)
000a0b f439      	BRNE _0x20000F4
000a0c 9468      	SET
000a0d f8f3      	BLD  R15,3
000a0e 89ea      	LDD  R30,Y+18
000a0f 89fb      	LDD  R31,Y+18+1
000a10 9135      	LPM  R19,Z+
000a11 8bea      	STD  Y+18,R30
000a12 8bfb      	STD  Y+18+1,R31
                 _0x20000F4:
000a13 9468      	SET
000a14 f8f1      	BLD  R15,1
000a15 94e8      	CLT
000a16 f8f2      	BLD  R15,2
000a17 2fe3      	MOV  R30,R19
000a18 36e4      	CPI  R30,LOW(0x64)
000a19 f011      	BREQ _0x20000F9
000a1a 36e9      	CPI  R30,LOW(0x69)
000a1b f419      	BRNE _0x20000FA
                 _0x20000F9:
000a1c 94e8      	CLT
000a1d f8f1      	BLD  R15,1
000a1e c002      	RJMP _0x20000FB
                 _0x20000FA:
000a1f 37e5      	CPI  R30,LOW(0x75)
000a20 f411      	BRNE _0x20000FC
                 _0x20000FB:
000a21 e02a      	LDI  R18,LOW(10)
000a22 c008      	RJMP _0x20000F7
                 _0x20000FC:
000a23 37e8      	CPI  R30,LOW(0x78)
000a24 f411      	BRNE _0x20000FD
000a25 e120      	LDI  R18,LOW(16)
000a26 c004      	RJMP _0x20000F7
                 _0x20000FD:
000a27 32e5      	CPI  R30,LOW(0x25)
000a28 f409      	BRNE _0x2000100
000a29 c096      	RJMP _0x20000FF
                 _0x2000100:
000a2a c0b3      	RJMP _0x20C0007
                 _0x20000F7:
000a2b e0e0      	LDI  R30,LOW(0)
                +
000a2c 83ee     +STD Y + 6 , R30
000a2d 83ef     +STD Y + 6 + 1 , R30
000a2e 87e8     +STD Y + 6 + 2 , R30
000a2f 87e9     +STD Y + 6 + 3 , R30
                 	__CLRD1S 6
000a30 9468      	SET
000a31 f8f0      	BLD  R15,0
                 _0x2000101:
000a32 2fe5      	MOV  R30,R21
000a33 5051      	SUBI R21,1
000a34 30e0      	CPI  R30,0
000a35 f409      	BRNE PC+2
000a36 c054      	RJMP _0x2000103
000a37 b7ed      	IN   R30,SPL
000a38 b7fe      	IN   R31,SPH
000a39 93fa      	ST   -Y,R31
000a3a 93ea      	ST   -Y,R30
000a3b 934f      	PUSH R20
000a3c 85ae      	LDD  R26,Y+14
000a3d 85bf      	LDD  R27,Y+14+1
000a3e 89e8      	LDD  R30,Y+16
000a3f 89f9      	LDD  R31,Y+16+1
000a40 9509      	ICALL
000a41 914f      	POP  R20
000a42 2f3e      	MOV  R19,R30
000a43 32e1      	CPI  R30,LOW(0x21)
000a44 f448      	BRSH _0x2000104
000a45 85ac      	LDD  R26,Y+12
000a46 85bd      	LDD  R27,Y+12+1
000a47 91ac      	LD   R26,X
000a48 30a0      	CPI  R26,0
000a49 f41c      	BRGE _0x2000105
000a4a efef      	LDI  R30,LOW(65535)
000a4b efff      	LDI  R31,HIGH(65535)
000a4c c093      	RJMP _0x20C0006
                 _0x2000105:
000a4d c017      	RJMP _0x2000106
                 _0x2000104:
000a4e fcf1      	SBRC R15,1
000a4f c008      	RJMP _0x2000107
000a50 9468      	SET
000a51 f8f1      	BLD  R15,1
000a52 323d      	CPI  R19,45
000a53 f411      	BRNE _0x2000108
000a54 f8f2      	BLD  R15,2
000a55 cfdc      	RJMP _0x2000101
                 _0x2000108:
000a56 323b      	CPI  R19,43
000a57 f2d1      	BREQ _0x2000101
                 _0x2000107:
000a58 3120      	CPI  R18,16
000a59 f431      	BRNE _0x200010A
000a5a 2fa3      	MOV  R26,R19
000a5b 940e 0b70 	CALL _isxdigit
000a5d 30e0      	CPI  R30,0
000a5e f031      	BREQ _0x2000106
000a5f c009      	RJMP _0x200010C
                 _0x200010A:
000a60 2fa3      	MOV  R26,R19
000a61 940e 0b5c 	CALL _isdigit
000a63 30e0      	CPI  R30,0
000a64 f421      	BRNE _0x200010D
                 _0x2000106:
000a65 fcf0      	SBRC R15,0
000a66 c077      	RJMP _0x200010F
000a67 2f43      	MOV  R20,R19
000a68 c022      	RJMP _0x2000103
                 _0x200010D:
                 _0x200010C:
000a69 3631      	CPI  R19,97
000a6a f010      	BRLO _0x2000110
000a6b 5537      	SUBI R19,LOW(87)
000a6c c005      	RJMP _0x2000111
                 _0x2000110:
000a6d 3431      	CPI  R19,65
000a6e f010      	BRLO _0x2000112
000a6f 5337      	SUBI R19,LOW(55)
000a70 c001      	RJMP _0x2000113
                 _0x2000112:
000a71 5330      	SUBI R19,LOW(48)
                 _0x2000113:
                 _0x2000111:
000a72 2fe2      	MOV  R30,R18
                +
000a73 81ae     +LDD R26 , Y + 6
000a74 81bf     +LDD R27 , Y + 6 + 1
000a75 8588     +LDD R24 , Y + 6 + 2
000a76 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
000a77 27ff      	CLR  R31
000a78 2766      	CLR  R22
000a79 2777      	CLR  R23
000a7a 940e 0ed6 	CALL __MULD12U
000a7c 01df      	MOVW R26,R30
000a7d 01cb      	MOVW R24,R22
000a7e 2fe3      	MOV  R30,R19
000a7f 27ff      	CLR  R31
000a80 2766      	CLR  R22
000a81 2777      	CLR  R23
000a82 940e 0ea6 	CALL __ADDD12
                +
000a84 83ee     +STD Y + 6 , R30
000a85 83ff     +STD Y + 6 + 1 , R31
000a86 8768     +STD Y + 6 + 2 , R22
000a87 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
000a88 94e8      	CLT
000a89 f8f0      	BLD  R15,0
000a8a cfa7      	RJMP _0x2000101
                 _0x2000103:
000a8b fef2      	SBRS R15,2
000a8c c00a      	RJMP _0x2000114
                +
000a8d 81ee     +LDD R30 , Y + 6
000a8e 81ff     +LDD R31 , Y + 6 + 1
000a8f 8568     +LDD R22 , Y + 6 + 2
000a90 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
000a91 940e 0eaf 	CALL __ANEGD1
                +
000a93 83ee     +STD Y + 6 , R30
000a94 83ff     +STD Y + 6 + 1 , R31
000a95 8768     +STD Y + 6 + 2 , R22
000a96 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
                 _0x2000114:
000a97 fef3      	SBRS R15,3
000a98 c012      	RJMP _0x2000115
000a99 89e8      	LDD  R30,Y+16
000a9a 89f9      	LDD  R31,Y+16+1
000a9b 9734      	SBIW R30,4
000a9c 8be8      	STD  Y+16,R30
000a9d 8bf9      	STD  Y+16+1,R31
000a9e 89a8      	LDD  R26,Y+16
000a9f 89b9      	LDD  R27,Y+16+1
000aa0 9614      	ADIW R26,4
000aa1 910d      	LD   R16,X+
000aa2 911c      	LD   R17,X
                +
000aa3 81ee     +LDD R30 , Y + 6
000aa4 81ff     +LDD R31 , Y + 6 + 1
000aa5 8568     +LDD R22 , Y + 6 + 2
000aa6 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
000aa7 01d8      	MOVW R26,R16
000aa8 940e 0f75 	CALL __PUTDP1
000aaa c00f      	RJMP _0x2000116
                 _0x2000115:
000aab 89e8      	LDD  R30,Y+16
000aac 89f9      	LDD  R31,Y+16+1
000aad 9734      	SBIW R30,4
000aae 8be8      	STD  Y+16,R30
000aaf 8bf9      	STD  Y+16+1,R31
000ab0 89a8      	LDD  R26,Y+16
000ab1 89b9      	LDD  R27,Y+16+1
000ab2 9614      	ADIW R26,4
000ab3 910d      	LD   R16,X+
000ab4 911c      	LD   R17,X
000ab5 81ee      	LDD  R30,Y+6
000ab6 81ff      	LDD  R31,Y+6+1
000ab7 01d8      	MOVW R26,R16
000ab8 93ed      	ST   X+,R30
000ab9 93fc      	ST   X,R31
                 _0x2000116:
                 _0x20000E8:
000aba 85ea      	LDD  R30,Y+10
000abb 85fb      	LDD  R31,Y+10+1
000abc 9631      	ADIW R30,1
000abd 87ea      	STD  Y+10,R30
000abe 87fb      	STD  Y+10+1,R31
000abf c01d      	RJMP _0x2000117
                 _0x20000D7:
                 _0x20000FF:
000ac0 b7ed      	IN   R30,SPL
000ac1 b7fe      	IN   R31,SPH
000ac2 93fa      	ST   -Y,R31
000ac3 93ea      	ST   -Y,R30
000ac4 934f      	PUSH R20
000ac5 85ae      	LDD  R26,Y+14
000ac6 85bf      	LDD  R27,Y+14+1
000ac7 89e8      	LDD  R30,Y+16
000ac8 89f9      	LDD  R31,Y+16+1
000ac9 9509      	ICALL
000aca 914f      	POP  R20
000acb 17e3      	CP   R30,R19
000acc f081      	BREQ _0x2000118
000acd 85ac      	LDD  R26,Y+12
000ace 85bd      	LDD  R27,Y+12+1
000acf 91ac      	LD   R26,X
000ad0 30a0      	CPI  R26,0
000ad1 f41c      	BRGE _0x2000119
000ad2 efef      	LDI  R30,LOW(65535)
000ad3 efff      	LDI  R31,HIGH(65535)
000ad4 c00b      	RJMP _0x20C0006
                 _0x2000119:
                 _0x20000E4:
000ad5 85ea      	LDD  R30,Y+10
000ad6 85fb      	LDD  R31,Y+10+1
000ad7 9730      	SBIW R30,0
000ad8 f419      	BRNE _0x200011A
000ad9 efef      	LDI  R30,LOW(65535)
000ada efff      	LDI  R31,HIGH(65535)
000adb c004      	RJMP _0x20C0006
                 _0x200011A:
000adc c001      	RJMP _0x20000CE
                 _0x2000118:
                 _0x2000117:
                 _0x20000D6:
000add ce66      	RJMP _0x20000CC
                 _0x20000CE:
                 _0x200010F:
                 _0x20C0007:
000ade 85ea      	LDD  R30,Y+10
000adf 85fb      	LDD  R31,Y+10+1
                 _0x20C0006:
000ae0 940e 0fd4 	CALL __LOADLOCR6
000ae2 9664      	ADIW R28,20
000ae3 90ff      	POP  R15
000ae4 9508      	RET
                 ; .FEND
                 _sscanf:
                 ; .FSTART _sscanf
000ae5 92ff      	PUSH R15
000ae6 2ef8      	MOV  R15,R24
000ae7 9723      	SBIW R28,3
000ae8 931a      	ST   -Y,R17
000ae9 930a      	ST   -Y,R16
000aea 01de      	MOVW R26,R28
000aeb 9617      	ADIW R26,7
000aec 940e 0ea2 	CALL __ADDW2R15
000aee 940e 0f6b 	CALL __GETW1P
000af0 9730      	SBIW R30,0
000af1 f419      	BRNE _0x200011B
000af2 efef      	LDI  R30,LOW(65535)
000af3 efff      	LDI  R31,HIGH(65535)
000af4 c01e      	RJMP _0x20C0005
                 _0x200011B:
000af5 01de      	MOVW R26,R28
000af6 9611      	ADIW R26,1
000af7 940e 0ea2 	CALL __ADDW2R15
000af9 018d      	MOVW R16,R26
000afa 01de      	MOVW R26,R28
000afb 9617      	ADIW R26,7
000afc 940e 0ea2 	CALL __ADDW2R15
000afe 940e 0f6b 	CALL __GETW1P
000b00 83eb      	STD  Y+3,R30
000b01 83fc      	STD  Y+3+1,R31
000b02 01de      	MOVW R26,R28
000b03 9615      	ADIW R26,5
000b04 940e 0ea2 	CALL __ADDW2R15
000b06 940e 0f6b 	CALL __GETW1P
000b08 93fa      	ST   -Y,R31
000b09 93ea      	ST   -Y,R30
000b0a 931a      	ST   -Y,R17
000b0b 930a      	ST   -Y,R16
000b0c e0ed      	LDI  R30,LOW(_get_buff_G100)
000b0d e0f9      	LDI  R31,HIGH(_get_buff_G100)
000b0e 93fa      	ST   -Y,R31
000b0f 93ea      	ST   -Y,R30
000b10 01de      	MOVW R26,R28
000b11 9618      	ADIW R26,8
000b12 de26      	RCALL __scanf_G100
                 _0x20C0005:
000b13 8119      	LDD  R17,Y+1
000b14 8108      	LDD  R16,Y+0
000b15 9625      	ADIW R28,5
000b16 90ff      	POP  R15
000b17 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
000b18 93ba      	ST   -Y,R27
000b19 93aa      	ST   -Y,R26
000b1a 81b9          ldd  r27,y+1
000b1b 81a8          ld   r26,y
000b1c 9610          adiw r26,0
000b1d f031          breq memset1
000b1e 81fc          ldd  r31,y+4
000b1f 81eb          ldd  r30,y+3
000b20 816a          ldd  r22,y+2
                 memset0:
000b21 9361          st   z+,r22
000b22 9711          sbiw r26,1
000b23 f7e9          brne memset0
                 memset1:
000b24 81eb          ldd  r30,y+3
000b25 81fc          ldd  r31,y+4
                 _0x20C0004:
000b26 9625      	ADIW R28,5
000b27 9508      	RET
                 ; .FEND
                 _strcpyf:
                 ; .FSTART _strcpyf
000b28 93ba      	ST   -Y,R27
000b29 93aa      	ST   -Y,R26
000b2a 91e9          ld   r30,y+
000b2b 91f9          ld   r31,y+
000b2c 91a9          ld   r26,y+
000b2d 91b9          ld   r27,y+
000b2e 01cd          movw r24,r26
                 strcpyf0:
000b2f 9005      	lpm  r0,z+
000b30 920d          st   x+,r0
000b31 2000          tst  r0
000b32 f7e1          brne strcpyf0
000b33 01fc          movw r30,r24
000b34 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
000b35 93ba      	ST   -Y,R27
000b36 93aa      	ST   -Y,R26
000b37 91a9          ld   r26,y+
000b38 91b9          ld   r27,y+
000b39 27ee          clr  r30
000b3a 27ff          clr  r31
                 strlen0:
000b3b 916d          ld   r22,x+
000b3c 2366          tst  r22
000b3d f011          breq strlen1
000b3e 9631          adiw r30,1
000b3f cffb          rjmp strlen0
                 strlen1:
000b40 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000b41 93ba      	ST   -Y,R27
000b42 93aa      	ST   -Y,R26
000b43 27aa          clr  r26
000b44 27bb          clr  r27
000b45 91e9          ld   r30,y+
000b46 91f9          ld   r31,y+
                 strlenf0:
000b47 9005      	lpm  r0,z+
000b48 2000          tst  r0
000b49 f011          breq strlenf1
000b4a 9611          adiw r26,1
000b4b cffb          rjmp strlenf0
                 strlenf1:
000b4c 01fd          movw r30,r26
000b4d 9508          ret
                 ; .FEND
                 _strrchr:
                 ; .FSTART _strrchr
000b4e 93aa      	ST   -Y,R26
000b4f 9169          ld   r22,y+
000b50 91a9          ld   r26,y+
000b51 91b9          ld   r27,y+
000b52 27ee          clr  r30
000b53 27ff          clr  r31
                 strrchr0:
000b54 917c          ld   r23,x
000b55 1767          cp   r22,r23
000b56 f409          brne strrchr1
000b57 01fd          movw r30,r26
                 strrchr1:
000b58 9611          adiw r26,1
000b59 2377          tst  r23
000b5a f7c9          brne strrchr0
000b5b 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _isdigit:
                 ; .FSTART _isdigit
000b5c 93aa      	ST   -Y,R26
000b5d e0e1          ldi  r30,1
000b5e 91f9          ld   r31,y+
000b5f 33f0          cpi  r31,'0'
000b60 f010          brlo isdigit0
000b61 33fa          cpi  r31,'9'+1
000b62 f008          brlo isdigit1
                 isdigit0:
000b63 27ee          clr  r30
                 isdigit1:
000b64 9508          ret
                 ; .FEND
                 _isspace:
                 ; .FSTART _isspace
000b65 93aa      	ST   -Y,R26
000b66 e0e1          ldi  r30,1
000b67 91f9          ld   r31,y+
000b68 32f0          cpi  r31,' '
000b69 f029          breq isspace1
000b6a 30f9          cpi  r31,9
000b6b f010          brlo isspace0
000b6c 30fe          cpi  r31,13+1
000b6d f008          brlo isspace1
                 isspace0:
000b6e 27ee          clr  r30
                 isspace1:
000b6f 9508          ret
                 ; .FEND
                 _isxdigit:
                 ; .FSTART _isxdigit
000b70 93aa      	ST   -Y,R26
000b71 e0e1          ldi  r30,1
000b72 91f9          ld   r31,y+
000b73 53f0          subi r31,0x30
000b74 f040          brcs isxdigit0
000b75 30fa          cpi  r31,10
000b76 f038          brcs isxdigit1
000b77 75ff          andi r31,0x5f
000b78 50f7          subi r31,7
000b79 30fa          cpi  r31,10
000b7a f010          brcs isxdigit0
000b7b 31f0          cpi  r31,16
000b7c f008          brcs isxdigit1
                 isxdigit0:
000b7d 27ee          clr  r30
                 isxdigit1:
000b7e 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
000b7f 940e 0f8e 	CALL __PUTPARD2
000b81 817b         ldd  r23,y+3
000b82 816a         ldd  r22,y+2
000b83 81f9         ldd  r31,y+1
000b84 81e8         ld   r30,y
000b85 fb77         bst  r23,7
000b86 0f77         lsl  r23
000b87 fd67         sbrc r22,7
000b88 6071         sbr  r23,1
000b89 2f97         mov  r25,r23
000b8a 579e         subi r25,0x7e
000b8b f081         breq __ftrunc0
000b8c f078         brcs __ftrunc0
000b8d 3198         cpi  r25,24
000b8e f490         brsh __ftrunc1
000b8f 27aa         clr  r26
000b90 27bb         clr  r27
000b91 2788         clr  r24
                 __ftrunc2:
000b92 9408         sec
000b93 9587         ror  r24
000b94 95b7         ror  r27
000b95 95a7         ror  r26
000b96 959a         dec  r25
000b97 f7d1         brne __ftrunc2
000b98 23ea         and  r30,r26
000b99 23fb         and  r31,r27
000b9a 2368         and  r22,r24
000b9b c005         rjmp __ftrunc1
                 __ftrunc0:
000b9c 94e8         clt
000b9d 2777         clr  r23
000b9e 27ee         clr  r30
000b9f 27ff         clr  r31
000ba0 2766         clr  r22
                 __ftrunc1:
000ba1 776f         cbr  r22,0x80
000ba2 9576         lsr  r23
000ba3 f408         brcc __ftrunc3
000ba4 6860         sbr  r22,0x80
                 __ftrunc3:
000ba5 f977         bld  r23,7
000ba6 91a9         ld   r26,y+
000ba7 91b9         ld   r27,y+
000ba8 9189         ld   r24,y+
000ba9 9199         ld   r25,y+
000baa 17ea         cp   r30,r26
000bab 07fb         cpc  r31,r27
000bac 0768         cpc  r22,r24
000bad 0779         cpc  r23,r25
000bae fb97         bst  r25,7
000baf 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
000bb0 940e 0f8e 	CALL __PUTPARD2
000bb2 940e 0f7f 	CALL __GETD2S0
000bb4 940e 0b7f 	CALL _ftrunc
000bb6 940e 0f84 	CALL __PUTD1S0
000bb8 f419          brne __floor1
                 __floor0:
000bb9 940e 0f7a 	CALL __GETD1S0
000bbb c009      	RJMP _0x20C0003
                 __floor1:
000bbc f7e6          brtc __floor0
000bbd 940e 0f7a 	CALL __GETD1S0
                +
000bbf e0a0     +LDI R26 , LOW ( 0x3F800000 )
000bc0 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000bc1 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000bc2 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000bc3 940e 0d98 	CALL __SUBF12
                 _0x20C0003:
000bc5 9624      	ADIW R28,4
000bc6 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
000bc7 93ba      	ST   -Y,R27
000bc8 93aa      	ST   -Y,R26
000bc9 9724      	SBIW R28,4
000bca e0e0      	LDI  R30,LOW(0)
000bcb 83e8      	ST   Y,R30
000bcc 83e9      	STD  Y+1,R30
000bcd 83ea      	STD  Y+2,R30
000bce e3ef      	LDI  R30,LOW(63)
000bcf 83eb      	STD  Y+3,R30
000bd0 931a      	ST   -Y,R17
000bd1 930a      	ST   -Y,R16
000bd2 85eb      	LDD  R30,Y+11
000bd3 85fc      	LDD  R31,Y+11+1
000bd4 3fef      	CPI  R30,LOW(0xFFFF)
000bd5 efaf      	LDI  R26,HIGH(0xFFFF)
000bd6 07fa      	CPC  R31,R26
000bd7 f449      	BRNE _0x20A000D
000bd8 81ee      	LDD  R30,Y+6
000bd9 81ff      	LDD  R31,Y+6+1
000bda 93fa      	ST   -Y,R31
000bdb 93ea      	ST   -Y,R30
                +
000bdc eca8     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 0 ) )
000bdd e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 0 ) )
                 	__POINTW2FN _0x20A0000,0
000bde 940e 0b28 	CALL _strcpyf
000be0 c10a      	RJMP _0x20C0002
                 _0x20A000D:
000be1 3fef      	CPI  R30,LOW(0x7FFF)
000be2 e7af      	LDI  R26,HIGH(0x7FFF)
000be3 07fa      	CPC  R31,R26
000be4 f449      	BRNE _0x20A000C
000be5 81ee      	LDD  R30,Y+6
000be6 81ff      	LDD  R31,Y+6+1
000be7 93fa      	ST   -Y,R31
000be8 93ea      	ST   -Y,R30
                +
000be9 eca9     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 1 ) )
000bea e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 1 ) )
                 	__POINTW2FN _0x20A0000,1
000beb 940e 0b28 	CALL _strcpyf
000bed c0fd      	RJMP _0x20C0002
                 _0x20A000C:
000bee 85ac      	LDD  R26,Y+12
000bef 23aa      	TST  R26
000bf0 f492      	BRPL _0x20A000F
                +
000bf1 85e9     +LDD R30 , Y + 9
000bf2 85fa     +LDD R31 , Y + 9 + 1
000bf3 856b     +LDD R22 , Y + 9 + 2
000bf4 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000bf5 940e 0cf9 	CALL __ANEGF1
                +
000bf7 87e9     +STD Y + 9 , R30
000bf8 87fa     +STD Y + 9 + 1 , R31
000bf9 876b     +STD Y + 9 + 2 , R22
000bfa 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000bfb 81ae      	LDD  R26,Y+6
000bfc 81bf      	LDD  R27,Y+6+1
000bfd 9611      	ADIW R26,1
000bfe 83ae      	STD  Y+6,R26
000bff 83bf      	STD  Y+6+1,R27
000c00 9711      	SBIW R26,1
000c01 e2ed      	LDI  R30,LOW(45)
000c02 93ec      	ST   X,R30
                 _0x20A000F:
000c03 85a8      	LDD  R26,Y+8
000c04 30a7      	CPI  R26,LOW(0x7)
000c05 f010      	BRLO _0x20A0010
000c06 e0e6      	LDI  R30,LOW(6)
000c07 87e8      	STD  Y+8,R30
                 _0x20A0010:
000c08 8518      	LDD  R17,Y+8
                 _0x20A0011:
000c09 2fe1      	MOV  R30,R17
000c0a 5011      	SUBI R17,1
000c0b 30e0      	CPI  R30,0
000c0c f079      	BREQ _0x20A0013
                +
000c0d 81aa     +LDD R26 , Y + 2
000c0e 81bb     +LDD R27 , Y + 2 + 1
000c0f 818c     +LDD R24 , Y + 2 + 2
000c10 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
                +
000c11 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000c12 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000c13 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000c14 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000c15 940e 0def 	CALL __MULF12
                +
000c17 83ea     +STD Y + 2 , R30
000c18 83fb     +STD Y + 2 + 1 , R31
000c19 836c     +STD Y + 2 + 2 , R22
000c1a 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000c1b cfed      	RJMP _0x20A0011
                 _0x20A0013:
                +
000c1c 81ea     +LDD R30 , Y + 2
000c1d 81fb     +LDD R31 , Y + 2 + 1
000c1e 816c     +LDD R22 , Y + 2 + 2
000c1f 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000c20 85a9     +LDD R26 , Y + 9
000c21 85ba     +LDD R27 , Y + 9 + 1
000c22 858b     +LDD R24 , Y + 9 + 2
000c23 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000c24 940e 0d9f 	CALL __ADDF12
                +
000c26 87e9     +STD Y + 9 , R30
000c27 87fa     +STD Y + 9 + 1 , R31
000c28 876b     +STD Y + 9 + 2 , R22
000c29 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000c2a e010      	LDI  R17,LOW(0)
                +
000c2b e0e0     +LDI R30 , LOW ( 0x3F800000 )
000c2c e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000c2d e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000c2e e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
                +
000c2f 83ea     +STD Y + 2 , R30
000c30 83fb     +STD Y + 2 + 1 , R31
000c31 836c     +STD Y + 2 + 2 , R22
000c32 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
                 _0x20A0014:
                +
000c33 81ea     +LDD R30 , Y + 2
000c34 81fb     +LDD R31 , Y + 2 + 1
000c35 816c     +LDD R22 , Y + 2 + 2
000c36 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000c37 85a9     +LDD R26 , Y + 9
000c38 85ba     +LDD R27 , Y + 9 + 1
000c39 858b     +LDD R24 , Y + 9 + 2
000c3a 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000c3b 940e 0e82 	CALL __CMPF12
000c3d f0d8      	BRLO _0x20A0016
                +
000c3e 81aa     +LDD R26 , Y + 2
000c3f 81bb     +LDD R27 , Y + 2 + 1
000c40 818c     +LDD R24 , Y + 2 + 2
000c41 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
                +
000c42 e0e0     +LDI R30 , LOW ( 0x41200000 )
000c43 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000c44 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000c45 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000c46 940e 0def 	CALL __MULF12
                +
000c48 83ea     +STD Y + 2 , R30
000c49 83fb     +STD Y + 2 + 1 , R31
000c4a 836c     +STD Y + 2 + 2 , R22
000c4b 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000c4c 5f1f      	SUBI R17,-LOW(1)
000c4d 3217      	CPI  R17,39
000c4e f048      	BRLO _0x20A0017
000c4f 81ee      	LDD  R30,Y+6
000c50 81ff      	LDD  R31,Y+6+1
000c51 93fa      	ST   -Y,R31
000c52 93ea      	ST   -Y,R30
                +
000c53 ecad     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 5 ) )
000c54 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 5 ) )
                 	__POINTW2FN _0x20A0000,5
000c55 940e 0b28 	CALL _strcpyf
000c57 c093      	RJMP _0x20C0002
                 _0x20A0017:
000c58 cfda      	RJMP _0x20A0014
                 _0x20A0016:
000c59 3010      	CPI  R17,0
000c5a f449      	BRNE _0x20A0018
000c5b 81ae      	LDD  R26,Y+6
000c5c 81bf      	LDD  R27,Y+6+1
000c5d 9611      	ADIW R26,1
000c5e 83ae      	STD  Y+6,R26
000c5f 83bf      	STD  Y+6+1,R27
000c60 9711      	SBIW R26,1
000c61 e3e0      	LDI  R30,LOW(48)
000c62 93ec      	ST   X,R30
000c63 c047      	RJMP _0x20A0019
                 _0x20A0018:
                 _0x20A001A:
000c64 2fe1      	MOV  R30,R17
000c65 5011      	SUBI R17,1
000c66 30e0      	CPI  R30,0
000c67 f409      	BRNE PC+2
000c68 c042      	RJMP _0x20A001C
                +
000c69 81aa     +LDD R26 , Y + 2
000c6a 81bb     +LDD R27 , Y + 2 + 1
000c6b 818c     +LDD R24 , Y + 2 + 2
000c6c 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
                +
000c6d eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000c6e ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000c6f ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000c70 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000c71 940e 0def 	CALL __MULF12
                +
000c73 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000c74 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000c75 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000c76 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000c77 940e 0d9f 	CALL __ADDF12
000c79 01df      	MOVW R26,R30
000c7a 01cb      	MOVW R24,R22
000c7b 940e 0bb0 	CALL _floor
                +
000c7d 83ea     +STD Y + 2 , R30
000c7e 83fb     +STD Y + 2 + 1 , R31
000c7f 836c     +STD Y + 2 + 2 , R22
000c80 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
                +
000c81 85a9     +LDD R26 , Y + 9
000c82 85ba     +LDD R27 , Y + 9 + 1
000c83 858b     +LDD R24 , Y + 9 + 2
000c84 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000c85 940e 0e3d 	CALL __DIVF21
000c87 940e 0d2c 	CALL __CFD1U
000c89 2f0e      	MOV  R16,R30
000c8a 81ae      	LDD  R26,Y+6
000c8b 81bf      	LDD  R27,Y+6+1
000c8c 9611      	ADIW R26,1
000c8d 83ae      	STD  Y+6,R26
000c8e 83bf      	STD  Y+6+1,R27
000c8f 9711      	SBIW R26,1
000c90 5de0      	SUBI R30,-LOW(48)
000c91 93ec      	ST   X,R30
000c92 2fe0      	MOV  R30,R16
000c93 e0f0      	LDI  R31,0
                +
000c94 81aa     +LDD R26 , Y + 2
000c95 81bb     +LDD R27 , Y + 2 + 1
000c96 818c     +LDD R24 , Y + 2 + 2
000c97 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000c98 940e 0ec5 	CALL __CWD1
000c9a 940e 0d65 	CALL __CDF1
000c9c 940e 0def 	CALL __MULF12
                +
000c9e 85a9     +LDD R26 , Y + 9
000c9f 85ba     +LDD R27 , Y + 9 + 1
000ca0 858b     +LDD R24 , Y + 9 + 2
000ca1 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000ca2 940e 0f93 	CALL __SWAPD12
000ca4 940e 0d98 	CALL __SUBF12
                +
000ca6 87e9     +STD Y + 9 , R30
000ca7 87fa     +STD Y + 9 + 1 , R31
000ca8 876b     +STD Y + 9 + 2 , R22
000ca9 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000caa cfb9      	RJMP _0x20A001A
                 _0x20A001C:
                 _0x20A0019:
000cab 85e8      	LDD  R30,Y+8
000cac 30e0      	CPI  R30,0
000cad f1c9      	BREQ _0x20C0001
000cae 81ae      	LDD  R26,Y+6
000caf 81bf      	LDD  R27,Y+6+1
000cb0 9611      	ADIW R26,1
000cb1 83ae      	STD  Y+6,R26
000cb2 83bf      	STD  Y+6+1,R27
000cb3 9711      	SBIW R26,1
000cb4 e2ee      	LDI  R30,LOW(46)
000cb5 93ec      	ST   X,R30
                 _0x20A001E:
000cb6 85e8      	LDD  R30,Y+8
000cb7 50e1      	SUBI R30,LOW(1)
000cb8 87e8      	STD  Y+8,R30
000cb9 5fef      	SUBI R30,-LOW(1)
000cba f161      	BREQ _0x20A0020
                +
000cbb 85a9     +LDD R26 , Y + 9
000cbc 85ba     +LDD R27 , Y + 9 + 1
000cbd 858b     +LDD R24 , Y + 9 + 2
000cbe 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
                +
000cbf e0e0     +LDI R30 , LOW ( 0x41200000 )
000cc0 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000cc1 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000cc2 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000cc3 940e 0def 	CALL __MULF12
                +
000cc5 87e9     +STD Y + 9 , R30
000cc6 87fa     +STD Y + 9 + 1 , R31
000cc7 876b     +STD Y + 9 + 2 , R22
000cc8 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000cc9 940e 0d2c 	CALL __CFD1U
000ccb 2f0e      	MOV  R16,R30
000ccc 81ae      	LDD  R26,Y+6
000ccd 81bf      	LDD  R27,Y+6+1
000cce 9611      	ADIW R26,1
000ccf 83ae      	STD  Y+6,R26
000cd0 83bf      	STD  Y+6+1,R27
000cd1 9711      	SBIW R26,1
000cd2 5de0      	SUBI R30,-LOW(48)
000cd3 93ec      	ST   X,R30
000cd4 2fe0      	MOV  R30,R16
000cd5 e0f0      	LDI  R31,0
                +
000cd6 85a9     +LDD R26 , Y + 9
000cd7 85ba     +LDD R27 , Y + 9 + 1
000cd8 858b     +LDD R24 , Y + 9 + 2
000cd9 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000cda 940e 0ec5 	CALL __CWD1
000cdc 940e 0d65 	CALL __CDF1
000cde 940e 0f93 	CALL __SWAPD12
000ce0 940e 0d98 	CALL __SUBF12
                +
000ce2 87e9     +STD Y + 9 , R30
000ce3 87fa     +STD Y + 9 + 1 , R31
000ce4 876b     +STD Y + 9 + 2 , R22
000ce5 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000ce6 cfcf      	RJMP _0x20A001E
                 _0x20A0020:
                 _0x20C0001:
000ce7 81ae      	LDD  R26,Y+6
000ce8 81bf      	LDD  R27,Y+6+1
000ce9 e0e0      	LDI  R30,LOW(0)
000cea 93ec      	ST   X,R30
                 _0x20C0002:
000ceb 8119      	LDD  R17,Y+1
000cec 8108      	LDD  R16,Y+0
000ced 962d      	ADIW R28,13
000cee 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _recv_buf:
000300           	.BYTE 0x14
                 __seed_G105:
000314           	.BYTE 0x4
                 
                 	.CSEG
                 
                 	.CSEG
                 _delay_ms:
000cef 9610      	adiw r26,0
000cf0 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000cf1 ec8d     +LDI R24 , LOW ( 0xACD )
000cf2 e09a     +LDI R25 , HIGH ( 0xACD )
                +__DELAY_USW_LOOP :
000cf3 9701     +SBIW R24 , 1
000cf4 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xACD
000cf5 95a8      	wdr
000cf6 9711      	sbiw r26,1
000cf7 f7c9      	brne __delay_ms0
                 __delay_ms1:
000cf8 9508      	ret
                 
                 __ANEGF1:
000cf9 9730      	SBIW R30,0
000cfa 4060      	SBCI R22,0
000cfb 4070      	SBCI R23,0
000cfc f009      	BREQ __ANEGF10
000cfd 5870      	SUBI R23,0x80
                 __ANEGF10:
000cfe 9508      	RET
                 
                 __ROUND_REPACK:
000cff 2355      	TST  R21
000d00 f442      	BRPL __REPACK
000d01 3850      	CPI  R21,0x80
000d02 f411      	BRNE __ROUND_REPACK0
000d03 ffe0      	SBRS R30,0
000d04 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000d05 9631      	ADIW R30,1
000d06 1f69      	ADC  R22,R25
000d07 1f79      	ADC  R23,R25
000d08 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000d09 e850      	LDI  R21,0x80
000d0a 2757      	EOR  R21,R23
000d0b f411      	BRNE __REPACK0
000d0c 935f      	PUSH R21
000d0d c0cf      	RJMP __ZERORES
                 __REPACK0:
000d0e 3f5f      	CPI  R21,0xFF
000d0f f031      	BREQ __REPACK1
000d10 0f66      	LSL  R22
000d11 0c00      	LSL  R0
000d12 9557      	ROR  R21
000d13 9567      	ROR  R22
000d14 2f75      	MOV  R23,R21
000d15 9508      	RET
                 __REPACK1:
000d16 935f      	PUSH R21
000d17 2000      	TST  R0
000d18 f00a      	BRMI __REPACK2
000d19 c0cf      	RJMP __MAXRES
                 __REPACK2:
000d1a c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000d1b e850      	LDI  R21,0x80
000d1c 2e19      	MOV  R1,R25
000d1d 2215      	AND  R1,R21
000d1e 0f88      	LSL  R24
000d1f 1f99      	ROL  R25
000d20 2795      	EOR  R25,R21
000d21 0f55      	LSL  R21
000d22 9587      	ROR  R24
                 
                 __UNPACK1:
000d23 e850      	LDI  R21,0x80
000d24 2e07      	MOV  R0,R23
000d25 2205      	AND  R0,R21
000d26 0f66      	LSL  R22
000d27 1f77      	ROL  R23
000d28 2775      	EOR  R23,R21
000d29 0f55      	LSL  R21
000d2a 9567      	ROR  R22
000d2b 9508      	RET
                 
                 __CFD1U:
000d2c 9468      	SET
000d2d c001      	RJMP __CFD1U0
                 __CFD1:
000d2e 94e8      	CLT
                 __CFD1U0:
000d2f 935f      	PUSH R21
000d30 dff2      	RCALL __UNPACK1
000d31 3870      	CPI  R23,0x80
000d32 f018      	BRLO __CFD10
000d33 3f7f      	CPI  R23,0xFF
000d34 f408      	BRCC __CFD10
000d35 c0a7      	RJMP __ZERORES
                 __CFD10:
000d36 e156      	LDI  R21,22
000d37 1b57      	SUB  R21,R23
000d38 f4aa      	BRPL __CFD11
000d39 9551      	NEG  R21
000d3a 3058      	CPI  R21,8
000d3b f40e      	BRTC __CFD19
000d3c 3059      	CPI  R21,9
                 __CFD19:
000d3d f030      	BRLO __CFD17
000d3e efef      	SER  R30
000d3f efff      	SER  R31
000d40 ef6f      	SER  R22
000d41 e77f      	LDI  R23,0x7F
000d42 f977      	BLD  R23,7
000d43 c01a      	RJMP __CFD15
                 __CFD17:
000d44 2777      	CLR  R23
000d45 2355      	TST  R21
000d46 f0b9      	BREQ __CFD15
                 __CFD18:
000d47 0fee      	LSL  R30
000d48 1fff      	ROL  R31
000d49 1f66      	ROL  R22
000d4a 1f77      	ROL  R23
000d4b 955a      	DEC  R21
000d4c f7d1      	BRNE __CFD18
000d4d c010      	RJMP __CFD15
                 __CFD11:
000d4e 2777      	CLR  R23
                 __CFD12:
000d4f 3058      	CPI  R21,8
000d50 f028      	BRLO __CFD13
000d51 2fef      	MOV  R30,R31
000d52 2ff6      	MOV  R31,R22
000d53 2f67      	MOV  R22,R23
000d54 5058      	SUBI R21,8
000d55 cff9      	RJMP __CFD12
                 __CFD13:
000d56 2355      	TST  R21
000d57 f031      	BREQ __CFD15
                 __CFD14:
000d58 9576      	LSR  R23
000d59 9567      	ROR  R22
000d5a 95f7      	ROR  R31
000d5b 95e7      	ROR  R30
000d5c 955a      	DEC  R21
000d5d f7d1      	BRNE __CFD14
                 __CFD15:
000d5e 2000      	TST  R0
000d5f f40a      	BRPL __CFD16
000d60 d14e      	RCALL __ANEGD1
                 __CFD16:
000d61 915f      	POP  R21
000d62 9508      	RET
                 
                 __CDF1U:
000d63 9468      	SET
000d64 c001      	RJMP __CDF1U0
                 __CDF1:
000d65 94e8      	CLT
                 __CDF1U0:
000d66 9730      	SBIW R30,0
000d67 4060      	SBCI R22,0
000d68 4070      	SBCI R23,0
000d69 f0b1      	BREQ __CDF10
000d6a 2400      	CLR  R0
000d6b f026      	BRTS __CDF11
000d6c 2377      	TST  R23
000d6d f412      	BRPL __CDF11
000d6e 9400      	COM  R0
000d6f d13f      	RCALL __ANEGD1
                 __CDF11:
000d70 2e17      	MOV  R1,R23
000d71 e17e      	LDI  R23,30
000d72 2011      	TST  R1
                 __CDF12:
000d73 f032      	BRMI __CDF13
000d74 957a      	DEC  R23
000d75 0fee      	LSL  R30
000d76 1fff      	ROL  R31
000d77 1f66      	ROL  R22
000d78 1c11      	ROL  R1
000d79 cff9      	RJMP __CDF12
                 __CDF13:
000d7a 2fef      	MOV  R30,R31
000d7b 2ff6      	MOV  R31,R22
000d7c 2d61      	MOV  R22,R1
000d7d 935f      	PUSH R21
000d7e df8a      	RCALL __REPACK
000d7f 915f      	POP  R21
                 __CDF10:
000d80 9508      	RET
                 
                 __SWAPACC:
000d81 934f      	PUSH R20
000d82 01af      	MOVW R20,R30
000d83 01fd      	MOVW R30,R26
000d84 01da      	MOVW R26,R20
000d85 01ab      	MOVW R20,R22
000d86 01bc      	MOVW R22,R24
000d87 01ca      	MOVW R24,R20
000d88 2d40      	MOV  R20,R0
000d89 2c01      	MOV  R0,R1
000d8a 2e14      	MOV  R1,R20
000d8b 914f      	POP  R20
000d8c 9508      	RET
                 
                 __UADD12:
000d8d 0fea      	ADD  R30,R26
000d8e 1ffb      	ADC  R31,R27
000d8f 1f68      	ADC  R22,R24
000d90 9508      	RET
                 
                 __NEGMAN1:
000d91 95e0      	COM  R30
000d92 95f0      	COM  R31
000d93 9560      	COM  R22
000d94 5fef      	SUBI R30,-1
000d95 4fff      	SBCI R31,-1
000d96 4f6f      	SBCI R22,-1
000d97 9508      	RET
                 
                 __SUBF12:
000d98 935f      	PUSH R21
000d99 df81      	RCALL __UNPACK
000d9a 3890      	CPI  R25,0x80
000d9b f171      	BREQ __ADDF129
000d9c e850      	LDI  R21,0x80
000d9d 2615      	EOR  R1,R21
                 
000d9e c004      	RJMP __ADDF120
                 
                 __ADDF12:
000d9f 935f      	PUSH R21
000da0 df7a      	RCALL __UNPACK
000da1 3890      	CPI  R25,0x80
000da2 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000da3 3870      	CPI  R23,0x80
000da4 f121      	BREQ __ADDF128
                 __ADDF121:
000da5 2f57      	MOV  R21,R23
000da6 1b59      	SUB  R21,R25
000da7 f12b      	BRVS __ADDF1211
000da8 f412      	BRPL __ADDF122
000da9 dfd7      	RCALL __SWAPACC
000daa cffa      	RJMP __ADDF121
                 __ADDF122:
000dab 3158      	CPI  R21,24
000dac f018      	BRLO __ADDF123
000dad 27aa      	CLR  R26
000dae 27bb      	CLR  R27
000daf 2788      	CLR  R24
                 __ADDF123:
000db0 3058      	CPI  R21,8
000db1 f028      	BRLO __ADDF124
000db2 2fab      	MOV  R26,R27
000db3 2fb8      	MOV  R27,R24
000db4 2788      	CLR  R24
000db5 5058      	SUBI R21,8
000db6 cff9      	RJMP __ADDF123
                 __ADDF124:
000db7 2355      	TST  R21
000db8 f029      	BREQ __ADDF126
                 __ADDF125:
000db9 9586      	LSR  R24
000dba 95b7      	ROR  R27
000dbb 95a7      	ROR  R26
000dbc 955a      	DEC  R21
000dbd f7d9      	BRNE __ADDF125
                 __ADDF126:
000dbe 2d50      	MOV  R21,R0
000dbf 2551      	EOR  R21,R1
000dc0 f072      	BRMI __ADDF127
000dc1 dfcb      	RCALL __UADD12
000dc2 f438      	BRCC __ADDF129
000dc3 9567      	ROR  R22
000dc4 95f7      	ROR  R31
000dc5 95e7      	ROR  R30
000dc6 9573      	INC  R23
000dc7 f413      	BRVC __ADDF129
000dc8 c020      	RJMP __MAXRES
                 __ADDF128:
000dc9 dfb7      	RCALL __SWAPACC
                 __ADDF129:
000dca df3e      	RCALL __REPACK
000dcb 915f      	POP  R21
000dcc 9508      	RET
                 __ADDF1211:
000dcd f7d8      	BRCC __ADDF128
000dce cffb      	RJMP __ADDF129
                 __ADDF127:
000dcf 1bea      	SUB  R30,R26
000dd0 0bfb      	SBC  R31,R27
000dd1 0b68      	SBC  R22,R24
000dd2 f051      	BREQ __ZERORES
000dd3 f410      	BRCC __ADDF1210
000dd4 9400      	COM  R0
000dd5 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000dd6 2366      	TST  R22
000dd7 f392      	BRMI __ADDF129
000dd8 0fee      	LSL  R30
000dd9 1fff      	ROL  R31
000dda 1f66      	ROL  R22
000ddb 957a      	DEC  R23
000ddc f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000ddd 27ee      	CLR  R30
000dde 27ff      	CLR  R31
000ddf 2766      	CLR  R22
000de0 2777      	CLR  R23
000de1 915f      	POP  R21
000de2 9508      	RET
                 
                 __MINRES:
000de3 efef      	SER  R30
000de4 efff      	SER  R31
000de5 e76f      	LDI  R22,0x7F
000de6 ef7f      	SER  R23
000de7 915f      	POP  R21
000de8 9508      	RET
                 
                 __MAXRES:
000de9 efef      	SER  R30
000dea efff      	SER  R31
000deb e76f      	LDI  R22,0x7F
000dec e77f      	LDI  R23,0x7F
000ded 915f      	POP  R21
000dee 9508      	RET
                 
                 __MULF12:
000def 935f      	PUSH R21
000df0 df2a      	RCALL __UNPACK
000df1 3870      	CPI  R23,0x80
000df2 f351      	BREQ __ZERORES
000df3 3890      	CPI  R25,0x80
000df4 f341      	BREQ __ZERORES
000df5 2401      	EOR  R0,R1
000df6 9408      	SEC
000df7 1f79      	ADC  R23,R25
000df8 f423      	BRVC __MULF124
000df9 f31c      	BRLT __ZERORES
                 __MULF125:
000dfa 2000      	TST  R0
000dfb f33a      	BRMI __MINRES
000dfc cfec      	RJMP __MAXRES
                 __MULF124:
000dfd 920f      	PUSH R0
000dfe 931f      	PUSH R17
000dff 932f      	PUSH R18
000e00 933f      	PUSH R19
000e01 934f      	PUSH R20
000e02 2711      	CLR  R17
000e03 2722      	CLR  R18
000e04 2799      	CLR  R25
000e05 9f68      	MUL  R22,R24
000e06 01a0      	MOVW R20,R0
000e07 9f8f      	MUL  R24,R31
000e08 2d30      	MOV  R19,R0
000e09 0d41      	ADD  R20,R1
000e0a 1f59      	ADC  R21,R25
000e0b 9f6b      	MUL  R22,R27
000e0c 0d30      	ADD  R19,R0
000e0d 1d41      	ADC  R20,R1
000e0e 1f59      	ADC  R21,R25
000e0f 9f8e      	MUL  R24,R30
000e10 d027      	RCALL __MULF126
000e11 9fbf      	MUL  R27,R31
000e12 d025      	RCALL __MULF126
000e13 9f6a      	MUL  R22,R26
000e14 d023      	RCALL __MULF126
000e15 9fbe      	MUL  R27,R30
000e16 d01d      	RCALL __MULF127
000e17 9faf      	MUL  R26,R31
000e18 d01b      	RCALL __MULF127
000e19 9fae      	MUL  R26,R30
000e1a 0d11      	ADD  R17,R1
000e1b 1f29      	ADC  R18,R25
000e1c 1f39      	ADC  R19,R25
000e1d 1f49      	ADC  R20,R25
000e1e 1f59      	ADC  R21,R25
000e1f 2fe3      	MOV  R30,R19
000e20 2ff4      	MOV  R31,R20
000e21 2f65      	MOV  R22,R21
000e22 2f52      	MOV  R21,R18
000e23 914f      	POP  R20
000e24 913f      	POP  R19
000e25 912f      	POP  R18
000e26 911f      	POP  R17
000e27 900f      	POP  R0
000e28 2366      	TST  R22
000e29 f02a      	BRMI __MULF122
000e2a 0f55      	LSL  R21
000e2b 1fee      	ROL  R30
000e2c 1fff      	ROL  R31
000e2d 1f66      	ROL  R22
000e2e c002      	RJMP __MULF123
                 __MULF122:
000e2f 9573      	INC  R23
000e30 f24b      	BRVS __MULF125
                 __MULF123:
000e31 decd      	RCALL __ROUND_REPACK
000e32 915f      	POP  R21
000e33 9508      	RET
                 
                 __MULF127:
000e34 0d10      	ADD  R17,R0
000e35 1d21      	ADC  R18,R1
000e36 1f39      	ADC  R19,R25
000e37 c002      	RJMP __MULF128
                 __MULF126:
000e38 0d20      	ADD  R18,R0
000e39 1d31      	ADC  R19,R1
                 __MULF128:
000e3a 1f49      	ADC  R20,R25
000e3b 1f59      	ADC  R21,R25
000e3c 9508      	RET
                 
                 __DIVF21:
000e3d 935f      	PUSH R21
000e3e dedc      	RCALL __UNPACK
000e3f 3870      	CPI  R23,0x80
000e40 f421      	BRNE __DIVF210
000e41 2011      	TST  R1
                 __DIVF211:
000e42 f40a      	BRPL __DIVF219
000e43 cf9f      	RJMP __MINRES
                 __DIVF219:
000e44 cfa4      	RJMP __MAXRES
                 __DIVF210:
000e45 3890      	CPI  R25,0x80
000e46 f409      	BRNE __DIVF218
                 __DIVF217:
000e47 cf95      	RJMP __ZERORES
                 __DIVF218:
000e48 2401      	EOR  R0,R1
000e49 9408      	SEC
000e4a 0b97      	SBC  R25,R23
000e4b f41b      	BRVC __DIVF216
000e4c f3d4      	BRLT __DIVF217
000e4d 2000      	TST  R0
000e4e cff3      	RJMP __DIVF211
                 __DIVF216:
000e4f 2f79      	MOV  R23,R25
000e50 931f      	PUSH R17
000e51 932f      	PUSH R18
000e52 933f      	PUSH R19
000e53 934f      	PUSH R20
000e54 2411      	CLR  R1
000e55 2711      	CLR  R17
000e56 2722      	CLR  R18
000e57 2733      	CLR  R19
000e58 2744      	CLR  R20
000e59 2755      	CLR  R21
000e5a e290      	LDI  R25,32
                 __DIVF212:
000e5b 17ae      	CP   R26,R30
000e5c 07bf      	CPC  R27,R31
000e5d 0786      	CPC  R24,R22
000e5e 0741      	CPC  R20,R17
000e5f f030      	BRLO __DIVF213
000e60 1bae      	SUB  R26,R30
000e61 0bbf      	SBC  R27,R31
000e62 0b86      	SBC  R24,R22
000e63 0b41      	SBC  R20,R17
000e64 9408      	SEC
000e65 c001      	RJMP __DIVF214
                 __DIVF213:
000e66 9488      	CLC
                 __DIVF214:
000e67 1f55      	ROL  R21
000e68 1f22      	ROL  R18
000e69 1f33      	ROL  R19
000e6a 1c11      	ROL  R1
000e6b 1faa      	ROL  R26
000e6c 1fbb      	ROL  R27
000e6d 1f88      	ROL  R24
000e6e 1f44      	ROL  R20
000e6f 959a      	DEC  R25
000e70 f751      	BRNE __DIVF212
000e71 01f9      	MOVW R30,R18
000e72 2d61      	MOV  R22,R1
000e73 914f      	POP  R20
000e74 913f      	POP  R19
000e75 912f      	POP  R18
000e76 911f      	POP  R17
000e77 2366      	TST  R22
000e78 f032      	BRMI __DIVF215
000e79 0f55      	LSL  R21
000e7a 1fee      	ROL  R30
000e7b 1fff      	ROL  R31
000e7c 1f66      	ROL  R22
000e7d 957a      	DEC  R23
000e7e f243      	BRVS __DIVF217
                 __DIVF215:
000e7f de7f      	RCALL __ROUND_REPACK
000e80 915f      	POP  R21
000e81 9508      	RET
                 
                 __CMPF12:
000e82 2399      	TST  R25
000e83 f09a      	BRMI __CMPF120
000e84 2377      	TST  R23
000e85 f042      	BRMI __CMPF121
000e86 1797      	CP   R25,R23
000e87 f048      	BRLO __CMPF122
000e88 f429      	BRNE __CMPF121
000e89 17ae      	CP   R26,R30
000e8a 07bf      	CPC  R27,R31
000e8b 0786      	CPC  R24,R22
000e8c f020      	BRLO __CMPF122
000e8d f031      	BREQ __CMPF123
                 __CMPF121:
000e8e 9498      	CLZ
000e8f 9488      	CLC
000e90 9508      	RET
                 __CMPF122:
000e91 9498      	CLZ
000e92 9408      	SEC
000e93 9508      	RET
                 __CMPF123:
000e94 9418      	SEZ
000e95 9488      	CLC
000e96 9508      	RET
                 __CMPF120:
000e97 2377      	TST  R23
000e98 f7c2      	BRPL __CMPF122
000e99 1797      	CP   R25,R23
000e9a f398      	BRLO __CMPF121
000e9b f7a9      	BRNE __CMPF122
000e9c 17ea      	CP   R30,R26
000e9d 07fb      	CPC  R31,R27
000e9e 0768      	CPC  R22,R24
000e9f f388      	BRLO __CMPF122
000ea0 f399      	BREQ __CMPF123
000ea1 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
000ea2 2400      	CLR  R0
000ea3 0daf      	ADD  R26,R15
000ea4 1db0      	ADC  R27,R0
000ea5 9508      	RET
                 
                 __ADDD12:
000ea6 0fea      	ADD  R30,R26
000ea7 1ffb      	ADC  R31,R27
000ea8 1f68      	ADC  R22,R24
000ea9 1f79      	ADC  R23,R25
000eaa 9508      	RET
                 
                 __ANEGW1:
000eab 95f1      	NEG  R31
000eac 95e1      	NEG  R30
000ead 40f0      	SBCI R31,0
000eae 9508      	RET
                 
                 __ANEGD1:
000eaf 95f0      	COM  R31
000eb0 9560      	COM  R22
000eb1 9570      	COM  R23
000eb2 95e1      	NEG  R30
000eb3 4fff      	SBCI R31,-1
000eb4 4f6f      	SBCI R22,-1
000eb5 4f7f      	SBCI R23,-1
000eb6 9508      	RET
                 
                 __LSLB12:
000eb7 23ee      	TST  R30
000eb8 2e0e      	MOV  R0,R30
000eb9 2fea      	MOV  R30,R26
000eba f019      	BREQ __LSLB12R
                 __LSLB12L:
000ebb 0fee      	LSL  R30
000ebc 940a      	DEC  R0
000ebd f7e9      	BRNE __LSLB12L
                 __LSLB12R:
000ebe 9508      	RET
                 
                 __CBD1:
000ebf 2ffe      	MOV  R31,R30
000ec0 0fff      	ADD  R31,R31
000ec1 0bff      	SBC  R31,R31
000ec2 2f6f      	MOV  R22,R31
000ec3 2f7f      	MOV  R23,R31
000ec4 9508      	RET
                 
                 __CWD1:
000ec5 2f6f      	MOV  R22,R31
000ec6 0f66      	ADD  R22,R22
000ec7 0b66      	SBC  R22,R22
000ec8 2f76      	MOV  R23,R22
000ec9 9508      	RET
                 
                 __LTW12:
000eca 17ae      	CP   R26,R30
000ecb 07bf      	CPC  R27,R31
000ecc e0e1      	LDI  R30,1
000ecd f00c      	BRLT __LTW12T
000ece 27ee      	CLR  R30
                 __LTW12T:
000ecf 9508      	RET
                 
                 __GTW12:
000ed0 17ea      	CP   R30,R26
000ed1 07fb      	CPC  R31,R27
000ed2 e0e1      	LDI  R30,1
000ed3 f00c      	BRLT __GTW12T
000ed4 27ee      	CLR  R30
                 __GTW12T:
000ed5 9508      	RET
                 
                 __MULD12U:
000ed6 9f7a      	MUL  R23,R26
000ed7 2d70      	MOV  R23,R0
000ed8 9f6b      	MUL  R22,R27
000ed9 0d70      	ADD  R23,R0
000eda 9ff8      	MUL  R31,R24
000edb 0d70      	ADD  R23,R0
000edc 9fe9      	MUL  R30,R25
000edd 0d70      	ADD  R23,R0
000ede 9f6a      	MUL  R22,R26
000edf 2d60      	MOV  R22,R0
000ee0 0d71      	ADD  R23,R1
000ee1 9ffb      	MUL  R31,R27
000ee2 0d60      	ADD  R22,R0
000ee3 1d71      	ADC  R23,R1
000ee4 9fe8      	MUL  R30,R24
000ee5 0d60      	ADD  R22,R0
000ee6 1d71      	ADC  R23,R1
000ee7 2788      	CLR  R24
000ee8 9ffa      	MUL  R31,R26
000ee9 2df0      	MOV  R31,R0
000eea 0d61      	ADD  R22,R1
000eeb 1f78      	ADC  R23,R24
000eec 9feb      	MUL  R30,R27
000eed 0df0      	ADD  R31,R0
000eee 1d61      	ADC  R22,R1
000eef 1f78      	ADC  R23,R24
000ef0 9fea      	MUL  R30,R26
000ef1 2de0      	MOV  R30,R0
000ef2 0df1      	ADD  R31,R1
000ef3 1f68      	ADC  R22,R24
000ef4 1f78      	ADC  R23,R24
000ef5 9508      	RET
                 
                 __DIVB21U:
000ef6 2400      	CLR  R0
000ef7 e098      	LDI  R25,8
                 __DIVB21U1:
000ef8 0faa      	LSL  R26
000ef9 1c00      	ROL  R0
000efa 1a0e      	SUB  R0,R30
000efb f410      	BRCC __DIVB21U2
000efc 0e0e      	ADD  R0,R30
000efd c001      	RJMP __DIVB21U3
                 __DIVB21U2:
000efe 60a1      	SBR  R26,1
                 __DIVB21U3:
000eff 959a      	DEC  R25
000f00 f7b9      	BRNE __DIVB21U1
000f01 2fea      	MOV  R30,R26
000f02 2da0      	MOV  R26,R0
000f03 9508      	RET
                 
                 __DIVB21:
000f04 d05a      	RCALL __CHKSIGNB
000f05 dff0      	RCALL __DIVB21U
000f06 f40e      	BRTC __DIVB211
000f07 95e1      	NEG  R30
                 __DIVB211:
000f08 9508      	RET
                 
                 __DIVW21U:
000f09 2400      	CLR  R0
000f0a 2411      	CLR  R1
000f0b e190      	LDI  R25,16
                 __DIVW21U1:
000f0c 0faa      	LSL  R26
000f0d 1fbb      	ROL  R27
000f0e 1c00      	ROL  R0
000f0f 1c11      	ROL  R1
000f10 1a0e      	SUB  R0,R30
000f11 0a1f      	SBC  R1,R31
000f12 f418      	BRCC __DIVW21U2
000f13 0e0e      	ADD  R0,R30
000f14 1e1f      	ADC  R1,R31
000f15 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000f16 60a1      	SBR  R26,1
                 __DIVW21U3:
000f17 959a      	DEC  R25
000f18 f799      	BRNE __DIVW21U1
000f19 01fd      	MOVW R30,R26
000f1a 01d0      	MOVW R26,R0
000f1b 9508      	RET
                 
                 __DIVD21U:
000f1c 933f      	PUSH R19
000f1d 934f      	PUSH R20
000f1e 935f      	PUSH R21
000f1f 2400      	CLR  R0
000f20 2411      	CLR  R1
000f21 2744      	CLR  R20
000f22 2755      	CLR  R21
000f23 e230      	LDI  R19,32
                 __DIVD21U1:
000f24 0faa      	LSL  R26
000f25 1fbb      	ROL  R27
000f26 1f88      	ROL  R24
000f27 1f99      	ROL  R25
000f28 1c00      	ROL  R0
000f29 1c11      	ROL  R1
000f2a 1f44      	ROL  R20
000f2b 1f55      	ROL  R21
000f2c 1a0e      	SUB  R0,R30
000f2d 0a1f      	SBC  R1,R31
000f2e 0b46      	SBC  R20,R22
000f2f 0b57      	SBC  R21,R23
000f30 f428      	BRCC __DIVD21U2
000f31 0e0e      	ADD  R0,R30
000f32 1e1f      	ADC  R1,R31
000f33 1f46      	ADC  R20,R22
000f34 1f57      	ADC  R21,R23
000f35 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000f36 60a1      	SBR  R26,1
                 __DIVD21U3:
000f37 953a      	DEC  R19
000f38 f759      	BRNE __DIVD21U1
000f39 01fd      	MOVW R30,R26
000f3a 01bc      	MOVW R22,R24
000f3b 01d0      	MOVW R26,R0
000f3c 01ca      	MOVW R24,R20
000f3d 915f      	POP  R21
000f3e 914f      	POP  R20
000f3f 913f      	POP  R19
000f40 9508      	RET
                 
                 __MODB21:
000f41 94e8      	CLT
000f42 ffa7      	SBRS R26,7
000f43 c002      	RJMP __MODB211
000f44 95a1      	NEG  R26
000f45 9468      	SET
                 __MODB211:
000f46 fde7      	SBRC R30,7
000f47 95e1      	NEG  R30
000f48 dfad      	RCALL __DIVB21U
000f49 2fea      	MOV  R30,R26
000f4a f40e      	BRTC __MODB212
000f4b 95e1      	NEG  R30
                 __MODB212:
000f4c 9508      	RET
                 
                 __MODW21:
000f4d 94e8      	CLT
000f4e ffb7      	SBRS R27,7
000f4f c004      	RJMP __MODW211
000f50 95a0      	COM  R26
000f51 95b0      	COM  R27
000f52 9611      	ADIW R26,1
000f53 9468      	SET
                 __MODW211:
000f54 fdf7      	SBRC R31,7
000f55 df55      	RCALL __ANEGW1
000f56 dfb2      	RCALL __DIVW21U
000f57 01fd      	MOVW R30,R26
000f58 f40e      	BRTC __MODW212
000f59 df51      	RCALL __ANEGW1
                 __MODW212:
000f5a 9508      	RET
                 
                 __MODD21U:
000f5b dfc0      	RCALL __DIVD21U
000f5c 01fd      	MOVW R30,R26
000f5d 01bc      	MOVW R22,R24
000f5e 9508      	RET
                 
                 __CHKSIGNB:
000f5f 94e8      	CLT
000f60 ffe7      	SBRS R30,7
000f61 c002      	RJMP __CHKSB1
000f62 95e1      	NEG  R30
000f63 9468      	SET
                 __CHKSB1:
000f64 ffa7      	SBRS R26,7
000f65 c004      	RJMP __CHKSB2
000f66 95a1      	NEG  R26
000f67 f800      	BLD  R0,0
000f68 9403      	INC  R0
000f69 fa00      	BST  R0,0
                 __CHKSB2:
000f6a 9508      	RET
                 
                 __GETW1P:
000f6b 91ed      	LD   R30,X+
000f6c 91fc      	LD   R31,X
000f6d 9711      	SBIW R26,1
000f6e 9508      	RET
                 
                 __GETD1P:
000f6f 91ed      	LD   R30,X+
000f70 91fd      	LD   R31,X+
000f71 916d      	LD   R22,X+
000f72 917c      	LD   R23,X
000f73 9713      	SBIW R26,3
000f74 9508      	RET
                 
                 __PUTDP1:
000f75 93ed      	ST   X+,R30
000f76 93fd      	ST   X+,R31
000f77 936d      	ST   X+,R22
000f78 937c      	ST   X,R23
000f79 9508      	RET
                 
                 __GETD1S0:
000f7a 81e8      	LD   R30,Y
000f7b 81f9      	LDD  R31,Y+1
000f7c 816a      	LDD  R22,Y+2
000f7d 817b      	LDD  R23,Y+3
000f7e 9508      	RET
                 
                 __GETD2S0:
000f7f 81a8      	LD   R26,Y
000f80 81b9      	LDD  R27,Y+1
000f81 818a      	LDD  R24,Y+2
000f82 819b      	LDD  R25,Y+3
000f83 9508      	RET
                 
                 __PUTD1S0:
000f84 83e8      	ST   Y,R30
000f85 83f9      	STD  Y+1,R31
000f86 836a      	STD  Y+2,R22
000f87 837b      	STD  Y+3,R23
000f88 9508      	RET
                 
                 __PUTPARD1:
000f89 937a      	ST   -Y,R23
000f8a 936a      	ST   -Y,R22
000f8b 93fa      	ST   -Y,R31
000f8c 93ea      	ST   -Y,R30
000f8d 9508      	RET
                 
                 __PUTPARD2:
000f8e 939a      	ST   -Y,R25
000f8f 938a      	ST   -Y,R24
000f90 93ba      	ST   -Y,R27
000f91 93aa      	ST   -Y,R26
000f92 9508      	RET
                 
                 __SWAPD12:
000f93 2e18      	MOV  R1,R24
000f94 2f86      	MOV  R24,R22
000f95 2d61      	MOV  R22,R1
000f96 2e19      	MOV  R1,R25
000f97 2f97      	MOV  R25,R23
000f98 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000f99 2e1b      	MOV  R1,R27
000f9a 2fbf      	MOV  R27,R31
000f9b 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000f9c 2e1a      	MOV  R1,R26
000f9d 2fae      	MOV  R26,R30
000f9e 2de1      	MOV  R30,R1
000f9f 9508      	RET
                 
                 __EEPROMRDW:
000fa0 9611      	ADIW R26,1
000fa1 d002      	RCALL __EEPROMRDB
000fa2 2ffe      	MOV  R31,R30
000fa3 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
000fa4 99f9      	SBIC EECR,EEWE
000fa5 cffe      	RJMP __EEPROMRDB
000fa6 93ff      	PUSH R31
000fa7 b7ff      	IN   R31,SREG
000fa8 94f8      	CLI
000fa9 bda1      	OUT  EEARL,R26
000faa bdb2      	OUT  EEARH,R27
000fab 9af8      	SBI  EECR,EERE
000fac b5e0      	IN   R30,EEDR
000fad bfff      	OUT  SREG,R31
000fae 91ff      	POP  R31
000faf 9508      	RET
                 
                 __EEPROMWRW:
000fb0 d007      	RCALL __EEPROMWRB
000fb1 9611      	ADIW R26,1
000fb2 93ef      	PUSH R30
000fb3 2fef      	MOV  R30,R31
000fb4 d003      	RCALL __EEPROMWRB
000fb5 91ef      	POP  R30
000fb6 9711      	SBIW R26,1
000fb7 9508      	RET
                 
                 __EEPROMWRB:
000fb8 9bf9      	SBIS EECR,EEWE
000fb9 c002      	RJMP __EEPROMWRB1
000fba 95a8      	WDR
000fbb cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
000fbc b79f      	IN   R25,SREG
000fbd 94f8      	CLI
000fbe bda1      	OUT  EEARL,R26
000fbf bdb2      	OUT  EEARH,R27
000fc0 9af8      	SBI  EECR,EERE
000fc1 b580      	IN   R24,EEDR
000fc2 17e8      	CP   R30,R24
000fc3 f019      	BREQ __EEPROMWRB0
000fc4 bde0      	OUT  EEDR,R30
000fc5 9afa      	SBI  EECR,EEMWE
000fc6 9af9      	SBI  EECR,EEWE
                 __EEPROMWRB0:
000fc7 bf9f      	OUT  SREG,R25
000fc8 9508      	RET
                 
                 __CPD10:
000fc9 9730      	SBIW R30,0
000fca 4060      	SBCI R22,0
000fcb 4070      	SBCI R23,0
000fcc 9508      	RET
                 
                 __SAVELOCR6:
000fcd 935a      	ST   -Y,R21
                 __SAVELOCR5:
000fce 934a      	ST   -Y,R20
                 __SAVELOCR4:
000fcf 933a      	ST   -Y,R19
                 __SAVELOCR3:
000fd0 932a      	ST   -Y,R18
                 __SAVELOCR2:
000fd1 931a      	ST   -Y,R17
000fd2 930a      	ST   -Y,R16
000fd3 9508      	RET
                 
                 __LOADLOCR6:
000fd4 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000fd5 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000fd6 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000fd7 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000fd8 8119      	LDD  R17,Y+1
000fd9 8108      	LD   R16,Y
000fda 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
000fdb 0fac      	ADD  R26,R28
000fdc 1fbd      	ADC  R27,R29
                 __INITLOC0:
000fdd 9005      	LPM  R0,Z+
000fde 920d      	ST   X+,R0
000fdf 958a      	DEC  R24
000fe0 f7e1      	BRNE __INITLOC0
000fe1 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega328P register use summary:
r0 : 114 r1 :  46 r2 :   0 r3 :   0 r4 :   3 r5 :   4 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:  22 
r16:  88 r17:  86 r18:  64 r19:  74 r20:  68 r21: 101 r22: 167 r23: 153 
r24: 125 r25:  90 r26: 480 r27: 238 r28:  95 r29:   2 r30: 874 r31: 408 
x  : 119 y  : 927 z  :  51 
Registers used: 24 out of 35 (68.6%)

ATmega328P instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  44 add   :  37 
adiw  :  95 and   :   5 andi  :  25 asr   :   0 bclr  :   0 bld   :  12 
brbc  :   0 brbs  :   0 brcc  :   9 brcs  :   5 break :   0 breq  :  73 
brge  :   7 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  38 
brlt  :   4 brmi  :  11 brne  :  99 brpl  :   9 brsh  :  11 brtc  :   5 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 call  : 180 
cbi   :  10 cbr   :   2 clc   :   3 clh   :   0 cli   :   3 cln   :   0 
clr   :  73 cls   :   0 clt   :  10 clv   :   0 clz   :   2 com   :  10 
cp    :  21 cpc   :  20 cpi   : 145 cpse  :   0 dec   :  22 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :  17 ijmp  :   0 
in    :  27 inc   :   3 jmp   :  28 ld    : 120 ldd   : 492 ldi   : 399 
lds   :  11 lpm   :  17 lsl   :  16 lsr   :   3 mov   : 142 movw  : 124 
mul   :  22 muls  :   0 mulsu :   0 neg   :  11 nop   :   0 or    :   6 
ori   :  14 out   :  21 pop   :  38 push  :  38 rcall :  54 ret   :  76 
reti  :   1 rjmp  : 215 rol   :  35 ror   :  15 sbc   :  13 sbci  :  48 
sbi   :  17 sbic  :   3 sbis  :   4 sbiw  :  64 sbr   :   5 sbrc  :   7 
sbrs  :  23 sec   :   5 seh   :   0 sei   :   1 sen   :   0 ser   :   8 
ses   :   0 set   :   9 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    : 233 std   : 237 sts   :  13 sub   :   9 subi  :  90 swap  :   2 
tst   :  27 wdr   :   3 
Instructions used: 83 out of 116 (71.6%)

ATmega328P memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001fc4   8012    120   8132   32768  24.8%
[.dseg] 0x000100 0x000318      0     24     24    2048   1.2%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 6 warnings
