
AVRASM ver. 2.1.30  D:\OneDrive - student.hust.edu.vn\HUST\Learn in Hust\20192 Ky thuat ghep noi may tinh\BTL\BTL_Kythuatghepnoi\code\List\btl.asm Sat Jun 20 01:26:23 2020

D:\OneDrive - student.hust.edu.vn\HUST\Learn in Hust\20192 Ky thuat ghep noi may tinh\BTL\BTL_Kythuatghepnoi\code\List\btl.asm(1090): warning: Register r5 already defined by the .DEF directive
D:\OneDrive - student.hust.edu.vn\HUST\Learn in Hust\20192 Ky thuat ghep noi may tinh\BTL\BTL_Kythuatghepnoi\code\List\btl.asm(1091): warning: Register r4 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Release
                 ;Chip type              : ATmega328P
                 ;Program type           : Application
                 ;Clock frequency        : 11.059200 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Speed
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : long, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega328P
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x08FF
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _recv_buf_ind=R5
                 	.DEF _recv_done=R4
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0074 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0116 	JMP  _USART_receive_isr
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000034 0000      	.DB  0x0,0x0
                 
                 _0x2F:
000035 0000
000036 0000
000037 0000
000038 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000039 0000
00003a 0000
00003b 0000
00003c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00003d 0000
00003e 0000
00003f 0000
000040 ff00      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xFF
000041 ffff
000042 ffff
D:\OneDrive - student.hust.edu.vn\HUST\Learn in Hust\20192 Ky thuat ghep noi may tinh\BTL\BTL_Kythuatghepnoi\code\List\btl.asm(1138): warning: .cseg .db misalignment - padding zero byte
000043 00ff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x0:
000044 2031
000045 6425
000046 2520
000047 2064      	.DB  0x31,0x20,0x25,0x64,0x20,0x25,0x64,0x20
000048 6425
000049 3000
00004a 2520
00004b 2064      	.DB  0x25,0x64,0x0,0x30,0x20,0x25,0x64,0x20
00004c 6425
00004d 2520
00004e 2064
00004f 6425      	.DB  0x25,0x64,0x20,0x25,0x64,0x20,0x25,0x64
000050 2520
000051 0064
000052 3a54
000053 6425      	.DB  0x20,0x25,0x64,0x0,0x54,0x3A,0x25,0x64
000054 252e
000055 6f64
000056 2043
000057 3a48      	.DB  0x2E,0x25,0x64,0x6F,0x43,0x20,0x48,0x3A
000058 6425
000059 252e
00005a 2564
00005b 0025      	.DB  0x25,0x64,0x2E,0x25,0x64,0x25,0x25,0x0
00005c 3a4c
00005d 3425
00005e 322e
00005f 2566      	.DB  0x4C,0x3A,0x25,0x34,0x2E,0x32,0x66,0x25
000060 0025
000061 312d
000062 2520
000063 0064      	.DB  0x25,0x0,0x2D,0x31,0x20,0x25,0x64,0x0
                 _0x2000000:
000064 4e2d
000065 4e41
D:\OneDrive - student.hust.edu.vn\HUST\Learn in Hust\20192 Ky thuat ghep noi may tinh\BTL\BTL_Kythuatghepnoi\code\List\btl.asm(1149): warning: .cseg .db misalignment - padding zero byte
000066 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x20A0060:
D:\OneDrive - student.hust.edu.vn\HUST\Learn in Hust\20192 Ky thuat ghep noi may tinh\BTL\BTL_Kythuatghepnoi\code\List\btl.asm(1151): warning: .cseg .db misalignment - padding zero byte
000067 0001      	.DB  0x1
                 _0x20A0000:
000068 4e2d
000069 4e41
00006a 4900
00006b 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\OneDrive - student.hust.edu.vn\HUST\Learn in Hust\20192 Ky thuat ghep noi may tinh\BTL\BTL_Kythuatghepnoi\code\List\btl.asm(1154): warning: .cseg .db misalignment - padding zero byte
00006c 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00006d 0002      	.DW  0x02
00006e 0004      	.DW  0x04
00006f 0068      	.DW  __REG_VARS*2
                 
000070 0001      	.DW  0x01
000071 0314      	.DW  __seed_G105
000072 00ce      	.DW  _0x20A0060*2
                 
                 _0xFFFFFFFF:
000073 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000074 94f8      	CLI
000075 27ee      	CLR  R30
000076 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000077 e0f1      	LDI  R31,1
000078 bff5      	OUT  MCUCR,R31
000079 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
00007a e1f8      	LDI  R31,0x18
00007b 95a8      	WDR
00007c b7a4      	IN   R26,MCUSR
00007d 7fa7      	CBR  R26,8
00007e bfa4      	OUT  MCUSR,R26
00007f 93f0 0060 	STS  WDTCSR,R31
000081 93e0 0060 	STS  WDTCSR,R30
                 
                 ;CLEAR R2-R14
000083 e08d      	LDI  R24,(14-2)+1
000084 e0a2      	LDI  R26,2
000085 27bb      	CLR  R27
                 __CLEAR_REG:
000086 93ed      	ST   X+,R30
000087 958a      	DEC  R24
000088 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000089 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00008a e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00008b e0a0      	LDI  R26,LOW(__SRAM_START)
00008c e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
00008d 93ed      	ST   X+,R30
00008e 9701      	SBIW R24,1
00008f f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000090 edea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000091 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000092 9185      	LPM  R24,Z+
000093 9195      	LPM  R25,Z+
000094 9700      	SBIW R24,0
000095 f061      	BREQ __GLOBAL_INI_END
000096 91a5      	LPM  R26,Z+
000097 91b5      	LPM  R27,Z+
000098 9005      	LPM  R0,Z+
000099 9015      	LPM  R1,Z+
00009a 01bf      	MOVW R22,R30
00009b 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00009c 9005      	LPM  R0,Z+
00009d 920d      	ST   X+,R0
00009e 9701      	SBIW R24,1
00009f f7e1      	BRNE __GLOBAL_INI_LOOP
0000a0 01fb      	MOVW R30,R22
0000a1 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
0000a2 e0e0      	LDI  R30,__GPIOR0_INIT
0000a3 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000a4 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000a5 bfed      	OUT  SPL,R30
0000a6 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000a7 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000a8 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000a9 e0d3      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000aa 940c 0284 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x300
                 
                 	.CSEG
                 ;#define F_CPU 11059200
                 ;
                 ;#include <mega328p.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <eeprom.h>
                 ;#include <string.h>
                 ;#define BAUD 9600
                 ;#define SYS_CLOCK 11059200
                 ;#define DHT11_PORT PORTB
                 ;#define DHT11_DDR DDRB
                 ;#define DHT11_PIN PINB
                 ;#define DHT11_INPUTPIN 1
                 ;#define DHT11_TIMEOUT 200
                 ;#define V_REF 5
                 ;#define LCD_PORT PORTD
                 ;#define LCD_DPIN DDRD
                 ;#define LCD_RSPIN 2
                 ;#define LCD_ENPIN 3
                 ;
                 ;char recv_buf[20];
                 ;char recv_buf_ind = 0;
                 ;char recv_done = 0;
                 ;
                 ;void ADC_init(){
                 ; 0000 0019 void ADC_init(){
                 
                 	.CSEG
                 _ADC_init:
                 ; .FSTART _ADC_init
                 ; 0000 001A     // select Vref = AVcc
                 ; 0000 001B     ADMUX |= (1<<REFS0);
0000ac 91e0 007c 	LDS  R30,124
0000ae 64e0      	ORI  R30,0x40
0000af 93e0 007c 	STS  124,R30
                 ; 0000 001C //    // Left adjust ADC result to allow easy 8 bit reading
                 ; 0000 001D //    ADMUX |= (1 << ADLAR);
                 ; 0000 001E     // set prescaler to 64 and enable ADC
                 ; 0000 001F     ADCSRA |= (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0)| (1 << ADEN);
0000b1 91e0 007a 	LDS  R30,122
0000b3 68e7      	ORI  R30,LOW(0x87)
0000b4 93e0 007a 	STS  122,R30
                 ; 0000 0020 }
0000b6 9508      	RET
                 ; .FEND
                 ;
                 ;unsigned int ADC_read(unsigned char ADCchannel){
                 ; 0000 0022 unsigned int ADC_read(unsigned char ADCchannel){
                 _ADC_read:
                 ; .FSTART _ADC_read
                 ; 0000 0023     //select ADC channel with safety mask
                 ; 0000 0024     ADMUX = (ADMUX & 0xF0) | (ADCchannel & 0x0F);
0000b7 93aa      	ST   -Y,R26
                 ;	ADCchannel -> Y+0
0000b8 91e0 007c 	LDS  R30,124
0000ba 7fe0      	ANDI R30,LOW(0xF0)
0000bb 2fae      	MOV  R26,R30
0000bc 81e8      	LD   R30,Y
0000bd 70ef      	ANDI R30,LOW(0xF)
0000be 2bea      	OR   R30,R26
0000bf 93e0 007c 	STS  124,R30
                 ; 0000 0025     //single conversion mode
                 ; 0000 0026     ADCSRA |= (1<<ADSC);
0000c1 91e0 007a 	LDS  R30,122
0000c3 64e0      	ORI  R30,0x40
0000c4 93e0 007a 	STS  122,R30
                 ; 0000 0027     // wait until ADC conversion is complete
                 ; 0000 0028     while( ADCSRA & (1<<ADSC));
                 _0x3:
0000c6 91e0 007a 	LDS  R30,122
0000c8 74e0      	ANDI R30,LOW(0x40)
0000c9 f7e1      	BRNE _0x3
                 ; 0000 0029     return ADCL + (ADCH & 0x03) * 256;
0000ca 91e0 0078 	LDS  R30,120
0000cc e0f0      	LDI  R31,0
0000cd 01df      	MOVW R26,R30
0000ce 91e0 0079 	LDS  R30,121
0000d0 e0f0      	LDI  R31,0
0000d1 70e3      	ANDI R30,LOW(0x3)
0000d2 70f0      	ANDI R31,HIGH(0x3)
0000d3 2ffe      	MOV  R31,R30
0000d4 e0e0      	LDI  R30,0
0000d5 0fea      	ADD  R30,R26
0000d6 1ffb      	ADC  R31,R27
0000d7 c08d      	RJMP _0x20C000C
                 ; 0000 002A }
                 ; .FEND
                 ;
                 ;void USART_init(unsigned int ubrr){
                 ; 0000 002C void USART_init(unsigned int ubrr){
                 _USART_init:
                 ; .FSTART _USART_init
                 ; 0000 002D 	// set baud rate
                 ; 0000 002E 	UBRR0H = (unsigned char)(ubrr >> 8);
0000d8 93ba      	ST   -Y,R27
0000d9 93aa      	ST   -Y,R26
                 ;	ubrr -> Y+0
0000da 81e9      	LDD  R30,Y+1
0000db 93e0 00c5 	STS  197,R30
                 ; 0000 002F 	UBRR0L = (unsigned char)ubrr;
0000dd 81e8      	LD   R30,Y
0000de 93e0 00c4 	STS  196,R30
                 ; 0000 0030 	// enable receiver and transmitter, receive interrupt
                 ; 0000 0031 	UCSR0B = 0x98;
0000e0 e9e8      	LDI  R30,LOW(152)
0000e1 93e0 00c1 	STS  193,R30
                 ; 0000 0032 	// set frame format: 8 bit data, 1 stop bit
                 ; 0000 0033 	UCSR0C = 0x06;
0000e3 e0e6      	LDI  R30,LOW(6)
0000e4 93e0 00c2 	STS  194,R30
                 ; 0000 0034 }
0000e6 9622      	ADIW R28,2
0000e7 9508      	RET
                 ; .FEND
                 ;
                 ;void USART_put(unsigned char * buf){
                 ; 0000 0036 void USART_put(unsigned char * buf){
                 _USART_put:
                 ; .FSTART _USART_put
                 ; 0000 0037     int i = 0;
                 ; 0000 0038     while(buf[i] != 0){
0000e8 93ba      	ST   -Y,R27
0000e9 93aa      	ST   -Y,R26
0000ea 931a      	ST   -Y,R17
0000eb 930a      	ST   -Y,R16
                 ;	*buf -> Y+2
                 ;	i -> R16,R17
                +
0000ec e000     +LDI R16 , LOW ( 0 )
0000ed e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x6:
0000ee 01f8      	MOVW R30,R16
0000ef 81aa      	LDD  R26,Y+2
0000f0 81bb      	LDD  R27,Y+2+1
0000f1 0fae      	ADD  R26,R30
0000f2 1fbf      	ADC  R27,R31
0000f3 91ec      	LD   R30,X
0000f4 30e0      	CPI  R30,0
0000f5 f079      	BREQ _0x8
                 ; 0000 0039         while(!(UCSR0A & (1 << UDRE0))); // wait for empty transmit buffer
                 _0x9:
0000f6 91e0 00c0 	LDS  R30,192
0000f8 72e0      	ANDI R30,LOW(0x20)
0000f9 f3e1      	BREQ _0x9
                 ; 0000 003A         UDR0 = buf[i];
0000fa 01f8      	MOVW R30,R16
0000fb 81aa      	LDD  R26,Y+2
0000fc 81bb      	LDD  R27,Y+2+1
0000fd 0fae      	ADD  R26,R30
0000fe 1fbf      	ADC  R27,R31
0000ff 91ec      	LD   R30,X
000100 93e0 00c6 	STS  198,R30
                 ; 0000 003B         i++;
                +
000102 5f0f     +SUBI R16 , LOW ( - 1 )
000103 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 003C     }
000104 cfe9      	RJMP _0x6
                 _0x8:
                 ; 0000 003D     // sending '\n' '\r'
                 ; 0000 003E     while(!(UCSR0A & (1 << UDRE0)));
                 _0xC:
000105 91e0 00c0 	LDS  R30,192
000107 72e0      	ANDI R30,LOW(0x20)
000108 f3e1      	BREQ _0xC
                 ; 0000 003F     UDR0 = '\n';
000109 e0ea      	LDI  R30,LOW(10)
00010a 93e0 00c6 	STS  198,R30
                 ; 0000 0040     while(!(UCSR0A & (1 << UDRE0)));
                 _0xF:
00010c 91e0 00c0 	LDS  R30,192
00010e 72e0      	ANDI R30,LOW(0x20)
00010f f3e1      	BREQ _0xF
                 ; 0000 0041     UDR0 = '\r';
000110 e0ed      	LDI  R30,LOW(13)
000111 93e0 00c6 	STS  198,R30
                 ; 0000 0042 }
000113 8119      	LDD  R17,Y+1
000114 8108      	LDD  R16,Y+0
000115 c0cd      	RJMP _0x20C000B
                 ; .FEND
                 ;
                 ;interrupt [USART_RXC] void USART_receive_isr (void){
                 ; 0000 0044 interrupt [19] void USART_receive_isr (void){
                 _USART_receive_isr:
                 ; .FSTART _USART_receive_isr
000116 920a      	ST   -Y,R0
000117 921a      	ST   -Y,R1
000118 939a      	ST   -Y,R25
000119 93aa      	ST   -Y,R26
00011a 93ba      	ST   -Y,R27
00011b 93ea      	ST   -Y,R30
00011c 93fa      	ST   -Y,R31
00011d b7ef      	IN   R30,SREG
00011e 93ea      	ST   -Y,R30
                 ; 0000 0045     recv_buf_ind = (recv_buf_ind + 1) % 20;
00011f 2de5      	MOV  R30,R5
000120 e0f0      	LDI  R31,0
000121 9631      	ADIW R30,1
000122 01df      	MOVW R26,R30
000123 e1e4      	LDI  R30,LOW(20)
000124 e0f0      	LDI  R31,HIGH(20)
000125 940e 0fd0 	CALL __MODW21
000127 2e5e      	MOV  R5,R30
                 ; 0000 0046     recv_buf[recv_buf_ind] = UDR0;
000128 2da5      	MOV  R26,R5
000129 e0b0      	LDI  R27,0
00012a 50a0      	SUBI R26,LOW(-_recv_buf)
00012b 4fbd      	SBCI R27,HIGH(-_recv_buf)
00012c 91e0 00c6 	LDS  R30,198
00012e 93ec      	ST   X,R30
                 ; 0000 0047     if(recv_buf[recv_buf_ind] == 'e') recv_done = 1;
00012f 2de5      	MOV  R30,R5
000130 e0f0      	LDI  R31,0
000131 50e0      	SUBI R30,LOW(-_recv_buf)
000132 4ffd      	SBCI R31,HIGH(-_recv_buf)
000133 81a0      	LD   R26,Z
000134 36a5      	CPI  R26,LOW(0x65)
000135 f411      	BRNE _0x12
000136 e0e1      	LDI  R30,LOW(1)
000137 2e4e      	MOV  R4,R30
                 ; 0000 0048 }
                 _0x12:
000138 91e9      	LD   R30,Y+
000139 bfef      	OUT  SREG,R30
00013a 91f9      	LD   R31,Y+
00013b 91e9      	LD   R30,Y+
00013c 91b9      	LD   R27,Y+
00013d 91a9      	LD   R26,Y+
00013e 9199      	LD   R25,Y+
00013f 9019      	LD   R1,Y+
000140 9009      	LD   R0,Y+
000141 9518      	RETI
                 ; .FEND
                 ;
                 ;void LCD_action(unsigned char cmnd){
                 ; 0000 004A void LCD_action(unsigned char cmnd){
                 _LCD_action:
                 ; .FSTART _LCD_action
                 ; 0000 004B     // 4 bit mode
                 ; 0000 004C     LCD_PORT = (LCD_PORT & 0x0F) | (cmnd & 0xF0); // send upper nibble
000142 93aa      	ST   -Y,R26
                 ;	cmnd -> Y+0
000143 b1eb      	IN   R30,0xB
000144 70ef      	ANDI R30,LOW(0xF)
000145 2fae      	MOV  R26,R30
000146 81e8      	LD   R30,Y
000147 7fe0      	ANDI R30,LOW(0xF0)
000148 2bea      	OR   R30,R26
000149 b9eb      	OUT  0xB,R30
                 ; 0000 004D     LCD_PORT &= ~(1 << LCD_RSPIN); // RS = 0
00014a 985a      	CBI  0xB,2
                 ; 0000 004E     LCD_PORT |= (1 << LCD_ENPIN); // EN = 1
00014b 9a5b      	SBI  0xB,3
                 ; 0000 004F     delay_us(1);
                +
00014c e084     +LDI R24 , LOW ( 4 )
                +__DELAY_USB_LOOP :
00014d 958a     +DEC R24
00014e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 4
                 ; 0000 0050     LCD_PORT &= ~(1 << LCD_ENPIN); // EN = 0
00014f 985b      	CBI  0xB,3
                 ; 0000 0051     delay_us(200);
                +
000150 e289     +LDI R24 , LOW ( 553 )
000151 e092     +LDI R25 , HIGH ( 553 )
                +__DELAY_USW_LOOP :
000152 9701     +SBIW R24 , 1
000153 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 553
                 ; 0000 0052     LCD_PORT = (LCD_PORT & 0x0F) | (cmnd << 4); // send lower nibble
000154 b1eb      	IN   R30,0xB
000155 70ef      	ANDI R30,LOW(0xF)
000156 2fae      	MOV  R26,R30
000157 81e8      	LD   R30,Y
000158 95e2      	SWAP R30
000159 7fe0      	ANDI R30,0xF0
00015a 2bea      	OR   R30,R26
00015b b9eb      	OUT  0xB,R30
                 ; 0000 0053     LCD_PORT |= (1 << LCD_ENPIN); // EN = 1
00015c 9a5b      	SBI  0xB,3
                 ; 0000 0054     delay_us(1);
                +
00015d e084     +LDI R24 , LOW ( 4 )
                +__DELAY_USB_LOOP :
00015e 958a     +DEC R24
00015f f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 4
                 ; 0000 0055     LCD_PORT &= ~(1 << LCD_ENPIN); // EN = 0
000160 985b      	CBI  0xB,3
                 ; 0000 0056     delay_ms(2);
000161 e0a2      	LDI  R26,LOW(2)
000162 e0b0      	LDI  R27,0
000163 940e 0d73 	CALL _delay_ms
                 ; 0000 0057 }
                 _0x20C000C:
000165 9621      	ADIW R28,1
000166 9508      	RET
                 ; .FEND
                 ;
                 ;void LCD_init(void){
                 ; 0000 0059 void LCD_init(void){
                 _LCD_init:
                 ; .FSTART _LCD_init
                 ; 0000 005A     LCD_DPIN = 0xFF;
000167 efef      	LDI  R30,LOW(255)
000168 b9ea      	OUT  0xA,R30
                 ; 0000 005B     delay_ms(20); // wait before LCD activation
000169 e1a4      	LDI  R26,LOW(20)
00016a e0b0      	LDI  R27,0
00016b 940e 0d73 	CALL _delay_ms
                 ; 0000 005C     LCD_action(0x02); // 4 bit control
00016d e0a2      	LDI  R26,LOW(2)
00016e dfd3      	RCALL _LCD_action
                 ; 0000 005D     LCD_action(0x28); // initialization of 16X2 LCD in 4bit mode
00016f e2a8      	LDI  R26,LOW(40)
000170 dfd1      	RCALL _LCD_action
                 ; 0000 005E     LCD_action(0x0C); // disable cursor
000171 e0ac      	LDI  R26,LOW(12)
000172 dfcf      	RCALL _LCD_action
                 ; 0000 005F     LCD_action(0x06); // auto increment cursor
000173 e0a6      	LDI  R26,LOW(6)
000174 dfcd      	RCALL _LCD_action
                 ; 0000 0060     LCD_action(0x01); // clear LCD
000175 e0a1      	LDI  R26,LOW(1)
000176 dfcb      	RCALL _LCD_action
                 ; 0000 0061     LCD_action(0x80); // cursor at home position
000177 e8a0      	LDI  R26,LOW(128)
000178 dfc9      	RCALL _LCD_action
                 ; 0000 0062     delay_ms(2);
000179 e0a2      	LDI  R26,LOW(2)
00017a e0b0      	LDI  R27,0
00017b 940e 0d73 	CALL _delay_ms
                 ; 0000 0063 }
00017d 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;void LCD_clear(void){
                 ; 0000 0066 void LCD_clear(void){
                 _LCD_clear:
                 ; .FSTART _LCD_clear
                 ; 0000 0067     LCD_action(0x01); // clear LCD
00017e e0a1      	LDI  R26,LOW(1)
00017f dfc2      	RCALL _LCD_action
                 ; 0000 0068     delay_ms(2);
000180 e0a2      	LDI  R26,LOW(2)
000181 e0b0      	LDI  R27,0
000182 940e 0d73 	CALL _delay_ms
                 ; 0000 0069     LCD_action(0x80); // move to line 1, position 1
000184 e8a0      	LDI  R26,LOW(128)
000185 dfbc      	RCALL _LCD_action
                 ; 0000 006A }
000186 9508      	RET
                 ; .FEND
                 ;
                 ;void LCD_print(char *str){
                 ; 0000 006C void LCD_print(char *str){
                 _LCD_print:
                 ; .FSTART _LCD_print
                 ; 0000 006D     int i;
                 ; 0000 006E 	for(i=0; str[i]!=0; i++)
000187 93ba      	ST   -Y,R27
000188 93aa      	ST   -Y,R26
000189 931a      	ST   -Y,R17
00018a 930a      	ST   -Y,R16
                 ;	*str -> Y+2
                 ;	i -> R16,R17
                +
00018b e000     +LDI R16 , LOW ( 0 )
00018c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x14:
00018d 01f8      	MOVW R30,R16
00018e 81aa      	LDD  R26,Y+2
00018f 81bb      	LDD  R27,Y+2+1
000190 0fae      	ADD  R26,R30
000191 1fbf      	ADC  R27,R31
000192 91ec      	LD   R30,X
000193 30e0      	CPI  R30,0
000194 f179      	BREQ _0x15
                 ; 0000 006F 	{
                 ; 0000 0070 		LCD_PORT = (LCD_PORT & 0x0F) | (str[i] & 0xF0);
000195 b1eb      	IN   R30,0xB
000196 70ef      	ANDI R30,LOW(0xF)
000197 2e0e      	MOV  R0,R30
000198 01f8      	MOVW R30,R16
000199 81aa      	LDD  R26,Y+2
00019a 81bb      	LDD  R27,Y+2+1
00019b 0fae      	ADD  R26,R30
00019c 1fbf      	ADC  R27,R31
00019d 91ec      	LD   R30,X
00019e 7fe0      	ANDI R30,LOW(0xF0)
00019f 29e0      	OR   R30,R0
0001a0 b9eb      	OUT  0xB,R30
                 ; 0000 0071 		LCD_PORT |= (1<<LCD_RSPIN); // RS = 1, data reg
0001a1 9a5a      	SBI  0xB,2
                 ; 0000 0072 		LCD_PORT |= (1<<LCD_ENPIN); // EN = 1
0001a2 9a5b      	SBI  0xB,3
                 ; 0000 0073 		delay_us(1);
                +
0001a3 e084     +LDI R24 , LOW ( 4 )
                +__DELAY_USB_LOOP :
0001a4 958a     +DEC R24
0001a5 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 4
                 ; 0000 0074 		LCD_PORT &= ~ (1<<LCD_ENPIN); // EN = 0
0001a6 985b      	CBI  0xB,3
                 ; 0000 0075 		delay_us(200);
                +
0001a7 e289     +LDI R24 , LOW ( 553 )
0001a8 e092     +LDI R25 , HIGH ( 553 )
                +__DELAY_USW_LOOP :
0001a9 9701     +SBIW R24 , 1
0001aa f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 553
                 ; 0000 0076 		LCD_PORT = (LCD_PORT & 0x0F) | (str[i] << 4);
0001ab b1eb      	IN   R30,0xB
0001ac 70ef      	ANDI R30,LOW(0xF)
0001ad 2e0e      	MOV  R0,R30
0001ae 01f8      	MOVW R30,R16
0001af 81aa      	LDD  R26,Y+2
0001b0 81bb      	LDD  R27,Y+2+1
0001b1 0fae      	ADD  R26,R30
0001b2 1fbf      	ADC  R27,R31
0001b3 91ec      	LD   R30,X
0001b4 95e2      	SWAP R30
0001b5 7fe0      	ANDI R30,0xF0
0001b6 29e0      	OR   R30,R0
0001b7 b9eb      	OUT  0xB,R30
                 ; 0000 0077 		LCD_PORT |= (1<<LCD_ENPIN);
0001b8 9a5b      	SBI  0xB,3
                 ; 0000 0078 		delay_us(1);
                +
0001b9 e084     +LDI R24 , LOW ( 4 )
                +__DELAY_USB_LOOP :
0001ba 958a     +DEC R24
0001bb f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 4
                 ; 0000 0079 		LCD_PORT &= ~ (1<<LCD_ENPIN);
0001bc 985b      	CBI  0xB,3
                 ; 0000 007A 		delay_ms(2);
0001bd e0a2      	LDI  R26,LOW(2)
0001be e0b0      	LDI  R27,0
0001bf 940e 0d73 	CALL _delay_ms
                 ; 0000 007B 	}
                +
0001c1 5f0f     +SUBI R16 , LOW ( - 1 )
0001c2 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0001c3 cfc9      	RJMP _0x14
                 _0x15:
                 ; 0000 007C }
0001c4 8119      	LDD  R17,Y+1
0001c5 8108      	LDD  R16,Y+0
0001c6 c01c      	RJMP _0x20C000B
                 ; .FEND
                 ;
                 ;void LCD_print_pos(char row, char pos, char *str){
                 ; 0000 007E void LCD_print_pos(char row, char pos, char *str){
                 _LCD_print_pos:
                 ; .FSTART _LCD_print_pos
                 ; 0000 007F     if(row == 0 && pos < 16) // line 1
0001c7 93ba      	ST   -Y,R27
0001c8 93aa      	ST   -Y,R26
                 ;	row -> Y+3
                 ;	pos -> Y+2
                 ;	*str -> Y+0
0001c9 81ab      	LDD  R26,Y+3
0001ca 30a0      	CPI  R26,LOW(0x0)
0001cb f419      	BRNE _0x17
0001cc 81aa      	LDD  R26,Y+2
0001cd 31a0      	CPI  R26,LOW(0x10)
0001ce f008      	BRLO _0x18
                 _0x17:
0001cf c004      	RJMP _0x16
                 _0x18:
                 ; 0000 0080         LCD_action((pos & 0x0F)|0x80);
0001d0 81ea      	LDD  R30,Y+2
0001d1 70ef      	ANDI R30,LOW(0xF)
0001d2 68e0      	ORI  R30,0x80
0001d3 c00a      	RJMP _0x50
                 ; 0000 0081     else if(row == 1 && pos < 16) // line 2
                 _0x16:
0001d4 81ab      	LDD  R26,Y+3
0001d5 30a1      	CPI  R26,LOW(0x1)
0001d6 f419      	BRNE _0x1B
0001d7 81aa      	LDD  R26,Y+2
0001d8 31a0      	CPI  R26,LOW(0x10)
0001d9 f008      	BRLO _0x1C
                 _0x1B:
0001da c005      	RJMP _0x1A
                 _0x1C:
                 ; 0000 0082         LCD_action((pos & 0x0F)|0xC0);
0001db 81ea      	LDD  R30,Y+2
0001dc 70ef      	ANDI R30,LOW(0xF)
0001dd 6ce0      	ORI  R30,LOW(0xC0)
                 _0x50:
0001de 2fae      	MOV  R26,R30
0001df df62      	RCALL _LCD_action
                 ; 0000 0083     LCD_print(str);
                 _0x1A:
0001e0 81a8      	LD   R26,Y
0001e1 81b9      	LDD  R27,Y+1
0001e2 dfa4      	RCALL _LCD_print
                 ; 0000 0084 }
                 _0x20C000B:
0001e3 9624      	ADIW R28,4
0001e4 9508      	RET
                 ; .FEND
                 ;
                 ;int read_dht11(int* temp, int* i_temp, int* humidity, int* i_humidity){
                 ; 0000 0086 int read_dht11(int* temp, int* i_temp, int* humidity, int* i_humidity){
                 _read_dht11:
                 ; .FSTART _read_dht11
                 ; 0000 0087     unsigned char i, j, bytes[5], time_count;
                 ; 0000 0088     //reset port
                 ; 0000 0089     DHT11_DDR |= (1<<DHT11_INPUTPIN); //output mode
0001e5 93ba      	ST   -Y,R27
0001e6 93aa      	ST   -Y,R26
0001e7 9725      	SBIW R28,5
0001e8 940e 105b 	CALL __SAVELOCR4
                 ;	*temp -> Y+15
                 ;	*i_temp -> Y+13
                 ;	*humidity -> Y+11
                 ;	*i_humidity -> Y+9
                 ;	i -> R17
                 ;	j -> R16
                 ;	bytes -> Y+4
                 ;	time_count -> R19
0001ea 9a21      	SBI  0x4,1
                 ; 0000 008A     DHT11_PORT |= (1<<DHT11_INPUTPIN); // high
0001eb 9a29      	SBI  0x5,1
                 ; 0000 008B     delay_ms(100);
0001ec e6a4      	LDI  R26,LOW(100)
0001ed e0b0      	LDI  R27,0
0001ee 940e 0d73 	CALL _delay_ms
                 ; 0000 008C 	// send start signal
                 ; 0000 008D 	DHT11_PORT &= ~(1<<DHT11_INPUTPIN); // low
0001f0 9829      	CBI  0x5,1
                 ; 0000 008E 	delay_ms(18);
0001f1 e1a2      	LDI  R26,LOW(18)
0001f2 e0b0      	LDI  R27,0
0001f3 940e 0d73 	CALL _delay_ms
                 ; 0000 008F 	DHT11_PORT |= (1<<DHT11_INPUTPIN); // high
0001f5 9a29      	SBI  0x5,1
                 ; 0000 0090 	DHT11_DDR &= ~(1<<DHT11_INPUTPIN); //input mode
0001f6 9821      	CBI  0x4,1
                 ; 0000 0091 	delay_us(40);
                +
0001f7 e983     +LDI R24 , LOW ( 147 )
                +__DELAY_USB_LOOP :
0001f8 958a     +DEC R24
0001f9 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 147
                 ; 0000 0092     // check DHT response signal
                 ; 0000 0093     if((DHT11_PIN & (1 << DHT11_INPUTPIN))){
0001fa 9b19      	SBIS 0x3,1
0001fb c003      	RJMP _0x1D
                 ; 0000 0094         // error
                 ; 0000 0095         return -1;
0001fc efef      	LDI  R30,LOW(65535)
0001fd efff      	LDI  R31,HIGH(65535)
0001fe c081      	RJMP _0x20C000A
                 ; 0000 0096     }
                 ; 0000 0097     delay_us(80);
                 _0x1D:
                +
0001ff ed8d     +LDI R24 , LOW ( 221 )
000200 e090     +LDI R25 , HIGH ( 221 )
                +__DELAY_USW_LOOP :
000201 9701     +SBIW R24 , 1
000202 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 221
                 ; 0000 0098     // check DHT pulls up
                 ; 0000 0099     if(!(DHT11_PIN & (1 << DHT11_INPUTPIN))){
000203 9919      	SBIC 0x3,1
000204 c003      	RJMP _0x1E
                 ; 0000 009A         // error
                 ; 0000 009B         return -2;
000205 efee      	LDI  R30,LOW(65534)
000206 efff      	LDI  R31,HIGH(65534)
000207 c078      	RJMP _0x20C000A
                 ; 0000 009C     }
                 ; 0000 009D     delay_us(80);
                 _0x1E:
                +
000208 ed8d     +LDI R24 , LOW ( 221 )
000209 e090     +LDI R25 , HIGH ( 221 )
                +__DELAY_USW_LOOP :
00020a 9701     +SBIW R24 , 1
00020b f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 221
                 ; 0000 009E     // read 5 bytes
                 ; 0000 009F     for(i = 0; i < 5; i++){
00020c e010      	LDI  R17,LOW(0)
                 _0x20:
00020d 3015      	CPI  R17,5
00020e f5e0      	BRSH _0x21
                 ; 0000 00A0         unsigned char result = 0;
                 ; 0000 00A1         for(j = 0; j < 8; j++){
00020f 9721      	SBIW R28,1
000210 e0e0      	LDI  R30,LOW(0)
000211 83e8      	ST   Y,R30
                 ;	*temp -> Y+16
                 ;	*i_temp -> Y+14
                 ;	*humidity -> Y+12
                 ;	*i_humidity -> Y+10
                 ;	bytes -> Y+5
                 ;	result -> Y+0
000212 e000      	LDI  R16,LOW(0)
                 _0x23:
000213 3008      	CPI  R16,8
000214 f558      	BRSH _0x24
                 ; 0000 00A2             time_count = 0;
000215 e030      	LDI  R19,LOW(0)
                 ; 0000 00A3             // wait for a high voltage
                 ; 0000 00A4             while(!(DHT11_PIN & (1 << DHT11_INPUTPIN))){
                 _0x25:
000216 9919      	SBIC 0x3,1
000217 c00b      	RJMP _0x27
                 ; 0000 00A5                 time_count++;
000218 5f3f      	SUBI R19,-1
                 ; 0000 00A6                 if(time_count > DHT11_TIMEOUT) return -3; // timeout error
000219 3c39      	CPI  R19,201
00021a f020      	BRLO _0x28
00021b efed      	LDI  R30,LOW(65533)
00021c efff      	LDI  R31,HIGH(65533)
00021d 9621      	ADIW R28,1
00021e c061      	RJMP _0x20C000A
                 ; 0000 00A7                 delay_us(1);
                 _0x28:
                +
00021f e084     +LDI R24 , LOW ( 4 )
                +__DELAY_USB_LOOP :
000220 958a     +DEC R24
000221 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 4
                 ; 0000 00A8             }
000222 cff3      	RJMP _0x25
                 _0x27:
                 ; 0000 00A9             delay_us(30);
                +
000223 e68f     +LDI R24 , LOW ( 111 )
                +__DELAY_USB_LOOP :
000224 958a     +DEC R24
000225 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 111
                 ; 0000 00AA             if(DHT11_PIN & (1 << DHT11_INPUTPIN)) // high after 30 us -> bit 1
000226 9b19      	SBIS 0x3,1
000227 c008      	RJMP _0x29
                 ; 0000 00AB                 result |= (1<<(7-j));
000228 e0e7      	LDI  R30,LOW(7)
000229 1be0      	SUB  R30,R16
00022a e0a1      	LDI  R26,LOW(1)
00022b 940e 0f41 	CALL __LSLB12
00022d 81a8      	LD   R26,Y
00022e 2bea      	OR   R30,R26
00022f 83e8      	ST   Y,R30
                 ; 0000 00AC             time_count = 0;
                 _0x29:
000230 e030      	LDI  R19,LOW(0)
                 ; 0000 00AD             // wait until get low
                 ; 0000 00AE             while(DHT11_PIN & (1 << DHT11_INPUTPIN)){
                 _0x2A:
000231 9b19      	SBIS 0x3,1
000232 c00b      	RJMP _0x2C
                 ; 0000 00AF                 time_count++;
000233 5f3f      	SUBI R19,-1
                 ; 0000 00B0                 if(time_count > DHT11_TIMEOUT) return -3; // timeout error
000234 3c39      	CPI  R19,201
000235 f020      	BRLO _0x2D
000236 efed      	LDI  R30,LOW(65533)
000237 efff      	LDI  R31,HIGH(65533)
000238 9621      	ADIW R28,1
000239 c046      	RJMP _0x20C000A
                 ; 0000 00B1                 delay_us(1);
                 _0x2D:
                +
00023a e084     +LDI R24 , LOW ( 4 )
                +__DELAY_USB_LOOP :
00023b 958a     +DEC R24
00023c f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 4
                 ; 0000 00B2             }
00023d cff3      	RJMP _0x2A
                 _0x2C:
                 ; 0000 00B3         }
00023e 5f0f      	SUBI R16,-1
00023f cfd3      	RJMP _0x23
                 _0x24:
                 ; 0000 00B4         bytes[i] = result;
000240 2fe1      	MOV  R30,R17
000241 e0f0      	LDI  R31,0
000242 01de      	MOVW R26,R28
000243 9615      	ADIW R26,5
000244 0fea      	ADD  R30,R26
000245 1ffb      	ADC  R31,R27
000246 81a8      	LD   R26,Y
000247 83a0      	STD  Z+0,R26
                 ; 0000 00B5     }
000248 9621      	ADIW R28,1
000249 5f1f      	SUBI R17,-1
00024a cfc2      	RJMP _0x20
                 _0x21:
                 ; 0000 00B6     // reset port
                 ; 0000 00B7     DHT11_DDR |= (1<<DHT11_INPUTPIN); //output mode
00024b 9a21      	SBI  0x4,1
                 ; 0000 00B8     DHT11_PORT |= (1<<DHT11_INPUTPIN); // high
00024c 9a29      	SBI  0x5,1
                 ; 0000 00B9     delay_ms(100);
00024d e6a4      	LDI  R26,LOW(100)
00024e e0b0      	LDI  R27,0
00024f 940e 0d73 	CALL _delay_ms
                 ; 0000 00BA     // checksum
                 ; 0000 00BB     if((unsigned char)(bytes[0] + bytes[1] + bytes[2] + bytes[3]) == bytes[4]){
000251 81ac      	LDD  R26,Y+4
000252 27bb      	CLR  R27
000253 81ed      	LDD  R30,Y+5
000254 e0f0      	LDI  R31,0
000255 0fae      	ADD  R26,R30
000256 1fbf      	ADC  R27,R31
000257 81ee      	LDD  R30,Y+6
000258 e0f0      	LDI  R31,0
000259 0fae      	ADD  R26,R30
00025a 1fbf      	ADC  R27,R31
00025b 81ef      	LDD  R30,Y+7
00025c e0f0      	LDI  R31,0
00025d 0fea      	ADD  R30,R26
00025e 1ffb      	ADC  R31,R27
00025f 2fae      	MOV  R26,R30
000260 85e8      	LDD  R30,Y+8
000261 17ea      	CP   R30,R26
000262 f4d9      	BRNE _0x2E
                 ; 0000 00BC         *temp = bytes[2];
000263 81ee      	LDD  R30,Y+6
000264 85af      	LDD  R26,Y+15
000265 89b8      	LDD  R27,Y+15+1
000266 e0f0      	LDI  R31,0
000267 93ed      	ST   X+,R30
000268 93fc      	ST   X,R31
                 ; 0000 00BD         *i_temp = bytes[3];
000269 81ef      	LDD  R30,Y+7
00026a 85ad      	LDD  R26,Y+13
00026b 85be      	LDD  R27,Y+13+1
00026c e0f0      	LDI  R31,0
00026d 93ed      	ST   X+,R30
00026e 93fc      	ST   X,R31
                 ; 0000 00BE         *humidity = bytes[0];
00026f 81ec      	LDD  R30,Y+4
000270 85ab      	LDD  R26,Y+11
000271 85bc      	LDD  R27,Y+11+1
000272 e0f0      	LDI  R31,0
000273 93ed      	ST   X+,R30
000274 93fc      	ST   X,R31
                 ; 0000 00BF         *i_humidity = bytes[1];
000275 81ed      	LDD  R30,Y+5
000276 85a9      	LDD  R26,Y+9
000277 85ba      	LDD  R27,Y+9+1
000278 e0f0      	LDI  R31,0
000279 93ed      	ST   X+,R30
00027a 93fc      	ST   X,R31
                 ; 0000 00C0         return 0;
00027b e0e0      	LDI  R30,LOW(0)
00027c e0f0      	LDI  R31,HIGH(0)
00027d c002      	RJMP _0x20C000A
                 ; 0000 00C1     }
                 ; 0000 00C2     // checksum error
                 ; 0000 00C3     return -4;
                 _0x2E:
00027e efec      	LDI  R30,LOW(65532)
00027f efff      	LDI  R31,HIGH(65532)
                 _0x20C000A:
000280 940e 1062 	CALL __LOADLOCR4
000282 9661      	ADIW R28,17
000283 9508      	RET
                 ; 0000 00C4 }
                 ; .FEND
                 ;
                 ;void main(void){
                 ; 0000 00C6 void main(void){
                 _main:
                 ; .FSTART _main
                 ; 0000 00C7     int temp, i_temp, humidity, i_humidity, err_code, light, temp_threshold = -1, humidity_threshold = -1, light_thresho ...
                 ; 0000 00C8     char i, j, recv_data[20], loop_count = 0, *p;
                 ; 0000 00C9     char mss[24];
                 ; 0000 00CA     #asm("sei ");
000284 97ed      	SBIW R28,61
000285 e18d      	LDI  R24,29
000286 e1aa      	LDI  R26,LOW(26)
000287 e0b0      	LDI  R27,HIGH(26)
000288 e6ea      	LDI  R30,LOW(_0x2F*2)
000289 e0f0      	LDI  R31,HIGH(_0x2F*2)
00028a 940e 1067 	CALL __INITLOCB
                 ;	temp -> R16,R17
                 ;	i_temp -> R18,R19
                 ;	humidity -> R20,R21
                 ;	i_humidity -> Y+59
                 ;	err_code -> Y+57
                 ;	light -> Y+55
                 ;	temp_threshold -> Y+53
                 ;	humidity_threshold -> Y+51
                 ;	light_threshold -> Y+49
                 ;	i -> Y+48
                 ;	j -> Y+47
                 ;	recv_data -> Y+27
                 ;	loop_count -> Y+26
                 ;	*p -> Y+24
                 ;	mss -> Y+0
00028c 9478      	sei 
                 ; 0000 00CB     // ADC init - ADC6
                 ; 0000 00CC     ADC_init();
00028d de1e      	RCALL _ADC_init
                 ; 0000 00CD 	USART_init(SYS_CLOCK/16/BAUD - 1);
00028e e4a7      	LDI  R26,LOW(71)
00028f e0b0      	LDI  R27,0
000290 de47      	RCALL _USART_init
                 ; 0000 00CE     LCD_init();
000291 ded5      	RCALL _LCD_init
                 ; 0000 00CF     // init led pin
                 ; 0000 00D0     DDRB |= 0x1C; // 2,3,4
000292 b1e4      	IN   R30,0x4
000293 61ec      	ORI  R30,LOW(0x1C)
000294 b9e4      	OUT  0x4,R30
                 ; 0000 00D1     temp_threshold = eeprom_read_word(0);
000295 e0a0      	LDI  R26,LOW(0)
000296 e0b0      	LDI  R27,HIGH(0)
000297 940e 1028 	CALL __EEPROMRDW
000299 abed      	STD  Y+53,R30
00029a abfe      	STD  Y+53+1,R31
                 ; 0000 00D2     humidity_threshold = eeprom_read_word(2);
00029b e0a2      	LDI  R26,LOW(2)
00029c e0b0      	LDI  R27,HIGH(2)
00029d 940e 1028 	CALL __EEPROMRDW
00029f abeb      	STD  Y+51,R30
0002a0 abfc      	STD  Y+51+1,R31
                 ; 0000 00D3     light_threshold = eeprom_read_word(4);
0002a1 e0a4      	LDI  R26,LOW(4)
0002a2 e0b0      	LDI  R27,HIGH(4)
0002a3 940e 1028 	CALL __EEPROMRDW
0002a5 abe9      	STD  Y+49,R30
0002a6 abfa      	STD  Y+49+1,R31
                 ; 0000 00D4     // send update threshold
                 ; 0000 00D5     sprintf(mss, "1 %d %d %d", temp_threshold, humidity_threshold, light_threshold);
0002a7 01fe      	MOVW R30,R28
0002a8 93fa      	ST   -Y,R31
0002a9 93ea      	ST   -Y,R30
                +
0002aa e8e8     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0002ab e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0002ac 93fa      	ST   -Y,R31
0002ad 93ea      	ST   -Y,R30
0002ae ade9      	LDD  R30,Y+57
0002af adfa      	LDD  R31,Y+57+1
0002b0 940e 0f4f 	CALL __CWD1
0002b2 940e 100c 	CALL __PUTPARD1
0002b4 adeb      	LDD  R30,Y+59
0002b5 adfc      	LDD  R31,Y+59+1
0002b6 940e 0f4f 	CALL __CWD1
0002b8 940e 100c 	CALL __PUTPARD1
0002ba aded      	LDD  R30,Y+61
0002bb adfe      	LDD  R31,Y+61+1
0002bc 940e 0f4f 	CALL __CWD1
0002be 940e 100c 	CALL __PUTPARD1
0002c0 e08c      	LDI  R24,12
0002c1 940e 0955 	CALL _sprintf
0002c3 9660      	ADIW R28,16
                 ; 0000 00D6     USART_put(mss);
0002c4 01de      	MOVW R26,R28
0002c5 de22      	RCALL _USART_put
                 ; 0000 00D7     //USART_put("Hello from ATmega328p");
                 ; 0000 00D8 	while(1){
                 _0x30:
                 ; 0000 00D9         // check uart data received
                 ; 0000 00DA         loop_count++;
0002c6 8dea      	LDD  R30,Y+26
0002c7 5fef      	SUBI R30,-LOW(1)
0002c8 8fea      	STD  Y+26,R30
                 ; 0000 00DB         if(recv_done){
0002c9 2044      	TST  R4
0002ca f409      	BRNE PC+2
0002cb c0e4      	RJMP _0x33
                 ; 0000 00DC             recv_done = 0;
0002cc 2444      	CLR  R4
                 ; 0000 00DD             for(i = 0; i < 20; i++) // find 's';
0002cd e0e0      	LDI  R30,LOW(0)
0002ce abe8      	STD  Y+48,R30
                 _0x35:
0002cf a9a8      	LDD  R26,Y+48
0002d0 31a4      	CPI  R26,LOW(0x14)
0002d1 f458      	BRSH _0x36
                 ; 0000 00DE                 if(recv_buf[i] == 's') break;
0002d2 a9e8      	LDD  R30,Y+48
0002d3 e0f0      	LDI  R31,0
0002d4 50e0      	SUBI R30,LOW(-_recv_buf)
0002d5 4ffd      	SBCI R31,HIGH(-_recv_buf)
0002d6 81a0      	LD   R26,Z
0002d7 37a3      	CPI  R26,LOW(0x73)
0002d8 f021      	BREQ _0x36
                 ; 0000 00DF             if(i != 20){
0002d9 a9e8      	LDD  R30,Y+48
0002da 5fef      	SUBI R30,-LOW(1)
0002db abe8      	STD  Y+48,R30
0002dc cff2      	RJMP _0x35
                 _0x36:
0002dd a9a8      	LDD  R26,Y+48
0002de 31a4      	CPI  R26,LOW(0x14)
0002df f409      	BRNE PC+2
0002e0 c0cf      	RJMP _0x38
                 ; 0000 00E0                 j = (i + 1) % 20;
0002e1 a9e8      	LDD  R30,Y+48
0002e2 e0f0      	LDI  R31,0
0002e3 9631      	ADIW R30,1
0002e4 01df      	MOVW R26,R30
0002e5 e1e4      	LDI  R30,LOW(20)
0002e6 e0f0      	LDI  R31,HIGH(20)
0002e7 940e 0fd0 	CALL __MODW21
0002e9 a7ef      	STD  Y+47,R30
                 ; 0000 00E1                 memset(recv_data, 0, 20);
0002ea 01fe      	MOVW R30,R28
0002eb 967b      	ADIW R30,27
0002ec 93fa      	ST   -Y,R31
0002ed 93ea      	ST   -Y,R30
0002ee e0e0      	LDI  R30,LOW(0)
0002ef 93ea      	ST   -Y,R30
0002f0 e1a4      	LDI  R26,LOW(20)
0002f1 e0b0      	LDI  R27,0
0002f2 940e 0b9c 	CALL _memset
                 ; 0000 00E2                 while(j != i){
                 _0x39:
0002f4 a9e8      	LDD  R30,Y+48
0002f5 a5af      	LDD  R26,Y+47
0002f6 17ea      	CP   R30,R26
0002f7 f151      	BREQ _0x3B
                 ; 0000 00E3                     if(recv_buf[j] == 'e') break;
0002f8 a5ef      	LDD  R30,Y+47
0002f9 e0f0      	LDI  R31,0
0002fa 50e0      	SUBI R30,LOW(-_recv_buf)
0002fb 4ffd      	SBCI R31,HIGH(-_recv_buf)
0002fc 81a0      	LD   R26,Z
0002fd 36a5      	CPI  R26,LOW(0x65)
0002fe f119      	BREQ _0x3B
                 ; 0000 00E4                     recv_data[(j-i+20)%20-1] = recv_buf[j];
0002ff a5af      	LDD  R26,Y+47
000300 27bb      	CLR  R27
000301 a9e8      	LDD  R30,Y+48
000302 e0f0      	LDI  R31,0
000303 940e 1021 	CALL __SWAPW12
000305 1bea      	SUB  R30,R26
000306 0bfb      	SBC  R31,R27
000307 9674      	ADIW R30,20
000308 01df      	MOVW R26,R30
000309 e1e4      	LDI  R30,LOW(20)
00030a e0f0      	LDI  R31,HIGH(20)
00030b 940e 0fd0 	CALL __MODW21
00030d 9731      	SBIW R30,1
00030e 01de      	MOVW R26,R28
00030f 965b      	ADIW R26,27
000310 0fae      	ADD  R26,R30
000311 1fbf      	ADC  R27,R31
000312 a5ef      	LDD  R30,Y+47
000313 e0f0      	LDI  R31,0
000314 50e0      	SUBI R30,LOW(-_recv_buf)
000315 4ffd      	SBCI R31,HIGH(-_recv_buf)
000316 81e0      	LD   R30,Z
000317 93ec      	ST   X,R30
                 ; 0000 00E5                     j = (j+1) % 20;
000318 a5ef      	LDD  R30,Y+47
000319 e0f0      	LDI  R31,0
00031a 9631      	ADIW R30,1
00031b 01df      	MOVW R26,R30
00031c e1e4      	LDI  R30,LOW(20)
00031d e0f0      	LDI  R31,HIGH(20)
00031e 940e 0fd0 	CALL __MODW21
000320 a7ef      	STD  Y+47,R30
                 ; 0000 00E6                 }
000321 cfd2      	RJMP _0x39
                 _0x3B:
                 ; 0000 00E7                 if(j != i){
000322 a9e8      	LDD  R30,Y+48
000323 a5af      	LDD  R26,Y+47
000324 17ea      	CP   R30,R26
000325 f409      	BRNE PC+2
000326 c089      	RJMP _0x3D
                 ; 0000 00E8                     i = 0;
000327 e0e0      	LDI  R30,LOW(0)
000328 abe8      	STD  Y+48,R30
                 ; 0000 00E9                     p = strrchr(recv_data, ' ');
000329 01fe      	MOVW R30,R28
00032a 967b      	ADIW R30,27
00032b 93fa      	ST   -Y,R31
00032c 93ea      	ST   -Y,R30
00032d e2a0      	LDI  R26,LOW(32)
00032e 940e 0bd2 	CALL _strrchr
000330 8fe8      	STD  Y+24,R30
000331 8ff9      	STD  Y+24+1,R31
                 ; 0000 00EA                     sscanf(p + 1, "%d", &light_threshold);
000332 9631      	ADIW R30,1
000333 93fa      	ST   -Y,R31
000334 93ea      	ST   -Y,R30
                +
000335 e9e0     +LDI R30 , LOW ( 2 * _0x0 + ( 8 ) )
000336 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 8 ) )
                 	__POINTW1FN _0x0,8
000337 93fa      	ST   -Y,R31
000338 93ea      	ST   -Y,R30
000339 01fe      	MOVW R30,R28
00033a 96f5      	ADIW R30,53
00033b 2766      	CLR  R22
00033c 2777      	CLR  R23
00033d 940e 100c 	CALL __PUTPARD1
00033f e084      	LDI  R24,4
000340 940e 0b69 	CALL _sscanf
000342 9628      	ADIW R28,8
                 ; 0000 00EB                     *p = 0;
000343 8da8      	LDD  R26,Y+24
000344 8db9      	LDD  R27,Y+24+1
000345 e0e0      	LDI  R30,LOW(0)
000346 93ec      	ST   X,R30
                 ; 0000 00EC                     p = strrchr(recv_data, ' ');
000347 01fe      	MOVW R30,R28
000348 967b      	ADIW R30,27
000349 93fa      	ST   -Y,R31
00034a 93ea      	ST   -Y,R30
00034b e2a0      	LDI  R26,LOW(32)
00034c 940e 0bd2 	CALL _strrchr
00034e 8fe8      	STD  Y+24,R30
00034f 8ff9      	STD  Y+24+1,R31
                 ; 0000 00ED                     sscanf(p + 1, "%d", &humidity_threshold);
000350 9631      	ADIW R30,1
000351 93fa      	ST   -Y,R31
000352 93ea      	ST   -Y,R30
                +
000353 e9e0     +LDI R30 , LOW ( 2 * _0x0 + ( 8 ) )
000354 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 8 ) )
                 	__POINTW1FN _0x0,8
000355 93fa      	ST   -Y,R31
000356 93ea      	ST   -Y,R30
000357 01fe      	MOVW R30,R28
000358 96f7      	ADIW R30,55
000359 2766      	CLR  R22
00035a 2777      	CLR  R23
00035b 940e 100c 	CALL __PUTPARD1
00035d e084      	LDI  R24,4
00035e 940e 0b69 	CALL _sscanf
000360 9628      	ADIW R28,8
                 ; 0000 00EE                     *p = 0;
000361 8da8      	LDD  R26,Y+24
000362 8db9      	LDD  R27,Y+24+1
000363 e0e0      	LDI  R30,LOW(0)
000364 93ec      	ST   X,R30
                 ; 0000 00EF                     p = strrchr(recv_data, ' ');
000365 01fe      	MOVW R30,R28
000366 967b      	ADIW R30,27
000367 93fa      	ST   -Y,R31
000368 93ea      	ST   -Y,R30
000369 e2a0      	LDI  R26,LOW(32)
00036a 940e 0bd2 	CALL _strrchr
00036c 8fe8      	STD  Y+24,R30
00036d 8ff9      	STD  Y+24+1,R31
                 ; 0000 00F0                     sscanf(p + 1, "%d", &temp_threshold);
00036e 9631      	ADIW R30,1
00036f 93fa      	ST   -Y,R31
000370 93ea      	ST   -Y,R30
                +
000371 e9e0     +LDI R30 , LOW ( 2 * _0x0 + ( 8 ) )
000372 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 8 ) )
                 	__POINTW1FN _0x0,8
000373 93fa      	ST   -Y,R31
000374 93ea      	ST   -Y,R30
000375 01fe      	MOVW R30,R28
000376 96f9      	ADIW R30,57
000377 2766      	CLR  R22
000378 2777      	CLR  R23
000379 940e 100c 	CALL __PUTPARD1
00037b e084      	LDI  R24,4
00037c 940e 0b69 	CALL _sscanf
00037e 9628      	ADIW R28,8
                 ; 0000 00F1                     // eeprom  write
                 ; 0000 00F2                     eeprom_write_word(0, temp_threshold);
00037f a9ed      	LDD  R30,Y+53
000380 a9fe      	LDD  R31,Y+53+1
000381 e0a0      	LDI  R26,LOW(0)
000382 e0b0      	LDI  R27,HIGH(0)
000383 940e 1038 	CALL __EEPROMWRW
                 ; 0000 00F3                     eeprom_write_word(2, humidity_threshold);
000385 a9eb      	LDD  R30,Y+51
000386 a9fc      	LDD  R31,Y+51+1
000387 e0a2      	LDI  R26,LOW(2)
000388 e0b0      	LDI  R27,HIGH(2)
000389 940e 1038 	CALL __EEPROMWRW
                 ; 0000 00F4                     eeprom_write_word(4, light_threshold);
00038b a9e9      	LDD  R30,Y+49
00038c a9fa      	LDD  R31,Y+49+1
00038d e0a4      	LDI  R26,LOW(4)
00038e e0b0      	LDI  R27,HIGH(4)
00038f 940e 1038 	CALL __EEPROMWRW
                 ; 0000 00F5 
                 ; 0000 00F6                     // send update threshold
                 ; 0000 00F7                     sprintf(mss, "1 %d %d %d", temp_threshold, humidity_threshold, light_threshold);
000391 01fe      	MOVW R30,R28
000392 93fa      	ST   -Y,R31
000393 93ea      	ST   -Y,R30
                +
000394 e8e8     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000395 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000396 93fa      	ST   -Y,R31
000397 93ea      	ST   -Y,R30
000398 ade9      	LDD  R30,Y+57
000399 adfa      	LDD  R31,Y+57+1
00039a 940e 0f4f 	CALL __CWD1
00039c 940e 100c 	CALL __PUTPARD1
00039e adeb      	LDD  R30,Y+59
00039f adfc      	LDD  R31,Y+59+1
0003a0 940e 0f4f 	CALL __CWD1
0003a2 940e 100c 	CALL __PUTPARD1
0003a4 aded      	LDD  R30,Y+61
0003a5 adfe      	LDD  R31,Y+61+1
0003a6 940e 0f4f 	CALL __CWD1
0003a8 940e 100c 	CALL __PUTPARD1
0003aa e08c      	LDI  R24,12
0003ab 940e 0955 	CALL _sprintf
0003ad 9660      	ADIW R28,16
                 ; 0000 00F8                     USART_put(mss);
0003ae 01de      	MOVW R26,R28
0003af dd38      	RCALL _USART_put
                 ; 0000 00F9                 }
                 ; 0000 00FA             }
                 _0x3D:
                 ; 0000 00FB         }
                 _0x38:
                 ; 0000 00FC 
                 ; 0000 00FD 
                 ; 0000 00FE         if(loop_count >= 10){ // read rht11 sensor after every 1s
                 _0x33:
0003b0 8daa      	LDD  R26,Y+26
0003b1 30aa      	CPI  R26,LOW(0xA)
0003b2 f408      	BRSH PC+2
0003b3 c0c1      	RJMP _0x3E
                 ; 0000 00FF             loop_count = 0;
0003b4 e0e0      	LDI  R30,LOW(0)
0003b5 8fea      	STD  Y+26,R30
                 ; 0000 0100             light = 1024-ADC_read(5);
0003b6 e0a5      	LDI  R26,LOW(5)
0003b7 dcff      	RCALL _ADC_read
0003b8 e0a0      	LDI  R26,LOW(1024)
0003b9 e0b4      	LDI  R27,HIGH(1024)
0003ba 1bae      	SUB  R26,R30
0003bb 0bbf      	SBC  R27,R31
0003bc abaf      	STD  Y+55,R26
0003bd afb8      	STD  Y+55+1,R27
                 ; 0000 0101             if((err_code = read_dht11(&temp, &i_temp, &humidity, &i_humidity)) == 0){
0003be b7ed      	IN   R30,SPL
0003bf b7fe      	IN   R31,SPH
0003c0 9731      	SBIW R30,1
0003c1 93fa      	ST   -Y,R31
0003c2 93ea      	ST   -Y,R30
0003c3 931f      	PUSH R17
0003c4 930f      	PUSH R16
0003c5 b7ed      	IN   R30,SPL
0003c6 b7fe      	IN   R31,SPH
0003c7 9731      	SBIW R30,1
0003c8 93fa      	ST   -Y,R31
0003c9 93ea      	ST   -Y,R30
0003ca 933f      	PUSH R19
0003cb 932f      	PUSH R18
0003cc b7ed      	IN   R30,SPL
0003cd b7fe      	IN   R31,SPH
0003ce 9731      	SBIW R30,1
0003cf 93fa      	ST   -Y,R31
0003d0 93ea      	ST   -Y,R30
0003d1 935f      	PUSH R21
0003d2 934f      	PUSH R20
0003d3 01de      	MOVW R26,R28
0003d4 5baf      	SUBI R26,LOW(-(65))
0003d5 4fbf      	SBCI R27,HIGH(-(65))
0003d6 de0e      	RCALL _read_dht11
0003d7 914f      	POP  R20
0003d8 915f      	POP  R21
0003d9 912f      	POP  R18
0003da 913f      	POP  R19
0003db 910f      	POP  R16
0003dc 911f      	POP  R17
0003dd afe9      	STD  Y+57,R30
0003de affa      	STD  Y+57+1,R31
0003df 9730      	SBIW R30,0
0003e0 f009      	BREQ PC+2
0003e1 c080      	RJMP _0x3F
                 ; 0000 0102                 sprintf(mss, "0 %d %d %d %d %d", temp, i_temp, humidity, i_humidity, light);
0003e2 01fe      	MOVW R30,R28
0003e3 93fa      	ST   -Y,R31
0003e4 93ea      	ST   -Y,R30
                +
0003e5 e9e3     +LDI R30 , LOW ( 2 * _0x0 + ( 11 ) )
0003e6 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 11 ) )
                 	__POINTW1FN _0x0,11
0003e7 93fa      	ST   -Y,R31
0003e8 93ea      	ST   -Y,R30
0003e9 01f8      	MOVW R30,R16
0003ea 940e 0f4f 	CALL __CWD1
0003ec 940e 100c 	CALL __PUTPARD1
0003ee 01f9      	MOVW R30,R18
0003ef 940e 0f4f 	CALL __CWD1
0003f1 940e 100c 	CALL __PUTPARD1
0003f3 01fa      	MOVW R30,R20
0003f4 940e 0f4f 	CALL __CWD1
0003f6 940e 100c 	CALL __PUTPARD1
                +
0003f8 01fe     +MOVW R30 , R28
0003f9 5be5     +SUBI R30 , LOW ( - 75 )
0003fa 4fff     +SBCI R31 , HIGH ( - 75 )
0003fb 9001     +LD R0 , Z +
0003fc 81f0     +LD R31 , Z
0003fd 2de0     +MOV R30 , R0
                 	__GETW1SX 75
0003fe 940e 0f4f 	CALL __CWD1
000400 940e 100c 	CALL __PUTPARD1
                +
000402 01fe     +MOVW R30 , R28
000403 5be5     +SUBI R30 , LOW ( - 75 )
000404 4fff     +SBCI R31 , HIGH ( - 75 )
000405 9001     +LD R0 , Z +
000406 81f0     +LD R31 , Z
000407 2de0     +MOV R30 , R0
                 	__GETW1SX 75
000408 940e 0f4f 	CALL __CWD1
00040a 940e 100c 	CALL __PUTPARD1
00040c e184      	LDI  R24,20
00040d 940e 0955 	CALL _sprintf
00040f 9668      	ADIW R28,24
                 ; 0000 0103                 USART_put(mss);
000410 01de      	MOVW R26,R28
000411 dcd6      	RCALL _USART_put
                 ; 0000 0104                 // LCD update
                 ; 0000 0105                 LCD_clear();
000412 dd6b      	RCALL _LCD_clear
                 ; 0000 0106                 sprintf(mss, "T:%d.%doC H:%d.%d%%", temp, i_temp, humidity, i_humidity);
000413 01fe      	MOVW R30,R28
000414 93fa      	ST   -Y,R31
000415 93ea      	ST   -Y,R30
                +
000416 eae4     +LDI R30 , LOW ( 2 * _0x0 + ( 28 ) )
000417 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 28 ) )
                 	__POINTW1FN _0x0,28
000418 93fa      	ST   -Y,R31
000419 93ea      	ST   -Y,R30
00041a 01f8      	MOVW R30,R16
00041b 940e 0f4f 	CALL __CWD1
00041d 940e 100c 	CALL __PUTPARD1
00041f 01f9      	MOVW R30,R18
000420 940e 0f4f 	CALL __CWD1
000422 940e 100c 	CALL __PUTPARD1
000424 01fa      	MOVW R30,R20
000425 940e 0f4f 	CALL __CWD1
000427 940e 100c 	CALL __PUTPARD1
                +
000429 01fe     +MOVW R30 , R28
00042a 5be5     +SUBI R30 , LOW ( - 75 )
00042b 4fff     +SBCI R31 , HIGH ( - 75 )
00042c 9001     +LD R0 , Z +
00042d 81f0     +LD R31 , Z
00042e 2de0     +MOV R30 , R0
                 	__GETW1SX 75
00042f 940e 0f4f 	CALL __CWD1
000431 940e 100c 	CALL __PUTPARD1
000433 e180      	LDI  R24,16
000434 940e 0955 	CALL _sprintf
000436 9664      	ADIW R28,20
                 ; 0000 0107                 LCD_print(mss);
000437 01de      	MOVW R26,R28
000438 dd4e      	RCALL _LCD_print
                 ; 0000 0108                 sprintf(mss, "L:%4.2f%%", light*100.0/1024);
000439 01fe      	MOVW R30,R28
00043a 93fa      	ST   -Y,R31
00043b 93ea      	ST   -Y,R30
                +
00043c ebe8     +LDI R30 , LOW ( 2 * _0x0 + ( 48 ) )
00043d e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 48 ) )
                 	__POINTW1FN _0x0,48
00043e 93fa      	ST   -Y,R31
00043f 93ea      	ST   -Y,R30
000440 adeb      	LDD  R30,Y+59
000441 adfc      	LDD  R31,Y+59+1
000442 940e 0f4f 	CALL __CWD1
000444 940e 0de9 	CALL __CDF1
                +
000446 e0a0     +LDI R26 , LOW ( 0x42C80000 )
000447 e0b0     +LDI R27 , HIGH ( 0x42C80000 )
000448 ec88     +LDI R24 , BYTE3 ( 0x42C80000 )
000449 e492     +LDI R25 , BYTE4 ( 0x42C80000 )
                 	__GETD2N 0x42C80000
00044a 940e 0e73 	CALL __MULF12
00044c 01df      	MOVW R26,R30
00044d 01cb      	MOVW R24,R22
                +
00044e e0e0     +LDI R30 , LOW ( 0x44800000 )
00044f e0f0     +LDI R31 , HIGH ( 0x44800000 )
000450 e860     +LDI R22 , BYTE3 ( 0x44800000 )
000451 e474     +LDI R23 , BYTE4 ( 0x44800000 )
                 	__GETD1N 0x44800000
000452 940e 0ec1 	CALL __DIVF21
000454 940e 100c 	CALL __PUTPARD1
000456 e084      	LDI  R24,4
000457 940e 0955 	CALL _sprintf
000459 9628      	ADIW R28,8
                 ; 0000 0109                 LCD_print_pos(1, 0, mss);
00045a e0e1      	LDI  R30,LOW(1)
00045b 93ea      	ST   -Y,R30
00045c e0e0      	LDI  R30,LOW(0)
00045d 93ea      	ST   -Y,R30
00045e 01de      	MOVW R26,R28
00045f 9612      	ADIW R26,2
000460 dd66      	RCALL _LCD_print_pos
                 ; 0000 010A 
                 ; 0000 010B             } else{
000461 c013      	RJMP _0x40
                 _0x3F:
                 ; 0000 010C                 sprintf(mss, "-1 %d", err_code);
000462 01fe      	MOVW R30,R28
000463 93fa      	ST   -Y,R31
000464 93ea      	ST   -Y,R30
                +
000465 ece2     +LDI R30 , LOW ( 2 * _0x0 + ( 58 ) )
000466 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 58 ) )
                 	__POINTW1FN _0x0,58
000467 93fa      	ST   -Y,R31
000468 93ea      	ST   -Y,R30
000469 aded      	LDD  R30,Y+61
00046a adfe      	LDD  R31,Y+61+1
00046b 940e 0f4f 	CALL __CWD1
00046d 940e 100c 	CALL __PUTPARD1
00046f e084      	LDI  R24,4
000470 940e 0955 	CALL _sprintf
000472 9628      	ADIW R28,8
                 ; 0000 010D                 USART_put(mss);
000473 01de      	MOVW R26,R28
000474 dc73      	RCALL _USART_put
                 ; 0000 010E             }
                 _0x40:
                 ; 0000 010F         }
                 ; 0000 0110 
                 ; 0000 0111         // check threshold
                 ; 0000 0112         PORTB.2 = temp_threshold < temp || (temp_threshold == temp && i_temp > 0);
                 _0x3E:
000475 a9ad      	LDD  R26,Y+53
000476 a9be      	LDD  R27,Y+53+1
000477 17a0      	CP   R26,R16
000478 07b1      	CPC  R27,R17
000479 f04c      	BRLT _0x41
00047a 170a      	CP   R16,R26
00047b 071b      	CPC  R17,R27
00047c f421      	BRNE _0x42
00047d 2400      	CLR  R0
00047e 1602      	CP   R0,R18
00047f 0603      	CPC  R0,R19
000480 f014      	BRLT _0x41
                 _0x42:
000481 e0e0      	LDI  R30,0
000482 c001      	RJMP _0x44
                 _0x41:
000483 e0e1      	LDI  R30,1
                 _0x44:
000484 30e0      	CPI  R30,0
000485 f411      	BRNE _0x45
000486 982a      	CBI  0x5,2
000487 c001      	RJMP _0x46
                 _0x45:
000488 9a2a      	SBI  0x5,2
                 _0x46:
                 ; 0000 0113         PORTB.3 = humidity_threshold < humidity || (humidity_threshold == humidity && i_humidity > 0);
000489 a9ab      	LDD  R26,Y+51
00048a a9bc      	LDD  R27,Y+51+1
00048b 17a4      	CP   R26,R20
00048c 07b5      	CPC  R27,R21
00048d f054      	BRLT _0x47
00048e 174a      	CP   R20,R26
00048f 075b      	CPC  R21,R27
000490 f429      	BRNE _0x48
000491 adab      	LDD  R26,Y+59
000492 adbc      	LDD  R27,Y+59+1
000493 940e 1055 	CALL __CPW02
000495 f014      	BRLT _0x47
                 _0x48:
000496 e0e0      	LDI  R30,0
000497 c001      	RJMP _0x4A
                 _0x47:
000498 e0e1      	LDI  R30,1
                 _0x4A:
000499 30e0      	CPI  R30,0
00049a f411      	BRNE _0x4B
00049b 982b      	CBI  0x5,3
00049c c001      	RJMP _0x4C
                 _0x4B:
00049d 9a2b      	SBI  0x5,3
                 _0x4C:
                 ; 0000 0114         PORTB.4 = light_threshold > light*100.0/1024;
00049e a9ef      	LDD  R30,Y+55
00049f adf8      	LDD  R31,Y+55+1
0004a0 940e 0f4f 	CALL __CWD1
0004a2 940e 0de9 	CALL __CDF1
                +
0004a4 e0a0     +LDI R26 , LOW ( 0x42C80000 )
0004a5 e0b0     +LDI R27 , HIGH ( 0x42C80000 )
0004a6 ec88     +LDI R24 , BYTE3 ( 0x42C80000 )
0004a7 e492     +LDI R25 , BYTE4 ( 0x42C80000 )
                 	__GETD2N 0x42C80000
0004a8 940e 0e73 	CALL __MULF12
0004aa 01df      	MOVW R26,R30
0004ab 01cb      	MOVW R24,R22
                +
0004ac e0e0     +LDI R30 , LOW ( 0x44800000 )
0004ad e0f0     +LDI R31 , HIGH ( 0x44800000 )
0004ae e860     +LDI R22 , BYTE3 ( 0x44800000 )
0004af e474     +LDI R23 , BYTE4 ( 0x44800000 )
                 	__GETD1N 0x44800000
0004b0 940e 0ec1 	CALL __DIVF21
0004b2 a9a9      	LDD  R26,Y+49
0004b3 a9ba      	LDD  R27,Y+49+1
0004b4 940e 0f54 	CALL __CWD2
0004b6 940e 1018 	CALL __CDF2
0004b8 940e 0f26 	CALL __GTF12
0004ba 30e0      	CPI  R30,0
0004bb f411      	BRNE _0x4D
0004bc 982c      	CBI  0x5,4
0004bd c001      	RJMP _0x4E
                 _0x4D:
0004be 9a2c      	SBI  0x5,4
                 _0x4E:
                 ; 0000 0115 
                 ; 0000 0116 		delay_ms(100);
0004bf e6a4      	LDI  R26,LOW(100)
0004c0 e0b0      	LDI  R27,0
0004c1 940e 0d73 	CALL _delay_ms
                 ; 0000 0117 	}
0004c3 ce02      	RJMP _0x30
                 ; 0000 0118 }
                 _0x4F:
0004c4 cfff      	RJMP _0x4F
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
0004c5 93ba      	ST   -Y,R27
0004c6 93aa      	ST   -Y,R26
0004c7 931a      	ST   -Y,R17
0004c8 930a      	ST   -Y,R16
0004c9 81aa      	LDD  R26,Y+2
0004ca 81bb      	LDD  R27,Y+2+1
0004cb 9612      	ADIW R26,2
0004cc 940e 0fee 	CALL __GETW1P
0004ce 9730      	SBIW R30,0
0004cf f159      	BREQ _0x2000016
0004d0 81aa      	LDD  R26,Y+2
0004d1 81bb      	LDD  R27,Y+2+1
0004d2 9614      	ADIW R26,4
0004d3 940e 0fee 	CALL __GETW1P
0004d5 018f      	MOVW R16,R30
0004d6 9730      	SBIW R30,0
0004d7 f061      	BREQ _0x2000018
                +
0004d8 3002     +CPI R16 , LOW ( 2 )
0004d9 e0e0     +LDI R30 , HIGH ( 2 )
0004da 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0004db f098      	BRLO _0x2000019
0004dc 01f8      	MOVW R30,R16
0004dd 9731      	SBIW R30,1
0004de 018f      	MOVW R16,R30
                +
0004df 81aa     +LDD R26 , Y + 2
0004e0 81bb     +LDD R27 , Y + 2 + 1
0004e1 9614     +ADIW R26 , 4
0004e2 93ed     +ST X + , R30
0004e3 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000018:
0004e4 81aa      	LDD  R26,Y+2
0004e5 81bb      	LDD  R27,Y+2+1
0004e6 9612      	ADIW R26,2
0004e7 91ed      	LD   R30,X+
0004e8 91fd      	LD   R31,X+
0004e9 9631      	ADIW R30,1
0004ea 93fe      	ST   -X,R31
0004eb 93ee      	ST   -X,R30
0004ec 9731      	SBIW R30,1
0004ed 81ac      	LDD  R26,Y+4
0004ee 83a0      	STD  Z+0,R26
                 _0x2000019:
0004ef 81aa      	LDD  R26,Y+2
0004f0 81bb      	LDD  R27,Y+2+1
0004f1 940e 0fee 	CALL __GETW1P
0004f3 23ff      	TST  R31
0004f4 f02a      	BRMI _0x200001A
0004f5 91ed      	LD   R30,X+
0004f6 91fd      	LD   R31,X+
0004f7 9631      	ADIW R30,1
0004f8 93fe      	ST   -X,R31
0004f9 93ee      	ST   -X,R30
                 _0x200001A:
0004fa c006      	RJMP _0x200001B
                 _0x2000016:
0004fb 81aa      	LDD  R26,Y+2
0004fc 81bb      	LDD  R27,Y+2+1
0004fd efef      	LDI  R30,LOW(65535)
0004fe efff      	LDI  R31,HIGH(65535)
0004ff 93ed      	ST   X+,R30
000500 93fc      	ST   X,R31
                 _0x200001B:
000501 8119      	LDD  R17,Y+1
000502 8108      	LDD  R16,Y+0
000503 940c 0baa 	JMP  _0x20C0004
                 ; .FEND
                 __ftoe_G100:
                 ; .FSTART __ftoe_G100
000505 93ba      	ST   -Y,R27
000506 93aa      	ST   -Y,R26
000507 9724      	SBIW R28,4
000508 e0e0      	LDI  R30,LOW(0)
000509 83e8      	ST   Y,R30
00050a 83e9      	STD  Y+1,R30
00050b e8e0      	LDI  R30,LOW(128)
00050c 83ea      	STD  Y+2,R30
00050d e3ef      	LDI  R30,LOW(63)
00050e 83eb      	STD  Y+3,R30
00050f 940e 105b 	CALL __SAVELOCR4
000511 85ee      	LDD  R30,Y+14
000512 85ff      	LDD  R31,Y+14+1
000513 3fef      	CPI  R30,LOW(0xFFFF)
000514 efaf      	LDI  R26,HIGH(0xFFFF)
000515 07fa      	CPC  R31,R26
000516 f449      	BRNE _0x200001F
000517 85e8      	LDD  R30,Y+8
000518 85f9      	LDD  R31,Y+8+1
000519 93fa      	ST   -Y,R31
00051a 93ea      	ST   -Y,R30
                +
00051b eca8     +LDI R26 , LOW ( 2 * _0x2000000 + ( 0 ) )
00051c e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW2FN _0x2000000,0
00051d 940e 0bac 	CALL _strcpyf
00051f c144      	RJMP _0x20C0009
                 _0x200001F:
000520 3fef      	CPI  R30,LOW(0x7FFF)
000521 e7af      	LDI  R26,HIGH(0x7FFF)
000522 07fa      	CPC  R31,R26
000523 f449      	BRNE _0x200001E
000524 85e8      	LDD  R30,Y+8
000525 85f9      	LDD  R31,Y+8+1
000526 93fa      	ST   -Y,R31
000527 93ea      	ST   -Y,R30
                +
000528 eca9     +LDI R26 , LOW ( 2 * _0x2000000 + ( 1 ) )
000529 e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW2FN _0x2000000,1
00052a 940e 0bac 	CALL _strcpyf
00052c c137      	RJMP _0x20C0009
                 _0x200001E:
00052d 85ab      	LDD  R26,Y+11
00052e 30a7      	CPI  R26,LOW(0x7)
00052f f010      	BRLO _0x2000021
000530 e0e6      	LDI  R30,LOW(6)
000531 87eb      	STD  Y+11,R30
                 _0x2000021:
000532 851b      	LDD  R17,Y+11
                 _0x2000022:
000533 2fe1      	MOV  R30,R17
000534 5011      	SUBI R17,1
000535 30e0      	CPI  R30,0
000536 f079      	BREQ _0x2000024
                +
000537 81ac     +LDD R26 , Y + 4
000538 81bd     +LDD R27 , Y + 4 + 1
000539 818e     +LDD R24 , Y + 4 + 2
00053a 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
00053b e0e0     +LDI R30 , LOW ( 0x41200000 )
00053c e0f0     +LDI R31 , HIGH ( 0x41200000 )
00053d e260     +LDI R22 , BYTE3 ( 0x41200000 )
00053e e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00053f 940e 0e73 	CALL __MULF12
                +
000541 83ec     +STD Y + 4 , R30
000542 83fd     +STD Y + 4 + 1 , R31
000543 836e     +STD Y + 4 + 2 , R22
000544 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000545 cfed      	RJMP _0x2000022
                 _0x2000024:
                +
000546 85ec     +LDD R30 , Y + 12
000547 85fd     +LDD R31 , Y + 12 + 1
000548 856e     +LDD R22 , Y + 12 + 2
000549 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00054a 940e 1051 	CALL __CPD10
00054c f481      	BRNE _0x2000025
00054d e030      	LDI  R19,LOW(0)
                +
00054e 81ac     +LDD R26 , Y + 4
00054f 81bd     +LDD R27 , Y + 4 + 1
000550 818e     +LDD R24 , Y + 4 + 2
000551 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000552 e0e0     +LDI R30 , LOW ( 0x41200000 )
000553 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000554 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000555 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000556 940e 0e73 	CALL __MULF12
                +
000558 83ec     +STD Y + 4 , R30
000559 83fd     +STD Y + 4 + 1 , R31
00055a 836e     +STD Y + 4 + 2 , R22
00055b 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
00055c c07d      	RJMP _0x2000026
                 _0x2000025:
00055d 853b      	LDD  R19,Y+11
                +
00055e 81ec     +LDD R30 , Y + 4
00055f 81fd     +LDD R31 , Y + 4 + 1
000560 816e     +LDD R22 , Y + 4 + 2
000561 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
000562 85ac     +LDD R26 , Y + 12
000563 85bd     +LDD R27 , Y + 12 + 1
000564 858e     +LDD R24 , Y + 12 + 2
000565 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000566 940e 0f06 	CALL __CMPF12
000568 f009      	BREQ PC+2
000569 f408      	BRCC PC+2
00056a c026      	RJMP _0x2000027
                +
00056b 81ac     +LDD R26 , Y + 4
00056c 81bd     +LDD R27 , Y + 4 + 1
00056d 818e     +LDD R24 , Y + 4 + 2
00056e 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
00056f e0e0     +LDI R30 , LOW ( 0x41200000 )
000570 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000571 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000572 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000573 940e 0e73 	CALL __MULF12
                +
000575 83ec     +STD Y + 4 , R30
000576 83fd     +STD Y + 4 + 1 , R31
000577 836e     +STD Y + 4 + 2 , R22
000578 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                 _0x2000028:
                +
000579 81ec     +LDD R30 , Y + 4
00057a 81fd     +LDD R31 , Y + 4 + 1
00057b 816e     +LDD R22 , Y + 4 + 2
00057c 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
00057d 85ac     +LDD R26 , Y + 12
00057e 85bd     +LDD R27 , Y + 12 + 1
00057f 858e     +LDD R24 , Y + 12 + 2
000580 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000581 940e 0f06 	CALL __CMPF12
000583 f060      	BRLO _0x200002A
                +
000584 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000585 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000586 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000587 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000588 940e 0e73 	CALL __MULF12
                +
00058a 87ec     +STD Y + 12 , R30
00058b 87fd     +STD Y + 12 + 1 , R31
00058c 876e     +STD Y + 12 + 2 , R22
00058d 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00058e 5f3f      	SUBI R19,-LOW(1)
00058f cfe9      	RJMP _0x2000028
                 _0x200002A:
000590 c025      	RJMP _0x200002B
                 _0x2000027:
                 _0x200002C:
                +
000591 81ec     +LDD R30 , Y + 4
000592 81fd     +LDD R31 , Y + 4 + 1
000593 816e     +LDD R22 , Y + 4 + 2
000594 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
000595 85ac     +LDD R26 , Y + 12
000596 85bd     +LDD R27 , Y + 12 + 1
000597 858e     +LDD R24 , Y + 12 + 2
000598 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000599 940e 0f06 	CALL __CMPF12
00059b f460      	BRSH _0x200002E
                +
00059c e0e0     +LDI R30 , LOW ( 0x41200000 )
00059d e0f0     +LDI R31 , HIGH ( 0x41200000 )
00059e e260     +LDI R22 , BYTE3 ( 0x41200000 )
00059f e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0005a0 940e 0e73 	CALL __MULF12
                +
0005a2 87ec     +STD Y + 12 , R30
0005a3 87fd     +STD Y + 12 + 1 , R31
0005a4 876e     +STD Y + 12 + 2 , R22
0005a5 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0005a6 5031      	SUBI R19,LOW(1)
0005a7 cfe9      	RJMP _0x200002C
                 _0x200002E:
                +
0005a8 81ac     +LDD R26 , Y + 4
0005a9 81bd     +LDD R27 , Y + 4 + 1
0005aa 818e     +LDD R24 , Y + 4 + 2
0005ab 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
0005ac e0e0     +LDI R30 , LOW ( 0x41200000 )
0005ad e0f0     +LDI R31 , HIGH ( 0x41200000 )
0005ae e260     +LDI R22 , BYTE3 ( 0x41200000 )
0005af e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0005b0 940e 0e73 	CALL __MULF12
                +
0005b2 83ec     +STD Y + 4 , R30
0005b3 83fd     +STD Y + 4 + 1 , R31
0005b4 836e     +STD Y + 4 + 2 , R22
0005b5 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                 _0x200002B:
                +
0005b6 85ec     +LDD R30 , Y + 12
0005b7 85fd     +LDD R31 , Y + 12 + 1
0005b8 856e     +LDD R22 , Y + 12 + 2
0005b9 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
                +
0005ba e0a0     +LDI R26 , LOW ( 0x3F000000 )
0005bb e0b0     +LDI R27 , HIGH ( 0x3F000000 )
0005bc e080     +LDI R24 , BYTE3 ( 0x3F000000 )
0005bd e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
0005be 940e 0e23 	CALL __ADDF12
                +
0005c0 87ec     +STD Y + 12 , R30
0005c1 87fd     +STD Y + 12 + 1 , R31
0005c2 876e     +STD Y + 12 + 2 , R22
0005c3 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
                +
0005c4 81ec     +LDD R30 , Y + 4
0005c5 81fd     +LDD R31 , Y + 4 + 1
0005c6 816e     +LDD R22 , Y + 4 + 2
0005c7 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
0005c8 85ac     +LDD R26 , Y + 12
0005c9 85bd     +LDD R27 , Y + 12 + 1
0005ca 858e     +LDD R24 , Y + 12 + 2
0005cb 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0005cc 940e 0f06 	CALL __CMPF12
0005ce f058      	BRLO _0x200002F
                +
0005cf eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0005d0 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0005d1 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0005d2 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0005d3 940e 0e73 	CALL __MULF12
                +
0005d5 87ec     +STD Y + 12 , R30
0005d6 87fd     +STD Y + 12 + 1 , R31
0005d7 876e     +STD Y + 12 + 2 , R22
0005d8 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0005d9 5f3f      	SUBI R19,-LOW(1)
                 _0x200002F:
                 _0x2000026:
0005da e010      	LDI  R17,LOW(0)
                 _0x2000030:
0005db 85eb      	LDD  R30,Y+11
0005dc 17e1      	CP   R30,R17
0005dd f408      	BRSH PC+2
0005de c04f      	RJMP _0x2000032
                +
0005df 81ac     +LDD R26 , Y + 4
0005e0 81bd     +LDD R27 , Y + 4 + 1
0005e1 818e     +LDD R24 , Y + 4 + 2
0005e2 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
0005e3 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0005e4 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0005e5 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0005e6 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0005e7 940e 0e73 	CALL __MULF12
                +
0005e9 e0a0     +LDI R26 , LOW ( 0x3F000000 )
0005ea e0b0     +LDI R27 , HIGH ( 0x3F000000 )
0005eb e080     +LDI R24 , BYTE3 ( 0x3F000000 )
0005ec e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
0005ed 940e 0e23 	CALL __ADDF12
0005ef 01df      	MOVW R26,R30
0005f0 01cb      	MOVW R24,R22
0005f1 940e 0c34 	CALL _floor
                +
0005f3 83ec     +STD Y + 4 , R30
0005f4 83fd     +STD Y + 4 + 1 , R31
0005f5 836e     +STD Y + 4 + 2 , R22
0005f6 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                +
0005f7 85ac     +LDD R26 , Y + 12
0005f8 85bd     +LDD R27 , Y + 12 + 1
0005f9 858e     +LDD R24 , Y + 12 + 2
0005fa 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0005fb 940e 0ec1 	CALL __DIVF21
0005fd 940e 0db0 	CALL __CFD1U
0005ff 2f0e      	MOV  R16,R30
000600 85a8      	LDD  R26,Y+8
000601 85b9      	LDD  R27,Y+8+1
000602 9611      	ADIW R26,1
000603 87a8      	STD  Y+8,R26
000604 87b9      	STD  Y+8+1,R27
000605 9711      	SBIW R26,1
000606 5de0      	SUBI R30,-LOW(48)
000607 93ec      	ST   X,R30
000608 2fe0      	MOV  R30,R16
000609 27ff      	CLR  R31
00060a 2766      	CLR  R22
00060b 2777      	CLR  R23
00060c 940e 0de9 	CALL __CDF1
                +
00060e 81ac     +LDD R26 , Y + 4
00060f 81bd     +LDD R27 , Y + 4 + 1
000610 818e     +LDD R24 , Y + 4 + 2
000611 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000612 940e 0e73 	CALL __MULF12
                +
000614 85ac     +LDD R26 , Y + 12
000615 85bd     +LDD R27 , Y + 12 + 1
000616 858e     +LDD R24 , Y + 12 + 2
000617 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000618 940e 101b 	CALL __SWAPD12
00061a 940e 0e1c 	CALL __SUBF12
                +
00061c 87ec     +STD Y + 12 , R30
00061d 87fd     +STD Y + 12 + 1 , R31
00061e 876e     +STD Y + 12 + 2 , R22
00061f 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000620 2fe1      	MOV  R30,R17
000621 5f1f      	SUBI R17,-1
000622 30e0      	CPI  R30,0
000623 f009      	BREQ _0x2000033
000624 cfb6      	RJMP _0x2000030
                 _0x2000033:
000625 85a8      	LDD  R26,Y+8
000626 85b9      	LDD  R27,Y+8+1
000627 9611      	ADIW R26,1
000628 87a8      	STD  Y+8,R26
000629 87b9      	STD  Y+8+1,R27
00062a 9711      	SBIW R26,1
00062b e2ee      	LDI  R30,LOW(46)
00062c 93ec      	ST   X,R30
00062d cfad      	RJMP _0x2000030
                 _0x2000032:
00062e 85e8      	LDD  R30,Y+8
00062f 85f9      	LDD  R31,Y+8+1
000630 9631      	ADIW R30,1
000631 87e8      	STD  Y+8,R30
000632 87f9      	STD  Y+8+1,R31
000633 9731      	SBIW R30,1
000634 85aa      	LDD  R26,Y+10
000635 83a0      	STD  Z+0,R26
000636 3030      	CPI  R19,0
000637 f42c      	BRGE _0x2000034
000638 9531      	NEG  R19
000639 85a8      	LDD  R26,Y+8
00063a 85b9      	LDD  R27,Y+8+1
00063b e2ed      	LDI  R30,LOW(45)
00063c c003      	RJMP _0x200011C
                 _0x2000034:
00063d 85a8      	LDD  R26,Y+8
00063e 85b9      	LDD  R27,Y+8+1
00063f e2eb      	LDI  R30,LOW(43)
                 _0x200011C:
000640 93ec      	ST   X,R30
000641 85e8      	LDD  R30,Y+8
000642 85f9      	LDD  R31,Y+8+1
000643 9631      	ADIW R30,1
000644 87e8      	STD  Y+8,R30
000645 87f9      	STD  Y+8+1,R31
000646 9631      	ADIW R30,1
000647 87e8      	STD  Y+8,R30
000648 87f9      	STD  Y+8+1,R31
000649 9731      	SBIW R30,1
00064a 01bf      	MOVW R22,R30
00064b 2fa3      	MOV  R26,R19
00064c e0ea      	LDI  R30,LOW(10)
00064d 940e 0f87 	CALL __DIVB21
00064f 5de0      	SUBI R30,-LOW(48)
000650 01db      	MOVW R26,R22
000651 93ec      	ST   X,R30
000652 85e8      	LDD  R30,Y+8
000653 85f9      	LDD  R31,Y+8+1
000654 9631      	ADIW R30,1
000655 87e8      	STD  Y+8,R30
000656 87f9      	STD  Y+8+1,R31
000657 9731      	SBIW R30,1
000658 01bf      	MOVW R22,R30
000659 2fa3      	MOV  R26,R19
00065a e0ea      	LDI  R30,LOW(10)
00065b 940e 0fc4 	CALL __MODB21
00065d 5de0      	SUBI R30,-LOW(48)
00065e 01db      	MOVW R26,R22
00065f 93ec      	ST   X,R30
000660 85a8      	LDD  R26,Y+8
000661 85b9      	LDD  R27,Y+8+1
000662 e0e0      	LDI  R30,LOW(0)
000663 93ec      	ST   X,R30
                 _0x20C0009:
000664 940e 1062 	CALL __LOADLOCR4
000666 9660      	ADIW R28,16
000667 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
000668 93ba      	ST   -Y,R27
000669 93aa      	ST   -Y,R26
00066a 97ef      	SBIW R28,63
00066b 9761      	SBIW R28,17
00066c 940e 1059 	CALL __SAVELOCR6
00066e e010      	LDI  R17,0
                +
00066f 01fe     +MOVW R30 , R28
000670 5ae8     +SUBI R30 , LOW ( - 88 )
000671 4fff     +SBCI R31 , HIGH ( - 88 )
000672 9001     +LD R0 , Z +
000673 81f0     +LD R31 , Z
000674 2de0     +MOV R30 , R0
                 	__GETW1SX 88
000675 87e8      	STD  Y+8,R30
000676 87f9      	STD  Y+8+1,R31
                +
000677 01fe     +MOVW R30 , R28
000678 5aea     +SUBI R30 , LOW ( - 86 )
000679 4fff     +SBCI R31 , HIGH ( - 86 )
00067a 9001     +LD R0 , Z +
00067b 81f0     +LD R31 , Z
00067c 2de0     +MOV R30 , R0
                 	__GETW1SX 86
00067d 83ee      	STD  Y+6,R30
00067e 83ff      	STD  Y+6+1,R31
00067f 81ae      	LDD  R26,Y+6
000680 81bf      	LDD  R27,Y+6+1
000681 e0e0      	LDI  R30,LOW(0)
000682 e0f0      	LDI  R31,HIGH(0)
000683 93ed      	ST   X+,R30
000684 93fc      	ST   X,R31
                 _0x2000036:
000685 01de      	MOVW R26,R28
000686 5aa4      	SUBI R26,LOW(-(92))
000687 4fbf      	SBCI R27,HIGH(-(92))
000688 91ed      	LD   R30,X+
000689 91fd      	LD   R31,X+
00068a 9631      	ADIW R30,1
00068b 93fe      	ST   -X,R31
00068c 93ee      	ST   -X,R30
00068d 9731      	SBIW R30,1
00068e 91e4      	LPM  R30,Z
00068f 2f2e      	MOV  R18,R30
000690 30e0      	CPI  R30,0
000691 f409      	BRNE PC+2
000692 c2b9      	RJMP _0x2000038
000693 2fe1      	MOV  R30,R17
000694 30e0      	CPI  R30,0
000695 f459      	BRNE _0x200003C
000696 3225      	CPI  R18,37
000697 f411      	BRNE _0x200003D
000698 e011      	LDI  R17,LOW(1)
000699 c006      	RJMP _0x200003E
                 _0x200003D:
00069a 932a      	ST   -Y,R18
00069b 81af      	LDD  R26,Y+7
00069c 85b8      	LDD  R27,Y+7+1
00069d 85e9      	LDD  R30,Y+9
00069e 85fa      	LDD  R31,Y+9+1
00069f 9509      	ICALL
                 _0x200003E:
0006a0 c2aa      	RJMP _0x200003B
                 _0x200003C:
0006a1 30e1      	CPI  R30,LOW(0x1)
0006a2 f4e1      	BRNE _0x200003F
0006a3 3225      	CPI  R18,37
0006a4 f439      	BRNE _0x2000040
0006a5 932a      	ST   -Y,R18
0006a6 81af      	LDD  R26,Y+7
0006a7 85b8      	LDD  R27,Y+7+1
0006a8 85e9      	LDD  R30,Y+9
0006a9 85fa      	LDD  R31,Y+9+1
0006aa 9509      	ICALL
0006ab c29e      	RJMP _0x200011D
                 _0x2000040:
0006ac e012      	LDI  R17,LOW(2)
0006ad e0e0      	LDI  R30,LOW(0)
0006ae 8bed      	STD  Y+21,R30
0006af e000      	LDI  R16,LOW(0)
0006b0 322d      	CPI  R18,45
0006b1 f411      	BRNE _0x2000041
0006b2 e001      	LDI  R16,LOW(1)
0006b3 c297      	RJMP _0x200003B
                 _0x2000041:
0006b4 322b      	CPI  R18,43
0006b5 f419      	BRNE _0x2000042
0006b6 e2eb      	LDI  R30,LOW(43)
0006b7 8bed      	STD  Y+21,R30
0006b8 c292      	RJMP _0x200003B
                 _0x2000042:
0006b9 3220      	CPI  R18,32
0006ba f419      	BRNE _0x2000043
0006bb e2e0      	LDI  R30,LOW(32)
0006bc 8bed      	STD  Y+21,R30
0006bd c28d      	RJMP _0x200003B
                 _0x2000043:
0006be c002      	RJMP _0x2000044
                 _0x200003F:
0006bf 30e2      	CPI  R30,LOW(0x2)
0006c0 f439      	BRNE _0x2000045
                 _0x2000044:
0006c1 e050      	LDI  R21,LOW(0)
0006c2 e013      	LDI  R17,LOW(3)
0006c3 3320      	CPI  R18,48
0006c4 f411      	BRNE _0x2000046
0006c5 6800      	ORI  R16,LOW(128)
0006c6 c284      	RJMP _0x200003B
                 _0x2000046:
0006c7 c002      	RJMP _0x2000047
                 _0x2000045:
0006c8 30e3      	CPI  R30,LOW(0x3)
0006c9 f491      	BRNE _0x2000048
                 _0x2000047:
0006ca 3320      	CPI  R18,48
0006cb f010      	BRLO _0x200004A
0006cc 332a      	CPI  R18,58
0006cd f008      	BRLO _0x200004B
                 _0x200004A:
0006ce c007      	RJMP _0x2000049
                 _0x200004B:
0006cf e0aa      	LDI  R26,LOW(10)
0006d0 9f5a      	MUL  R21,R26
0006d1 2d50      	MOV  R21,R0
0006d2 2fe2      	MOV  R30,R18
0006d3 53e0      	SUBI R30,LOW(48)
0006d4 0f5e      	ADD  R21,R30
0006d5 c275      	RJMP _0x200003B
                 _0x2000049:
0006d6 e040      	LDI  R20,LOW(0)
0006d7 322e      	CPI  R18,46
0006d8 f411      	BRNE _0x200004C
0006d9 e014      	LDI  R17,LOW(4)
0006da c270      	RJMP _0x200003B
                 _0x200004C:
0006db c00f      	RJMP _0x200004D
                 _0x2000048:
0006dc 30e4      	CPI  R30,LOW(0x4)
0006dd f499      	BRNE _0x200004F
0006de 3320      	CPI  R18,48
0006df f010      	BRLO _0x2000051
0006e0 332a      	CPI  R18,58
0006e1 f008      	BRLO _0x2000052
                 _0x2000051:
0006e2 c008      	RJMP _0x2000050
                 _0x2000052:
0006e3 6200      	ORI  R16,LOW(32)
0006e4 e0aa      	LDI  R26,LOW(10)
0006e5 9f4a      	MUL  R20,R26
0006e6 2d40      	MOV  R20,R0
0006e7 2fe2      	MOV  R30,R18
0006e8 53e0      	SUBI R30,LOW(48)
0006e9 0f4e      	ADD  R20,R30
0006ea c260      	RJMP _0x200003B
                 _0x2000050:
                 _0x200004D:
0006eb 362c      	CPI  R18,108
0006ec f419      	BRNE _0x2000053
0006ed 6002      	ORI  R16,LOW(2)
0006ee e015      	LDI  R17,LOW(5)
0006ef c25b      	RJMP _0x200003B
                 _0x2000053:
0006f0 c003      	RJMP _0x2000054
                 _0x200004F:
0006f1 30e5      	CPI  R30,LOW(0x5)
0006f2 f009      	BREQ PC+2
0006f3 c257      	RJMP _0x200003B
                 _0x2000054:
0006f4 2fe2      	MOV  R30,R18
0006f5 36e3      	CPI  R30,LOW(0x63)
0006f6 f4a1      	BRNE _0x2000059
                +
0006f7 01fe     +MOVW R30 , R28
0006f8 5ae6     +SUBI R30 , LOW ( - 90 )
0006f9 4fff     +SBCI R31 , HIGH ( - 90 )
0006fa 9001     +LD R0 , Z +
0006fb 81f0     +LD R31 , Z
0006fc 2de0     +MOV R30 , R0
                 	__GETW1SX 90
0006fd 9734      	SBIW R30,4
                +
0006fe 01de     +MOVW R26 , R28
0006ff 5aa6     +SUBI R26 , LOW ( - 90 )
000700 4fbf     +SBCI R27 , HIGH ( - 90 )
000701 93ed     +ST X + , R30
000702 93fc     +ST X , R31
                 	__PUTW1SX 90
000703 81a4      	LDD  R26,Z+4
000704 93aa      	ST   -Y,R26
000705 81af      	LDD  R26,Y+7
000706 85b8      	LDD  R27,Y+7+1
000707 85e9      	LDD  R30,Y+9
000708 85fa      	LDD  R31,Y+9+1
000709 9509      	ICALL
00070a c23f      	RJMP _0x200005A
                 _0x2000059:
00070b 34e5      	CPI  R30,LOW(0x45)
00070c f011      	BREQ _0x200005D
00070d 36e5      	CPI  R30,LOW(0x65)
00070e f409      	BRNE _0x200005E
                 _0x200005D:
00070f c003      	RJMP _0x200005F
                 _0x200005E:
000710 36e6      	CPI  R30,LOW(0x66)
000711 f009      	BREQ PC+2
000712 c068      	RJMP _0x2000060
                 _0x200005F:
000713 01fe      	MOVW R30,R28
000714 9676      	ADIW R30,22
000715 87ee      	STD  Y+14,R30
000716 87ff      	STD  Y+14+1,R31
                +
000717 01de     +MOVW R26 , R28
000718 5aa6     +SUBI R26 , LOW ( - 90 )
000719 4fbf     +SBCI R27 , HIGH ( - 90 )
00071a 900d     +LD R0 , X +
00071b 91bc     +LD R27 , X
00071c 2da0     +MOV R26 , R0
                 	__GETW2SX 90
00071d 940e 0ff2 	CALL __GETD1P
                +
00071f 87ea     +STD Y + 10 , R30
000720 87fb     +STD Y + 10 + 1 , R31
000721 876c     +STD Y + 10 + 2 , R22
000722 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
                +
000723 01fe     +MOVW R30 , R28
000724 5ae6     +SUBI R30 , LOW ( - 90 )
000725 4fff     +SBCI R31 , HIGH ( - 90 )
000726 9001     +LD R0 , Z +
000727 81f0     +LD R31 , Z
000728 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000729 9734      	SBIW R30,4
                +
00072a 01de     +MOVW R26 , R28
00072b 5aa6     +SUBI R26 , LOW ( - 90 )
00072c 4fbf     +SBCI R27 , HIGH ( - 90 )
00072d 93ed     +ST X + , R30
00072e 93fc     +ST X , R31
                 	__PUTW1SX 90
00072f 85ad      	LDD  R26,Y+13
000730 23aa      	TST  R26
000731 f032      	BRMI _0x2000061
000732 89ad      	LDD  R26,Y+21
000733 32ab      	CPI  R26,LOW(0x2B)
000734 f079      	BREQ _0x2000063
000735 32a0      	CPI  R26,LOW(0x20)
000736 f0b9      	BREQ _0x2000065
000737 c01e      	RJMP _0x2000066
                 _0x2000061:
                +
000738 85ea     +LDD R30 , Y + 10
000739 85fb     +LDD R31 , Y + 10 + 1
00073a 856c     +LDD R22 , Y + 10 + 2
00073b 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00073c 940e 0d7d 	CALL __ANEGF1
                +
00073e 87ea     +STD Y + 10 , R30
00073f 87fb     +STD Y + 10 + 1 , R31
000740 876c     +STD Y + 10 + 2 , R22
000741 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000742 e2ed      	LDI  R30,LOW(45)
000743 8bed      	STD  Y+21,R30
                 _0x2000063:
000744 ff07      	SBRS R16,7
000745 c008      	RJMP _0x2000067
000746 89ed      	LDD  R30,Y+21
000747 93ea      	ST   -Y,R30
000748 81af      	LDD  R26,Y+7
000749 85b8      	LDD  R27,Y+7+1
00074a 85e9      	LDD  R30,Y+9
00074b 85fa      	LDD  R31,Y+9+1
00074c 9509      	ICALL
00074d c008      	RJMP _0x2000068
                 _0x2000067:
                 _0x2000065:
00074e 85ee      	LDD  R30,Y+14
00074f 85ff      	LDD  R31,Y+14+1
000750 9631      	ADIW R30,1
000751 87ee      	STD  Y+14,R30
000752 87ff      	STD  Y+14+1,R31
000753 9731      	SBIW R30,1
000754 89ad      	LDD  R26,Y+21
000755 83a0      	STD  Z+0,R26
                 _0x2000068:
                 _0x2000066:
000756 ff05      	SBRS R16,5
000757 e046      	LDI  R20,LOW(6)
000758 3626      	CPI  R18,102
000759 f461      	BRNE _0x200006A
                +
00075a 85ea     +LDD R30 , Y + 10
00075b 85fb     +LDD R31 , Y + 10 + 1
00075c 856c     +LDD R22 , Y + 10 + 2
00075d 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00075e 940e 100c 	CALL __PUTPARD1
000760 934a      	ST   -Y,R20
000761 89ab      	LDD  R26,Y+19
000762 89bc      	LDD  R27,Y+19+1
000763 940e 0c4b 	CALL _ftoa
000765 c00b      	RJMP _0x200006B
                 _0x200006A:
                +
000766 85ea     +LDD R30 , Y + 10
000767 85fb     +LDD R31 , Y + 10 + 1
000768 856c     +LDD R22 , Y + 10 + 2
000769 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00076a 940e 100c 	CALL __PUTPARD1
00076c 934a      	ST   -Y,R20
00076d 932a      	ST   -Y,R18
00076e 89ac      	LDD  R26,Y+20
00076f 89bd      	LDD  R27,Y+20+1
000770 dd94      	RCALL __ftoe_G100
                 _0x200006B:
000771 01fe      	MOVW R30,R28
000772 9676      	ADIW R30,22
000773 87ee      	STD  Y+14,R30
000774 87ff      	STD  Y+14+1,R31
000775 85ae      	LDD  R26,Y+14
000776 85bf      	LDD  R27,Y+14+1
000777 940e 0bb9 	CALL _strlen
000779 2f1e      	MOV  R17,R30
00077a c045      	RJMP _0x200006C
                 _0x2000060:
00077b 37e3      	CPI  R30,LOW(0x73)
00077c f4e9      	BRNE _0x200006E
                +
00077d 01fe     +MOVW R30 , R28
00077e 5ae6     +SUBI R30 , LOW ( - 90 )
00077f 4fff     +SBCI R31 , HIGH ( - 90 )
000780 9001     +LD R0 , Z +
000781 81f0     +LD R31 , Z
000782 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000783 9734      	SBIW R30,4
                +
000784 01de     +MOVW R26 , R28
000785 5aa6     +SUBI R26 , LOW ( - 90 )
000786 4fbf     +SBCI R27 , HIGH ( - 90 )
000787 93ed     +ST X + , R30
000788 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
000789 01de     +MOVW R26 , R28
00078a 5aa6     +SUBI R26 , LOW ( - 90 )
00078b 4fbf     +SBCI R27 , HIGH ( - 90 )
00078c 900d     +LD R0 , X +
00078d 91bc     +LD R27 , X
00078e 2da0     +MOV R26 , R0
                 	__GETW2SX 90
00078f 9614      	ADIW R26,4
000790 940e 0fee 	CALL __GETW1P
000792 87ee      	STD  Y+14,R30
000793 87ff      	STD  Y+14+1,R31
000794 85ae      	LDD  R26,Y+14
000795 85bf      	LDD  R27,Y+14+1
000796 940e 0bb9 	CALL _strlen
000798 2f1e      	MOV  R17,R30
000799 c01f      	RJMP _0x200006F
                 _0x200006E:
00079a 37e0      	CPI  R30,LOW(0x70)
00079b f549      	BRNE _0x2000071
                +
00079c 01fe     +MOVW R30 , R28
00079d 5ae6     +SUBI R30 , LOW ( - 90 )
00079e 4fff     +SBCI R31 , HIGH ( - 90 )
00079f 9001     +LD R0 , Z +
0007a0 81f0     +LD R31 , Z
0007a1 2de0     +MOV R30 , R0
                 	__GETW1SX 90
0007a2 9734      	SBIW R30,4
                +
0007a3 01de     +MOVW R26 , R28
0007a4 5aa6     +SUBI R26 , LOW ( - 90 )
0007a5 4fbf     +SBCI R27 , HIGH ( - 90 )
0007a6 93ed     +ST X + , R30
0007a7 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
0007a8 01de     +MOVW R26 , R28
0007a9 5aa6     +SUBI R26 , LOW ( - 90 )
0007aa 4fbf     +SBCI R27 , HIGH ( - 90 )
0007ab 900d     +LD R0 , X +
0007ac 91bc     +LD R27 , X
0007ad 2da0     +MOV R26 , R0
                 	__GETW2SX 90
0007ae 9614      	ADIW R26,4
0007af 940e 0fee 	CALL __GETW1P
0007b1 87ee      	STD  Y+14,R30
0007b2 87ff      	STD  Y+14+1,R31
0007b3 85ae      	LDD  R26,Y+14
0007b4 85bf      	LDD  R27,Y+14+1
0007b5 940e 0bc5 	CALL _strlenf
0007b7 2f1e      	MOV  R17,R30
0007b8 6008      	ORI  R16,LOW(8)
                 _0x200006F:
0007b9 770f      	ANDI R16,LOW(127)
0007ba 3040      	CPI  R20,0
0007bb f011      	BREQ _0x2000073
0007bc 1741      	CP   R20,R17
0007bd f008      	BRLO _0x2000074
                 _0x2000073:
0007be c001      	RJMP _0x2000072
                 _0x2000074:
0007bf 2f14      	MOV  R17,R20
                 _0x2000072:
                 _0x200006C:
0007c0 e040      	LDI  R20,LOW(0)
0007c1 e0e0      	LDI  R30,LOW(0)
0007c2 8bec      	STD  Y+20,R30
0007c3 e030      	LDI  R19,LOW(0)
0007c4 c0a9      	RJMP _0x2000075
                 _0x2000071:
0007c5 36e4      	CPI  R30,LOW(0x64)
0007c6 f011      	BREQ _0x2000078
0007c7 36e9      	CPI  R30,LOW(0x69)
0007c8 f411      	BRNE _0x2000079
                 _0x2000078:
0007c9 6004      	ORI  R16,LOW(4)
0007ca c002      	RJMP _0x200007A
                 _0x2000079:
0007cb 37e5      	CPI  R30,LOW(0x75)
0007cc f4c1      	BRNE _0x200007B
                 _0x200007A:
0007cd e0ea      	LDI  R30,LOW(10)
0007ce 8bec      	STD  Y+20,R30
0007cf ff01      	SBRS R16,1
0007d0 c00a      	RJMP _0x200007C
                +
0007d1 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
0007d2 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
0007d3 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
0007d4 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
                +
0007d5 8be8     +STD Y + 16 , R30
0007d6 8bf9     +STD Y + 16 + 1 , R31
0007d7 8b6a     +STD Y + 16 + 2 , R22
0007d8 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
0007d9 e01a      	LDI  R17,LOW(10)
0007da c028      	RJMP _0x200007D
                 _0x200007C:
                +
0007db e1e0     +LDI R30 , LOW ( 0x2710 )
0007dc e2f7     +LDI R31 , HIGH ( 0x2710 )
0007dd e060     +LDI R22 , BYTE3 ( 0x2710 )
0007de e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
                +
0007df 8be8     +STD Y + 16 , R30
0007e0 8bf9     +STD Y + 16 + 1 , R31
0007e1 8b6a     +STD Y + 16 + 2 , R22
0007e2 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
0007e3 e015      	LDI  R17,LOW(5)
0007e4 c01e      	RJMP _0x200007D
                 _0x200007B:
0007e5 35e8      	CPI  R30,LOW(0x58)
0007e6 f411      	BRNE _0x200007F
0007e7 6008      	ORI  R16,LOW(8)
0007e8 c003      	RJMP _0x2000080
                 _0x200007F:
0007e9 37e8      	CPI  R30,LOW(0x78)
0007ea f009      	BREQ PC+2
0007eb c15e      	RJMP _0x20000BE
                 _0x2000080:
0007ec e1e0      	LDI  R30,LOW(16)
0007ed 8bec      	STD  Y+20,R30
0007ee ff01      	SBRS R16,1
0007ef c00a      	RJMP _0x2000082
                +
0007f0 e0e0     +LDI R30 , LOW ( 0x10000000 )
0007f1 e0f0     +LDI R31 , HIGH ( 0x10000000 )
0007f2 e060     +LDI R22 , BYTE3 ( 0x10000000 )
0007f3 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
                +
0007f4 8be8     +STD Y + 16 , R30
0007f5 8bf9     +STD Y + 16 + 1 , R31
0007f6 8b6a     +STD Y + 16 + 2 , R22
0007f7 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
0007f8 e018      	LDI  R17,LOW(8)
0007f9 c009      	RJMP _0x200007D
                 _0x2000082:
                +
0007fa e0e0     +LDI R30 , LOW ( 0x1000 )
0007fb e1f0     +LDI R31 , HIGH ( 0x1000 )
0007fc e060     +LDI R22 , BYTE3 ( 0x1000 )
0007fd e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
                +
0007fe 8be8     +STD Y + 16 , R30
0007ff 8bf9     +STD Y + 16 + 1 , R31
000800 8b6a     +STD Y + 16 + 2 , R22
000801 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000802 e014      	LDI  R17,LOW(4)
                 _0x200007D:
000803 3040      	CPI  R20,0
000804 f011      	BREQ _0x2000083
000805 770f      	ANDI R16,LOW(127)
000806 c001      	RJMP _0x2000084
                 _0x2000083:
000807 e041      	LDI  R20,LOW(1)
                 _0x2000084:
000808 ff01      	SBRS R16,1
000809 c016      	RJMP _0x2000085
                +
00080a 01fe     +MOVW R30 , R28
00080b 5ae6     +SUBI R30 , LOW ( - 90 )
00080c 4fff     +SBCI R31 , HIGH ( - 90 )
00080d 9001     +LD R0 , Z +
00080e 81f0     +LD R31 , Z
00080f 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000810 9734      	SBIW R30,4
                +
000811 01de     +MOVW R26 , R28
000812 5aa6     +SUBI R26 , LOW ( - 90 )
000813 4fbf     +SBCI R27 , HIGH ( - 90 )
000814 93ed     +ST X + , R30
000815 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
000816 01de     +MOVW R26 , R28
000817 5aa6     +SUBI R26 , LOW ( - 90 )
000818 4fbf     +SBCI R27 , HIGH ( - 90 )
000819 900d     +LD R0 , X +
00081a 91bc     +LD R27 , X
00081b 2da0     +MOV R26 , R0
                 	__GETW2SX 90
00081c 9614      	ADIW R26,4
00081d 940e 0ff2 	CALL __GETD1P
00081f c031      	RJMP _0x200011E
                 _0x2000085:
000820 ff02      	SBRS R16,2
000821 c018      	RJMP _0x2000087
                +
000822 01fe     +MOVW R30 , R28
000823 5ae6     +SUBI R30 , LOW ( - 90 )
000824 4fff     +SBCI R31 , HIGH ( - 90 )
000825 9001     +LD R0 , Z +
000826 81f0     +LD R31 , Z
000827 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000828 9734      	SBIW R30,4
                +
000829 01de     +MOVW R26 , R28
00082a 5aa6     +SUBI R26 , LOW ( - 90 )
00082b 4fbf     +SBCI R27 , HIGH ( - 90 )
00082c 93ed     +ST X + , R30
00082d 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
00082e 01de     +MOVW R26 , R28
00082f 5aa6     +SUBI R26 , LOW ( - 90 )
000830 4fbf     +SBCI R27 , HIGH ( - 90 )
000831 900d     +LD R0 , X +
000832 91bc     +LD R27 , X
000833 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000834 9614      	ADIW R26,4
000835 940e 0fee 	CALL __GETW1P
000837 940e 0f4f 	CALL __CWD1
000839 c017      	RJMP _0x200011E
                 _0x2000087:
                +
00083a 01fe     +MOVW R30 , R28
00083b 5ae6     +SUBI R30 , LOW ( - 90 )
00083c 4fff     +SBCI R31 , HIGH ( - 90 )
00083d 9001     +LD R0 , Z +
00083e 81f0     +LD R31 , Z
00083f 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000840 9734      	SBIW R30,4
                +
000841 01de     +MOVW R26 , R28
000842 5aa6     +SUBI R26 , LOW ( - 90 )
000843 4fbf     +SBCI R27 , HIGH ( - 90 )
000844 93ed     +ST X + , R30
000845 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
000846 01de     +MOVW R26 , R28
000847 5aa6     +SUBI R26 , LOW ( - 90 )
000848 4fbf     +SBCI R27 , HIGH ( - 90 )
000849 900d     +LD R0 , X +
00084a 91bc     +LD R27 , X
00084b 2da0     +MOV R26 , R0
                 	__GETW2SX 90
00084c 9614      	ADIW R26,4
00084d 940e 0fee 	CALL __GETW1P
00084f 2766      	CLR  R22
000850 2777      	CLR  R23
                 _0x200011E:
                +
000851 87ea     +STD Y + 10 , R30
000852 87fb     +STD Y + 10 + 1 , R31
000853 876c     +STD Y + 10 + 2 , R22
000854 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000855 ff02      	SBRS R16,2
000856 c016      	RJMP _0x2000089
000857 85ad      	LDD  R26,Y+13
000858 23aa      	TST  R26
000859 f462      	BRPL _0x200008A
                +
00085a 85ea     +LDD R30 , Y + 10
00085b 85fb     +LDD R31 , Y + 10 + 1
00085c 856c     +LDD R22 , Y + 10 + 2
00085d 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00085e 940e 0f39 	CALL __ANEGD1
                +
000860 87ea     +STD Y + 10 , R30
000861 87fb     +STD Y + 10 + 1 , R31
000862 876c     +STD Y + 10 + 2 , R22
000863 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000864 e2ed      	LDI  R30,LOW(45)
000865 8bed      	STD  Y+21,R30
                 _0x200008A:
000866 89ed      	LDD  R30,Y+21
000867 30e0      	CPI  R30,0
000868 f019      	BREQ _0x200008B
000869 5f1f      	SUBI R17,-LOW(1)
00086a 5f4f      	SUBI R20,-LOW(1)
00086b c001      	RJMP _0x200008C
                 _0x200008B:
00086c 7f0b      	ANDI R16,LOW(251)
                 _0x200008C:
                 _0x2000089:
00086d 2f34      	MOV  R19,R20
                 _0x2000075:
00086e fd00      	SBRC R16,0
00086f c018      	RJMP _0x200008D
                 _0x200008E:
000870 1715      	CP   R17,R21
000871 f410      	BRSH _0x2000091
000872 1735      	CP   R19,R21
000873 f008      	BRLO _0x2000092
                 _0x2000091:
000874 c013      	RJMP _0x2000090
                 _0x2000092:
000875 ff07      	SBRS R16,7
000876 c008      	RJMP _0x2000093
000877 ff02      	SBRS R16,2
000878 c004      	RJMP _0x2000094
000879 7f0b      	ANDI R16,LOW(251)
00087a 892d      	LDD  R18,Y+21
00087b 5011      	SUBI R17,LOW(1)
00087c c001      	RJMP _0x2000095
                 _0x2000094:
00087d e320      	LDI  R18,LOW(48)
                 _0x2000095:
00087e c001      	RJMP _0x2000096
                 _0x2000093:
00087f e220      	LDI  R18,LOW(32)
                 _0x2000096:
000880 932a      	ST   -Y,R18
000881 81af      	LDD  R26,Y+7
000882 85b8      	LDD  R27,Y+7+1
000883 85e9      	LDD  R30,Y+9
000884 85fa      	LDD  R31,Y+9+1
000885 9509      	ICALL
000886 5051      	SUBI R21,LOW(1)
000887 cfe8      	RJMP _0x200008E
                 _0x2000090:
                 _0x200008D:
                 _0x2000097:
000888 1714      	CP   R17,R20
000889 f520      	BRSH _0x2000099
00088a 6100      	ORI  R16,LOW(16)
00088b ff02      	SBRS R16,2
00088c c015      	RJMP _0x200009A
00088d 7f0b      	ANDI R16,LOW(251)
00088e 89ed      	LDD  R30,Y+21
00088f 93ea      	ST   -Y,R30
                +
000890 01de     +MOVW R26 , R28
000891 5aa9     +SUBI R26 , LOW ( - 87 )
000892 4fbf     +SBCI R27 , HIGH ( - 87 )
000893 900d     +LD R0 , X +
000894 91bc     +LD R27 , X
000895 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
000896 01fe     +MOVW R30 , R28
000897 5ae7     +SUBI R30 , LOW ( - 89 )
000898 4fff     +SBCI R31 , HIGH ( - 89 )
000899 9001     +LD R0 , Z +
00089a 81f0     +LD R31 , Z
00089b 2de0     +MOV R30 , R0
                 	__GETW1SX 89
00089c 9509      	ICALL
00089d 3050      	CPI  R21,0
00089e f009      	BREQ _0x200009B
00089f 5051      	SUBI R21,LOW(1)
                 _0x200009B:
0008a0 5011      	SUBI R17,LOW(1)
0008a1 5041      	SUBI R20,LOW(1)
                 _0x200009A:
0008a2 e3e0      	LDI  R30,LOW(48)
0008a3 93ea      	ST   -Y,R30
0008a4 81af      	LDD  R26,Y+7
0008a5 85b8      	LDD  R27,Y+7+1
0008a6 85e9      	LDD  R30,Y+9
0008a7 85fa      	LDD  R31,Y+9+1
0008a8 9509      	ICALL
0008a9 3050      	CPI  R21,0
0008aa f009      	BREQ _0x200009C
0008ab 5051      	SUBI R21,LOW(1)
                 _0x200009C:
0008ac 5041      	SUBI R20,LOW(1)
0008ad cfda      	RJMP _0x2000097
                 _0x2000099:
0008ae 2f31      	MOV  R19,R17
0008af 89ec      	LDD  R30,Y+20
0008b0 30e0      	CPI  R30,0
0008b1 f4d9      	BRNE _0x200009D
                 _0x200009E:
0008b2 3030      	CPI  R19,0
0008b3 f0c1      	BREQ _0x20000A0
0008b4 ff03      	SBRS R16,3
0008b5 c006      	RJMP _0x20000A1
0008b6 85ee      	LDD  R30,Y+14
0008b7 85ff      	LDD  R31,Y+14+1
0008b8 9125      	LPM  R18,Z+
0008b9 87ee      	STD  Y+14,R30
0008ba 87ff      	STD  Y+14+1,R31
0008bb c005      	RJMP _0x20000A2
                 _0x20000A1:
0008bc 85ae      	LDD  R26,Y+14
0008bd 85bf      	LDD  R27,Y+14+1
0008be 912d      	LD   R18,X+
0008bf 87ae      	STD  Y+14,R26
0008c0 87bf      	STD  Y+14+1,R27
                 _0x20000A2:
0008c1 932a      	ST   -Y,R18
0008c2 81af      	LDD  R26,Y+7
0008c3 85b8      	LDD  R27,Y+7+1
0008c4 85e9      	LDD  R30,Y+9
0008c5 85fa      	LDD  R31,Y+9+1
0008c6 9509      	ICALL
0008c7 3050      	CPI  R21,0
0008c8 f009      	BREQ _0x20000A3
0008c9 5051      	SUBI R21,LOW(1)
                 _0x20000A3:
0008ca 5031      	SUBI R19,LOW(1)
0008cb cfe6      	RJMP _0x200009E
                 _0x20000A0:
0008cc c070      	RJMP _0x20000A4
                 _0x200009D:
                 _0x20000A6:
                +
0008cd 89e8     +LDD R30 , Y + 16
0008ce 89f9     +LDD R31 , Y + 16 + 1
0008cf 896a     +LDD R22 , Y + 16 + 2
0008d0 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
0008d1 85aa     +LDD R26 , Y + 10
0008d2 85bb     +LDD R27 , Y + 10 + 1
0008d3 858c     +LDD R24 , Y + 10 + 2
0008d4 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
0008d5 940e 0f9f 	CALL __DIVD21U
0008d7 2f2e      	MOV  R18,R30
0008d8 302a      	CPI  R18,10
0008d9 f030      	BRLO _0x20000A8
0008da ff03      	SBRS R16,3
0008db c002      	RJMP _0x20000A9
0008dc 5c29      	SUBI R18,-LOW(55)
0008dd c001      	RJMP _0x20000AA
                 _0x20000A9:
0008de 5a29      	SUBI R18,-LOW(87)
                 _0x20000AA:
0008df c001      	RJMP _0x20000AB
                 _0x20000A8:
0008e0 5d20      	SUBI R18,-LOW(48)
                 _0x20000AB:
0008e1 fd04      	SBRC R16,4
0008e2 c030      	RJMP _0x20000AD
0008e3 3321      	CPI  R18,49
0008e4 f460      	BRSH _0x20000AF
                +
0008e5 89a8     +LDD R26 , Y + 16
0008e6 89b9     +LDD R27 , Y + 16 + 1
0008e7 898a     +LDD R24 , Y + 16 + 2
0008e8 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
0008e9 30a1     +CPI R26 , LOW ( 0x1 )
0008ea e0e0     +LDI R30 , HIGH ( 0x1 )
0008eb 07be     +CPC R27 , R30
0008ec e0e0     +LDI R30 , BYTE3 ( 0x1 )
0008ed 078e     +CPC R24 , R30
0008ee e0e0     +LDI R30 , BYTE4 ( 0x1 )
0008ef 079e     +CPC R25 , R30
                 	__CPD2N 0x1
0008f0 f409      	BRNE _0x20000AE
                 _0x20000AF:
0008f1 c00b      	RJMP _0x20000B1
                 _0x20000AE:
0008f2 1743      	CP   R20,R19
0008f3 f440      	BRSH _0x200011F
0008f4 1753      	CP   R21,R19
0008f5 f010      	BRLO _0x20000B4
0008f6 ff00      	SBRS R16,0
0008f7 c001      	RJMP _0x20000B5
                 _0x20000B4:
0008f8 c023      	RJMP _0x20000B3
                 _0x20000B5:
0008f9 e220      	LDI  R18,LOW(32)
0008fa ff07      	SBRS R16,7
0008fb c017      	RJMP _0x20000B6
                 _0x200011F:
0008fc e320      	LDI  R18,LOW(48)
                 _0x20000B1:
0008fd 6100      	ORI  R16,LOW(16)
0008fe ff02      	SBRS R16,2
0008ff c013      	RJMP _0x20000B7
000900 7f0b      	ANDI R16,LOW(251)
000901 89ed      	LDD  R30,Y+21
000902 93ea      	ST   -Y,R30
                +
000903 01de     +MOVW R26 , R28
000904 5aa9     +SUBI R26 , LOW ( - 87 )
000905 4fbf     +SBCI R27 , HIGH ( - 87 )
000906 900d     +LD R0 , X +
000907 91bc     +LD R27 , X
000908 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
000909 01fe     +MOVW R30 , R28
00090a 5ae7     +SUBI R30 , LOW ( - 89 )
00090b 4fff     +SBCI R31 , HIGH ( - 89 )
00090c 9001     +LD R0 , Z +
00090d 81f0     +LD R31 , Z
00090e 2de0     +MOV R30 , R0
                 	__GETW1SX 89
00090f 9509      	ICALL
000910 3050      	CPI  R21,0
000911 f009      	BREQ _0x20000B8
000912 5051      	SUBI R21,LOW(1)
                 _0x20000B8:
                 _0x20000B7:
                 _0x20000B6:
                 _0x20000AD:
000913 932a      	ST   -Y,R18
000914 81af      	LDD  R26,Y+7
000915 85b8      	LDD  R27,Y+7+1
000916 85e9      	LDD  R30,Y+9
000917 85fa      	LDD  R31,Y+9+1
000918 9509      	ICALL
000919 3050      	CPI  R21,0
00091a f009      	BREQ _0x20000B9
00091b 5051      	SUBI R21,LOW(1)
                 _0x20000B9:
                 _0x20000B3:
00091c 5031      	SUBI R19,LOW(1)
                +
00091d 89e8     +LDD R30 , Y + 16
00091e 89f9     +LDD R31 , Y + 16 + 1
00091f 896a     +LDD R22 , Y + 16 + 2
000920 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000921 85aa     +LDD R26 , Y + 10
000922 85bb     +LDD R27 , Y + 10 + 1
000923 858c     +LDD R24 , Y + 10 + 2
000924 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000925 940e 0fde 	CALL __MODD21U
                +
000927 87ea     +STD Y + 10 , R30
000928 87fb     +STD Y + 10 + 1 , R31
000929 876c     +STD Y + 10 + 2 , R22
00092a 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00092b 89ec      	LDD  R30,Y+20
                +
00092c 89a8     +LDD R26 , Y + 16
00092d 89b9     +LDD R27 , Y + 16 + 1
00092e 898a     +LDD R24 , Y + 16 + 2
00092f 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
000930 27ff      	CLR  R31
000931 2766      	CLR  R22
000932 2777      	CLR  R23
000933 940e 0f9f 	CALL __DIVD21U
                +
000935 8be8     +STD Y + 16 , R30
000936 8bf9     +STD Y + 16 + 1 , R31
000937 8b6a     +STD Y + 16 + 2 , R22
000938 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000939 940e 1051 	CALL __CPD10
00093b f009      	BREQ _0x20000A7
00093c cf90      	RJMP _0x20000A6
                 _0x20000A7:
                 _0x20000A4:
00093d ff00      	SBRS R16,0
00093e c00b      	RJMP _0x20000BA
                 _0x20000BB:
00093f 3050      	CPI  R21,0
000940 f049      	BREQ _0x20000BD
000941 5051      	SUBI R21,LOW(1)
000942 e2e0      	LDI  R30,LOW(32)
000943 93ea      	ST   -Y,R30
000944 81af      	LDD  R26,Y+7
000945 85b8      	LDD  R27,Y+7+1
000946 85e9      	LDD  R30,Y+9
000947 85fa      	LDD  R31,Y+9+1
000948 9509      	ICALL
000949 cff5      	RJMP _0x20000BB
                 _0x20000BD:
                 _0x20000BA:
                 _0x20000BE:
                 _0x200005A:
                 _0x200011D:
00094a e010      	LDI  R17,LOW(0)
                 _0x200003B:
00094b cd39      	RJMP _0x2000036
                 _0x2000038:
00094c 81ae      	LDD  R26,Y+6
00094d 81bf      	LDD  R27,Y+6+1
00094e 940e 0fee 	CALL __GETW1P
000950 940e 1060 	CALL __LOADLOCR6
000952 96ef      	ADIW R28,63
000953 966f      	ADIW R28,31
000954 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000955 92ff      	PUSH R15
000956 2ef8      	MOV  R15,R24
000957 9726      	SBIW R28,6
000958 940e 105b 	CALL __SAVELOCR4
00095a 01de      	MOVW R26,R28
00095b 961c      	ADIW R26,12
00095c 940e 0f2c 	CALL __ADDW2R15
00095e 940e 0fee 	CALL __GETW1P
000960 9730      	SBIW R30,0
000961 f419      	BRNE _0x20000BF
000962 efef      	LDI  R30,LOW(65535)
000963 efff      	LDI  R31,HIGH(65535)
000964 c027      	RJMP _0x20C0008
                 _0x20000BF:
000965 01de      	MOVW R26,R28
000966 9616      	ADIW R26,6
000967 940e 0f2c 	CALL __ADDW2R15
000969 018d      	MOVW R16,R26
00096a 01de      	MOVW R26,R28
00096b 961c      	ADIW R26,12
00096c 940e 0f2c 	CALL __ADDW2R15
00096e 940e 0fee 	CALL __GETW1P
000970 83ee      	STD  Y+6,R30
000971 83ff      	STD  Y+6+1,R31
000972 e0e0      	LDI  R30,LOW(0)
000973 87e8      	STD  Y+8,R30
000974 87e9      	STD  Y+8+1,R30
000975 01de      	MOVW R26,R28
000976 961a      	ADIW R26,10
000977 940e 0f2c 	CALL __ADDW2R15
000979 940e 0fee 	CALL __GETW1P
00097b 93fa      	ST   -Y,R31
00097c 93ea      	ST   -Y,R30
00097d 931a      	ST   -Y,R17
00097e 930a      	ST   -Y,R16
00097f ece5      	LDI  R30,LOW(_put_buff_G100)
000980 e0f4      	LDI  R31,HIGH(_put_buff_G100)
000981 93fa      	ST   -Y,R31
000982 93ea      	ST   -Y,R30
000983 01de      	MOVW R26,R28
000984 961a      	ADIW R26,10
000985 dce2      	RCALL __print_G100
000986 019f      	MOVW R18,R30
000987 81ae      	LDD  R26,Y+6
000988 81bf      	LDD  R27,Y+6+1
000989 e0e0      	LDI  R30,LOW(0)
00098a 93ec      	ST   X,R30
00098b 01f9      	MOVW R30,R18
                 _0x20C0008:
00098c 940e 1062 	CALL __LOADLOCR4
00098e 962a      	ADIW R28,10
00098f 90ff      	POP  R15
000990 9508      	RET
                 ; .FEND
                 _get_buff_G100:
                 ; .FSTART _get_buff_G100
000991 93ba      	ST   -Y,R27
000992 93aa      	ST   -Y,R26
000993 931a      	ST   -Y,R17
000994 81a9      	LDD  R26,Y+1
000995 81ba      	LDD  R27,Y+1+1
000996 e0e0      	LDI  R30,LOW(0)
000997 93ec      	ST   X,R30
000998 81ab      	LDD  R26,Y+3
000999 81bc      	LDD  R27,Y+3+1
00099a 91ec      	LD   R30,X
00099b 2f1e      	MOV  R17,R30
00099c 30e0      	CPI  R30,0
00099d f019      	BREQ _0x20000C7
00099e e0e0      	LDI  R30,LOW(0)
00099f 93ec      	ST   X,R30
0009a0 c019      	RJMP _0x20000C8
                 _0x20000C7:
0009a1 81a9      	LDD  R26,Y+1
0009a2 81ba      	LDD  R27,Y+1+1
0009a3 9611      	ADIW R26,1
0009a4 940e 0fee 	CALL __GETW1P
0009a6 9730      	SBIW R30,0
0009a7 f089      	BREQ _0x20000C9
0009a8 81e9      	LDD  R30,Y+1
0009a9 81fa      	LDD  R31,Y+1+1
0009aa 81a1      	LDD  R26,Z+1
0009ab 81b2      	LDD  R27,Z+2
0009ac 91ec      	LD   R30,X
0009ad 2f1e      	MOV  R17,R30
0009ae 30e0      	CPI  R30,0
0009af f041      	BREQ _0x20000CA
0009b0 81a9      	LDD  R26,Y+1
0009b1 81ba      	LDD  R27,Y+1+1
0009b2 9611      	ADIW R26,1
0009b3 91ed      	LD   R30,X+
0009b4 91fd      	LD   R31,X+
0009b5 9631      	ADIW R30,1
0009b6 93fe      	ST   -X,R31
0009b7 93ee      	ST   -X,R30
                 _0x20000CA:
0009b8 c001      	RJMP _0x20000CB
                 _0x20000C9:
0009b9 e010      	LDI  R17,LOW(0)
                 _0x20000CB:
                 _0x20000C8:
0009ba 2fe1      	MOV  R30,R17
0009bb 8118      	LDD  R17,Y+0
0009bc c1ed      	RJMP _0x20C0004
                 ; .FEND
                 __scanf_G100:
                 ; .FSTART __scanf_G100
0009bd 92ff      	PUSH R15
0009be 93ba      	ST   -Y,R27
0009bf 93aa      	ST   -Y,R26
0009c0 9726      	SBIW R28,6
0009c1 940e 1059 	CALL __SAVELOCR6
0009c3 e0e0      	LDI  R30,LOW(0)
0009c4 e0f0      	LDI  R31,HIGH(0)
0009c5 87ea      	STD  Y+10,R30
0009c6 87fb      	STD  Y+10+1,R31
0009c7 2f4e      	MOV  R20,R30
                 _0x20000CC:
0009c8 89ea      	LDD  R30,Y+18
0009c9 89fb      	LDD  R31,Y+18+1
0009ca 9631      	ADIW R30,1
0009cb 8bea      	STD  Y+18,R30
0009cc 8bfb      	STD  Y+18+1,R31
0009cd 9731      	SBIW R30,1
0009ce 91e4      	LPM  R30,Z
0009cf 2f3e      	MOV  R19,R30
0009d0 30e0      	CPI  R30,0
0009d1 f409      	BRNE PC+2
0009d2 c18f      	RJMP _0x20000CE
0009d3 2fa3      	MOV  R26,R19
0009d4 940e 0be9 	CALL _isspace
0009d6 30e0      	CPI  R30,0
0009d7 f0f9      	BREQ _0x20000CF
                 _0x20000D0:
0009d8 b7ed      	IN   R30,SPL
0009d9 b7fe      	IN   R31,SPH
0009da 93fa      	ST   -Y,R31
0009db 93ea      	ST   -Y,R30
0009dc 934f      	PUSH R20
0009dd 85ae      	LDD  R26,Y+14
0009de 85bf      	LDD  R27,Y+14+1
0009df 89e8      	LDD  R30,Y+16
0009e0 89f9      	LDD  R31,Y+16+1
0009e1 9509      	ICALL
0009e2 914f      	POP  R20
0009e3 2f3e      	MOV  R19,R30
0009e4 30e0      	CPI  R30,0
0009e5 f029      	BREQ _0x20000D3
0009e6 2fa3      	MOV  R26,R19
0009e7 940e 0be9 	CALL _isspace
0009e9 30e0      	CPI  R30,0
0009ea f409      	BRNE _0x20000D4
                 _0x20000D3:
0009eb c009      	RJMP _0x20000D2
                 _0x20000D4:
0009ec 85ac      	LDD  R26,Y+12
0009ed 85bd      	LDD  R27,Y+12+1
0009ee 91ac      	LD   R26,X
0009ef 30a0      	CPI  R26,0
0009f0 f41c      	BRGE _0x20000D5
0009f1 efef      	LDI  R30,LOW(65535)
0009f2 efff      	LDI  R31,HIGH(65535)
0009f3 c170      	RJMP _0x20C0006
                 _0x20000D5:
0009f4 cfe3      	RJMP _0x20000D0
                 _0x20000D2:
0009f5 2f43      	MOV  R20,R19
0009f6 c16a      	RJMP _0x20000D6
                 _0x20000CF:
0009f7 3235      	CPI  R19,37
0009f8 f009      	BREQ PC+2
0009f9 c14a      	RJMP _0x20000D7
0009fa e050      	LDI  R21,LOW(0)
                 _0x20000D8:
0009fb 89ea      	LDD  R30,Y+18
0009fc 89fb      	LDD  R31,Y+18+1
0009fd 9135      	LPM  R19,Z+
0009fe 8bea      	STD  Y+18,R30
0009ff 8bfb      	STD  Y+18+1,R31
000a00 3330      	CPI  R19,48
000a01 f010      	BRLO _0x20000DC
000a02 333a      	CPI  R19,58
000a03 f008      	BRLO _0x20000DB
                 _0x20000DC:
000a04 c007      	RJMP _0x20000DA
                 _0x20000DB:
000a05 e0aa      	LDI  R26,LOW(10)
000a06 9f5a      	MUL  R21,R26
000a07 2d50      	MOV  R21,R0
000a08 2fe3      	MOV  R30,R19
000a09 53e0      	SUBI R30,LOW(48)
000a0a 0f5e      	ADD  R21,R30
000a0b cfef      	RJMP _0x20000D8
                 _0x20000DA:
000a0c 3030      	CPI  R19,0
000a0d f409      	BRNE _0x20000DE
000a0e c153      	RJMP _0x20000CE
                 _0x20000DE:
                 _0x20000DF:
000a0f b7ed      	IN   R30,SPL
000a10 b7fe      	IN   R31,SPH
000a11 93fa      	ST   -Y,R31
000a12 93ea      	ST   -Y,R30
000a13 934f      	PUSH R20
000a14 85ae      	LDD  R26,Y+14
000a15 85bf      	LDD  R27,Y+14+1
000a16 89e8      	LDD  R30,Y+16
000a17 89f9      	LDD  R31,Y+16+1
000a18 9509      	ICALL
000a19 914f      	POP  R20
000a1a 2f2e      	MOV  R18,R30
000a1b 2fae      	MOV  R26,R30
000a1c 940e 0be9 	CALL _isspace
000a1e 30e0      	CPI  R30,0
000a1f f049      	BREQ _0x20000E1
000a20 85ac      	LDD  R26,Y+12
000a21 85bd      	LDD  R27,Y+12+1
000a22 91ac      	LD   R26,X
000a23 30a0      	CPI  R26,0
000a24 f41c      	BRGE _0x20000E2
000a25 efef      	LDI  R30,LOW(65535)
000a26 efff      	LDI  R31,HIGH(65535)
000a27 c13c      	RJMP _0x20C0006
                 _0x20000E2:
000a28 cfe6      	RJMP _0x20000DF
                 _0x20000E1:
000a29 3020      	CPI  R18,0
000a2a f409      	BRNE _0x20000E3
000a2b c12d      	RJMP _0x20000E4
                 _0x20000E3:
000a2c 2f42      	MOV  R20,R18
000a2d 3050      	CPI  R21,0
000a2e f409      	BRNE _0x20000E5
000a2f ef5f      	LDI  R21,LOW(255)
                 _0x20000E5:
000a30 94e8      	CLT
000a31 f8f3      	BLD  R15,3
000a32 2fe3      	MOV  R30,R19
000a33 36e3      	CPI  R30,LOW(0x63)
000a34 f501      	BRNE _0x20000E9
000a35 89e8      	LDD  R30,Y+16
000a36 89f9      	LDD  R31,Y+16+1
000a37 9734      	SBIW R30,4
000a38 8be8      	STD  Y+16,R30
000a39 8bf9      	STD  Y+16+1,R31
000a3a 89a8      	LDD  R26,Y+16
000a3b 89b9      	LDD  R27,Y+16+1
000a3c 9614      	ADIW R26,4
000a3d 910d      	LD   R16,X+
000a3e 911c      	LD   R17,X
000a3f b7ed      	IN   R30,SPL
000a40 b7fe      	IN   R31,SPH
000a41 93fa      	ST   -Y,R31
000a42 93ea      	ST   -Y,R30
000a43 934f      	PUSH R20
000a44 85ae      	LDD  R26,Y+14
000a45 85bf      	LDD  R27,Y+14+1
000a46 89e8      	LDD  R30,Y+16
000a47 89f9      	LDD  R31,Y+16+1
000a48 9509      	ICALL
000a49 914f      	POP  R20
000a4a 01d8      	MOVW R26,R16
000a4b 93ec      	ST   X,R30
000a4c 85ac      	LDD  R26,Y+12
000a4d 85bd      	LDD  R27,Y+12+1
000a4e 91ac      	LD   R26,X
000a4f 30a0      	CPI  R26,0
000a50 f41c      	BRGE _0x20000EA
000a51 efef      	LDI  R30,LOW(65535)
000a52 efff      	LDI  R31,HIGH(65535)
000a53 c110      	RJMP _0x20C0006
                 _0x20000EA:
000a54 c0e9      	RJMP _0x20000E8
                 _0x20000E9:
000a55 37e3      	CPI  R30,LOW(0x73)
000a56 f5b9      	BRNE _0x20000EB
000a57 89e8      	LDD  R30,Y+16
000a58 89f9      	LDD  R31,Y+16+1
000a59 9734      	SBIW R30,4
000a5a 8be8      	STD  Y+16,R30
000a5b 8bf9      	STD  Y+16+1,R31
000a5c 89a8      	LDD  R26,Y+16
000a5d 89b9      	LDD  R27,Y+16+1
000a5e 9614      	ADIW R26,4
000a5f 910d      	LD   R16,X+
000a60 911c      	LD   R17,X
                 _0x20000EC:
000a61 2fe5      	MOV  R30,R21
000a62 5051      	SUBI R21,1
000a63 30e0      	CPI  R30,0
000a64 f129      	BREQ _0x20000EE
000a65 b7ed      	IN   R30,SPL
000a66 b7fe      	IN   R31,SPH
000a67 93fa      	ST   -Y,R31
000a68 93ea      	ST   -Y,R30
000a69 934f      	PUSH R20
000a6a 85ae      	LDD  R26,Y+14
000a6b 85bf      	LDD  R27,Y+14+1
000a6c 89e8      	LDD  R30,Y+16
000a6d 89f9      	LDD  R31,Y+16+1
000a6e 9509      	ICALL
000a6f 914f      	POP  R20
000a70 2f3e      	MOV  R19,R30
000a71 30e0      	CPI  R30,0
000a72 f029      	BREQ _0x20000F0
000a73 2fa3      	MOV  R26,R19
000a74 940e 0be9 	CALL _isspace
000a76 30e0      	CPI  R30,0
000a77 f049      	BREQ _0x20000EF
                 _0x20000F0:
000a78 85ac      	LDD  R26,Y+12
000a79 85bd      	LDD  R27,Y+12+1
000a7a 91ac      	LD   R26,X
000a7b 30a0      	CPI  R26,0
000a7c f41c      	BRGE _0x20000F2
000a7d efef      	LDI  R30,LOW(65535)
000a7e efff      	LDI  R31,HIGH(65535)
000a7f c0e4      	RJMP _0x20C0006
                 _0x20000F2:
000a80 c009      	RJMP _0x20000EE
                 _0x20000EF:
000a81 931f      	PUSH R17
000a82 930f      	PUSH R16
                +
000a83 5f0f     +SUBI R16 , LOW ( - 1 )
000a84 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000a85 2fe3      	MOV  R30,R19
000a86 91af      	POP  R26
000a87 91bf      	POP  R27
000a88 93ec      	ST   X,R30
000a89 cfd7      	RJMP _0x20000EC
                 _0x20000EE:
000a8a 01d8      	MOVW R26,R16
000a8b e0e0      	LDI  R30,LOW(0)
000a8c 93ec      	ST   X,R30
000a8d c0b0      	RJMP _0x20000E8
                 _0x20000EB:
000a8e 36ec      	CPI  R30,LOW(0x6C)
000a8f f439      	BRNE _0x20000F4
000a90 9468      	SET
000a91 f8f3      	BLD  R15,3
000a92 89ea      	LDD  R30,Y+18
000a93 89fb      	LDD  R31,Y+18+1
000a94 9135      	LPM  R19,Z+
000a95 8bea      	STD  Y+18,R30
000a96 8bfb      	STD  Y+18+1,R31
                 _0x20000F4:
000a97 9468      	SET
000a98 f8f1      	BLD  R15,1
000a99 94e8      	CLT
000a9a f8f2      	BLD  R15,2
000a9b 2fe3      	MOV  R30,R19
000a9c 36e4      	CPI  R30,LOW(0x64)
000a9d f011      	BREQ _0x20000F9
000a9e 36e9      	CPI  R30,LOW(0x69)
000a9f f419      	BRNE _0x20000FA
                 _0x20000F9:
000aa0 94e8      	CLT
000aa1 f8f1      	BLD  R15,1
000aa2 c002      	RJMP _0x20000FB
                 _0x20000FA:
000aa3 37e5      	CPI  R30,LOW(0x75)
000aa4 f411      	BRNE _0x20000FC
                 _0x20000FB:
000aa5 e02a      	LDI  R18,LOW(10)
000aa6 c008      	RJMP _0x20000F7
                 _0x20000FC:
000aa7 37e8      	CPI  R30,LOW(0x78)
000aa8 f411      	BRNE _0x20000FD
000aa9 e120      	LDI  R18,LOW(16)
000aaa c004      	RJMP _0x20000F7
                 _0x20000FD:
000aab 32e5      	CPI  R30,LOW(0x25)
000aac f409      	BRNE _0x2000100
000aad c096      	RJMP _0x20000FF
                 _0x2000100:
000aae c0b3      	RJMP _0x20C0007
                 _0x20000F7:
000aaf e0e0      	LDI  R30,LOW(0)
                +
000ab0 83ee     +STD Y + 6 , R30
000ab1 83ef     +STD Y + 6 + 1 , R30
000ab2 87e8     +STD Y + 6 + 2 , R30
000ab3 87e9     +STD Y + 6 + 3 , R30
                 	__CLRD1S 6
000ab4 9468      	SET
000ab5 f8f0      	BLD  R15,0
                 _0x2000101:
000ab6 2fe5      	MOV  R30,R21
000ab7 5051      	SUBI R21,1
000ab8 30e0      	CPI  R30,0
000ab9 f409      	BRNE PC+2
000aba c054      	RJMP _0x2000103
000abb b7ed      	IN   R30,SPL
000abc b7fe      	IN   R31,SPH
000abd 93fa      	ST   -Y,R31
000abe 93ea      	ST   -Y,R30
000abf 934f      	PUSH R20
000ac0 85ae      	LDD  R26,Y+14
000ac1 85bf      	LDD  R27,Y+14+1
000ac2 89e8      	LDD  R30,Y+16
000ac3 89f9      	LDD  R31,Y+16+1
000ac4 9509      	ICALL
000ac5 914f      	POP  R20
000ac6 2f3e      	MOV  R19,R30
000ac7 32e1      	CPI  R30,LOW(0x21)
000ac8 f448      	BRSH _0x2000104
000ac9 85ac      	LDD  R26,Y+12
000aca 85bd      	LDD  R27,Y+12+1
000acb 91ac      	LD   R26,X
000acc 30a0      	CPI  R26,0
000acd f41c      	BRGE _0x2000105
000ace efef      	LDI  R30,LOW(65535)
000acf efff      	LDI  R31,HIGH(65535)
000ad0 c093      	RJMP _0x20C0006
                 _0x2000105:
000ad1 c017      	RJMP _0x2000106
                 _0x2000104:
000ad2 fcf1      	SBRC R15,1
000ad3 c008      	RJMP _0x2000107
000ad4 9468      	SET
000ad5 f8f1      	BLD  R15,1
000ad6 323d      	CPI  R19,45
000ad7 f411      	BRNE _0x2000108
000ad8 f8f2      	BLD  R15,2
000ad9 cfdc      	RJMP _0x2000101
                 _0x2000108:
000ada 323b      	CPI  R19,43
000adb f2d1      	BREQ _0x2000101
                 _0x2000107:
000adc 3120      	CPI  R18,16
000add f431      	BRNE _0x200010A
000ade 2fa3      	MOV  R26,R19
000adf 940e 0bf4 	CALL _isxdigit
000ae1 30e0      	CPI  R30,0
000ae2 f031      	BREQ _0x2000106
000ae3 c009      	RJMP _0x200010C
                 _0x200010A:
000ae4 2fa3      	MOV  R26,R19
000ae5 940e 0be0 	CALL _isdigit
000ae7 30e0      	CPI  R30,0
000ae8 f421      	BRNE _0x200010D
                 _0x2000106:
000ae9 fcf0      	SBRC R15,0
000aea c077      	RJMP _0x200010F
000aeb 2f43      	MOV  R20,R19
000aec c022      	RJMP _0x2000103
                 _0x200010D:
                 _0x200010C:
000aed 3631      	CPI  R19,97
000aee f010      	BRLO _0x2000110
000aef 5537      	SUBI R19,LOW(87)
000af0 c005      	RJMP _0x2000111
                 _0x2000110:
000af1 3431      	CPI  R19,65
000af2 f010      	BRLO _0x2000112
000af3 5337      	SUBI R19,LOW(55)
000af4 c001      	RJMP _0x2000113
                 _0x2000112:
000af5 5330      	SUBI R19,LOW(48)
                 _0x2000113:
                 _0x2000111:
000af6 2fe2      	MOV  R30,R18
                +
000af7 81ae     +LDD R26 , Y + 6
000af8 81bf     +LDD R27 , Y + 6 + 1
000af9 8588     +LDD R24 , Y + 6 + 2
000afa 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
000afb 27ff      	CLR  R31
000afc 2766      	CLR  R22
000afd 2777      	CLR  R23
000afe 940e 0f59 	CALL __MULD12U
000b00 01df      	MOVW R26,R30
000b01 01cb      	MOVW R24,R22
000b02 2fe3      	MOV  R30,R19
000b03 27ff      	CLR  R31
000b04 2766      	CLR  R22
000b05 2777      	CLR  R23
000b06 940e 0f30 	CALL __ADDD12
                +
000b08 83ee     +STD Y + 6 , R30
000b09 83ff     +STD Y + 6 + 1 , R31
000b0a 8768     +STD Y + 6 + 2 , R22
000b0b 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
000b0c 94e8      	CLT
000b0d f8f0      	BLD  R15,0
000b0e cfa7      	RJMP _0x2000101
                 _0x2000103:
000b0f fef2      	SBRS R15,2
000b10 c00a      	RJMP _0x2000114
                +
000b11 81ee     +LDD R30 , Y + 6
000b12 81ff     +LDD R31 , Y + 6 + 1
000b13 8568     +LDD R22 , Y + 6 + 2
000b14 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
000b15 940e 0f39 	CALL __ANEGD1
                +
000b17 83ee     +STD Y + 6 , R30
000b18 83ff     +STD Y + 6 + 1 , R31
000b19 8768     +STD Y + 6 + 2 , R22
000b1a 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
                 _0x2000114:
000b1b fef3      	SBRS R15,3
000b1c c012      	RJMP _0x2000115
000b1d 89e8      	LDD  R30,Y+16
000b1e 89f9      	LDD  R31,Y+16+1
000b1f 9734      	SBIW R30,4
000b20 8be8      	STD  Y+16,R30
000b21 8bf9      	STD  Y+16+1,R31
000b22 89a8      	LDD  R26,Y+16
000b23 89b9      	LDD  R27,Y+16+1
000b24 9614      	ADIW R26,4
000b25 910d      	LD   R16,X+
000b26 911c      	LD   R17,X
                +
000b27 81ee     +LDD R30 , Y + 6
000b28 81ff     +LDD R31 , Y + 6 + 1
000b29 8568     +LDD R22 , Y + 6 + 2
000b2a 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
000b2b 01d8      	MOVW R26,R16
000b2c 940e 0ff8 	CALL __PUTDP1
000b2e c00f      	RJMP _0x2000116
                 _0x2000115:
000b2f 89e8      	LDD  R30,Y+16
000b30 89f9      	LDD  R31,Y+16+1
000b31 9734      	SBIW R30,4
000b32 8be8      	STD  Y+16,R30
000b33 8bf9      	STD  Y+16+1,R31
000b34 89a8      	LDD  R26,Y+16
000b35 89b9      	LDD  R27,Y+16+1
000b36 9614      	ADIW R26,4
000b37 910d      	LD   R16,X+
000b38 911c      	LD   R17,X
000b39 81ee      	LDD  R30,Y+6
000b3a 81ff      	LDD  R31,Y+6+1
000b3b 01d8      	MOVW R26,R16
000b3c 93ed      	ST   X+,R30
000b3d 93fc      	ST   X,R31
                 _0x2000116:
                 _0x20000E8:
000b3e 85ea      	LDD  R30,Y+10
000b3f 85fb      	LDD  R31,Y+10+1
000b40 9631      	ADIW R30,1
000b41 87ea      	STD  Y+10,R30
000b42 87fb      	STD  Y+10+1,R31
000b43 c01d      	RJMP _0x2000117
                 _0x20000D7:
                 _0x20000FF:
000b44 b7ed      	IN   R30,SPL
000b45 b7fe      	IN   R31,SPH
000b46 93fa      	ST   -Y,R31
000b47 93ea      	ST   -Y,R30
000b48 934f      	PUSH R20
000b49 85ae      	LDD  R26,Y+14
000b4a 85bf      	LDD  R27,Y+14+1
000b4b 89e8      	LDD  R30,Y+16
000b4c 89f9      	LDD  R31,Y+16+1
000b4d 9509      	ICALL
000b4e 914f      	POP  R20
000b4f 17e3      	CP   R30,R19
000b50 f081      	BREQ _0x2000118
000b51 85ac      	LDD  R26,Y+12
000b52 85bd      	LDD  R27,Y+12+1
000b53 91ac      	LD   R26,X
000b54 30a0      	CPI  R26,0
000b55 f41c      	BRGE _0x2000119
000b56 efef      	LDI  R30,LOW(65535)
000b57 efff      	LDI  R31,HIGH(65535)
000b58 c00b      	RJMP _0x20C0006
                 _0x2000119:
                 _0x20000E4:
000b59 85ea      	LDD  R30,Y+10
000b5a 85fb      	LDD  R31,Y+10+1
000b5b 9730      	SBIW R30,0
000b5c f419      	BRNE _0x200011A
000b5d efef      	LDI  R30,LOW(65535)
000b5e efff      	LDI  R31,HIGH(65535)
000b5f c004      	RJMP _0x20C0006
                 _0x200011A:
000b60 c001      	RJMP _0x20000CE
                 _0x2000118:
                 _0x2000117:
                 _0x20000D6:
000b61 ce66      	RJMP _0x20000CC
                 _0x20000CE:
                 _0x200010F:
                 _0x20C0007:
000b62 85ea      	LDD  R30,Y+10
000b63 85fb      	LDD  R31,Y+10+1
                 _0x20C0006:
000b64 940e 1060 	CALL __LOADLOCR6
000b66 9664      	ADIW R28,20
000b67 90ff      	POP  R15
000b68 9508      	RET
                 ; .FEND
                 _sscanf:
                 ; .FSTART _sscanf
000b69 92ff      	PUSH R15
000b6a 2ef8      	MOV  R15,R24
000b6b 9723      	SBIW R28,3
000b6c 931a      	ST   -Y,R17
000b6d 930a      	ST   -Y,R16
000b6e 01de      	MOVW R26,R28
000b6f 9617      	ADIW R26,7
000b70 940e 0f2c 	CALL __ADDW2R15
000b72 940e 0fee 	CALL __GETW1P
000b74 9730      	SBIW R30,0
000b75 f419      	BRNE _0x200011B
000b76 efef      	LDI  R30,LOW(65535)
000b77 efff      	LDI  R31,HIGH(65535)
000b78 c01e      	RJMP _0x20C0005
                 _0x200011B:
000b79 01de      	MOVW R26,R28
000b7a 9611      	ADIW R26,1
000b7b 940e 0f2c 	CALL __ADDW2R15
000b7d 018d      	MOVW R16,R26
000b7e 01de      	MOVW R26,R28
000b7f 9617      	ADIW R26,7
000b80 940e 0f2c 	CALL __ADDW2R15
000b82 940e 0fee 	CALL __GETW1P
000b84 83eb      	STD  Y+3,R30
000b85 83fc      	STD  Y+3+1,R31
000b86 01de      	MOVW R26,R28
000b87 9615      	ADIW R26,5
000b88 940e 0f2c 	CALL __ADDW2R15
000b8a 940e 0fee 	CALL __GETW1P
000b8c 93fa      	ST   -Y,R31
000b8d 93ea      	ST   -Y,R30
000b8e 931a      	ST   -Y,R17
000b8f 930a      	ST   -Y,R16
000b90 e9e1      	LDI  R30,LOW(_get_buff_G100)
000b91 e0f9      	LDI  R31,HIGH(_get_buff_G100)
000b92 93fa      	ST   -Y,R31
000b93 93ea      	ST   -Y,R30
000b94 01de      	MOVW R26,R28
000b95 9618      	ADIW R26,8
000b96 de26      	RCALL __scanf_G100
                 _0x20C0005:
000b97 8119      	LDD  R17,Y+1
000b98 8108      	LDD  R16,Y+0
000b99 9625      	ADIW R28,5
000b9a 90ff      	POP  R15
000b9b 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
000b9c 93ba      	ST   -Y,R27
000b9d 93aa      	ST   -Y,R26
000b9e 81b9          ldd  r27,y+1
000b9f 81a8          ld   r26,y
000ba0 9610          adiw r26,0
000ba1 f031          breq memset1
000ba2 81fc          ldd  r31,y+4
000ba3 81eb          ldd  r30,y+3
000ba4 816a          ldd  r22,y+2
                 memset0:
000ba5 9361          st   z+,r22
000ba6 9711          sbiw r26,1
000ba7 f7e9          brne memset0
                 memset1:
000ba8 81eb          ldd  r30,y+3
000ba9 81fc          ldd  r31,y+4
                 _0x20C0004:
000baa 9625      	ADIW R28,5
000bab 9508      	RET
                 ; .FEND
                 _strcpyf:
                 ; .FSTART _strcpyf
000bac 93ba      	ST   -Y,R27
000bad 93aa      	ST   -Y,R26
000bae 91e9          ld   r30,y+
000baf 91f9          ld   r31,y+
000bb0 91a9          ld   r26,y+
000bb1 91b9          ld   r27,y+
000bb2 01cd          movw r24,r26
                 strcpyf0:
000bb3 9005      	lpm  r0,z+
000bb4 920d          st   x+,r0
000bb5 2000          tst  r0
000bb6 f7e1          brne strcpyf0
000bb7 01fc          movw r30,r24
000bb8 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
000bb9 93ba      	ST   -Y,R27
000bba 93aa      	ST   -Y,R26
000bbb 91a9          ld   r26,y+
000bbc 91b9          ld   r27,y+
000bbd 27ee          clr  r30
000bbe 27ff          clr  r31
                 strlen0:
000bbf 916d          ld   r22,x+
000bc0 2366          tst  r22
000bc1 f011          breq strlen1
000bc2 9631          adiw r30,1
000bc3 cffb          rjmp strlen0
                 strlen1:
000bc4 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000bc5 93ba      	ST   -Y,R27
000bc6 93aa      	ST   -Y,R26
000bc7 27aa          clr  r26
000bc8 27bb          clr  r27
000bc9 91e9          ld   r30,y+
000bca 91f9          ld   r31,y+
                 strlenf0:
000bcb 9005      	lpm  r0,z+
000bcc 2000          tst  r0
000bcd f011          breq strlenf1
000bce 9611          adiw r26,1
000bcf cffb          rjmp strlenf0
                 strlenf1:
000bd0 01fd          movw r30,r26
000bd1 9508          ret
                 ; .FEND
                 _strrchr:
                 ; .FSTART _strrchr
000bd2 93aa      	ST   -Y,R26
000bd3 9169          ld   r22,y+
000bd4 91a9          ld   r26,y+
000bd5 91b9          ld   r27,y+
000bd6 27ee          clr  r30
000bd7 27ff          clr  r31
                 strrchr0:
000bd8 917c          ld   r23,x
000bd9 1767          cp   r22,r23
000bda f409          brne strrchr1
000bdb 01fd          movw r30,r26
                 strrchr1:
000bdc 9611          adiw r26,1
000bdd 2377          tst  r23
000bde f7c9          brne strrchr0
000bdf 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _isdigit:
                 ; .FSTART _isdigit
000be0 93aa      	ST   -Y,R26
000be1 e0e1          ldi  r30,1
000be2 91f9          ld   r31,y+
000be3 33f0          cpi  r31,'0'
000be4 f010          brlo isdigit0
000be5 33fa          cpi  r31,'9'+1
000be6 f008          brlo isdigit1
                 isdigit0:
000be7 27ee          clr  r30
                 isdigit1:
000be8 9508          ret
                 ; .FEND
                 _isspace:
                 ; .FSTART _isspace
000be9 93aa      	ST   -Y,R26
000bea e0e1          ldi  r30,1
000beb 91f9          ld   r31,y+
000bec 32f0          cpi  r31,' '
000bed f029          breq isspace1
000bee 30f9          cpi  r31,9
000bef f010          brlo isspace0
000bf0 30fe          cpi  r31,13+1
000bf1 f008          brlo isspace1
                 isspace0:
000bf2 27ee          clr  r30
                 isspace1:
000bf3 9508          ret
                 ; .FEND
                 _isxdigit:
                 ; .FSTART _isxdigit
000bf4 93aa      	ST   -Y,R26
000bf5 e0e1          ldi  r30,1
000bf6 91f9          ld   r31,y+
000bf7 53f0          subi r31,0x30
000bf8 f040          brcs isxdigit0
000bf9 30fa          cpi  r31,10
000bfa f038          brcs isxdigit1
000bfb 75ff          andi r31,0x5f
000bfc 50f7          subi r31,7
000bfd 30fa          cpi  r31,10
000bfe f010          brcs isxdigit0
000bff 31f0          cpi  r31,16
000c00 f008          brcs isxdigit1
                 isxdigit0:
000c01 27ee          clr  r30
                 isxdigit1:
000c02 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
000c03 940e 1011 	CALL __PUTPARD2
000c05 817b         ldd  r23,y+3
000c06 816a         ldd  r22,y+2
000c07 81f9         ldd  r31,y+1
000c08 81e8         ld   r30,y
000c09 fb77         bst  r23,7
000c0a 0f77         lsl  r23
000c0b fd67         sbrc r22,7
000c0c 6071         sbr  r23,1
000c0d 2f97         mov  r25,r23
000c0e 579e         subi r25,0x7e
000c0f f081         breq __ftrunc0
000c10 f078         brcs __ftrunc0
000c11 3198         cpi  r25,24
000c12 f490         brsh __ftrunc1
000c13 27aa         clr  r26
000c14 27bb         clr  r27
000c15 2788         clr  r24
                 __ftrunc2:
000c16 9408         sec
000c17 9587         ror  r24
000c18 95b7         ror  r27
000c19 95a7         ror  r26
000c1a 959a         dec  r25
000c1b f7d1         brne __ftrunc2
000c1c 23ea         and  r30,r26
000c1d 23fb         and  r31,r27
000c1e 2368         and  r22,r24
000c1f c005         rjmp __ftrunc1
                 __ftrunc0:
000c20 94e8         clt
000c21 2777         clr  r23
000c22 27ee         clr  r30
000c23 27ff         clr  r31
000c24 2766         clr  r22
                 __ftrunc1:
000c25 776f         cbr  r22,0x80
000c26 9576         lsr  r23
000c27 f408         brcc __ftrunc3
000c28 6860         sbr  r22,0x80
                 __ftrunc3:
000c29 f977         bld  r23,7
000c2a 91a9         ld   r26,y+
000c2b 91b9         ld   r27,y+
000c2c 9189         ld   r24,y+
000c2d 9199         ld   r25,y+
000c2e 17ea         cp   r30,r26
000c2f 07fb         cpc  r31,r27
000c30 0768         cpc  r22,r24
000c31 0779         cpc  r23,r25
000c32 fb97         bst  r25,7
000c33 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
000c34 940e 1011 	CALL __PUTPARD2
000c36 940e 1002 	CALL __GETD2S0
000c38 940e 0c03 	CALL _ftrunc
000c3a 940e 1007 	CALL __PUTD1S0
000c3c f419          brne __floor1
                 __floor0:
000c3d 940e 0ffd 	CALL __GETD1S0
000c3f c009      	RJMP _0x20C0003
                 __floor1:
000c40 f7e6          brtc __floor0
000c41 940e 0ffd 	CALL __GETD1S0
                +
000c43 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000c44 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000c45 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000c46 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000c47 940e 0e1c 	CALL __SUBF12
                 _0x20C0003:
000c49 9624      	ADIW R28,4
000c4a 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
000c4b 93ba      	ST   -Y,R27
000c4c 93aa      	ST   -Y,R26
000c4d 9724      	SBIW R28,4
000c4e e0e0      	LDI  R30,LOW(0)
000c4f 83e8      	ST   Y,R30
000c50 83e9      	STD  Y+1,R30
000c51 83ea      	STD  Y+2,R30
000c52 e3ef      	LDI  R30,LOW(63)
000c53 83eb      	STD  Y+3,R30
000c54 931a      	ST   -Y,R17
000c55 930a      	ST   -Y,R16
000c56 85eb      	LDD  R30,Y+11
000c57 85fc      	LDD  R31,Y+11+1
000c58 3fef      	CPI  R30,LOW(0xFFFF)
000c59 efaf      	LDI  R26,HIGH(0xFFFF)
000c5a 07fa      	CPC  R31,R26
000c5b f449      	BRNE _0x20A000D
000c5c 81ee      	LDD  R30,Y+6
000c5d 81ff      	LDD  R31,Y+6+1
000c5e 93fa      	ST   -Y,R31
000c5f 93ea      	ST   -Y,R30
                +
000c60 eda0     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 0 ) )
000c61 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 0 ) )
                 	__POINTW2FN _0x20A0000,0
000c62 940e 0bac 	CALL _strcpyf
000c64 c10a      	RJMP _0x20C0002
                 _0x20A000D:
000c65 3fef      	CPI  R30,LOW(0x7FFF)
000c66 e7af      	LDI  R26,HIGH(0x7FFF)
000c67 07fa      	CPC  R31,R26
000c68 f449      	BRNE _0x20A000C
000c69 81ee      	LDD  R30,Y+6
000c6a 81ff      	LDD  R31,Y+6+1
000c6b 93fa      	ST   -Y,R31
000c6c 93ea      	ST   -Y,R30
                +
000c6d eda1     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 1 ) )
000c6e e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 1 ) )
                 	__POINTW2FN _0x20A0000,1
000c6f 940e 0bac 	CALL _strcpyf
000c71 c0fd      	RJMP _0x20C0002
                 _0x20A000C:
000c72 85ac      	LDD  R26,Y+12
000c73 23aa      	TST  R26
000c74 f492      	BRPL _0x20A000F
                +
000c75 85e9     +LDD R30 , Y + 9
000c76 85fa     +LDD R31 , Y + 9 + 1
000c77 856b     +LDD R22 , Y + 9 + 2
000c78 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000c79 940e 0d7d 	CALL __ANEGF1
                +
000c7b 87e9     +STD Y + 9 , R30
000c7c 87fa     +STD Y + 9 + 1 , R31
000c7d 876b     +STD Y + 9 + 2 , R22
000c7e 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000c7f 81ae      	LDD  R26,Y+6
000c80 81bf      	LDD  R27,Y+6+1
000c81 9611      	ADIW R26,1
000c82 83ae      	STD  Y+6,R26
000c83 83bf      	STD  Y+6+1,R27
000c84 9711      	SBIW R26,1
000c85 e2ed      	LDI  R30,LOW(45)
000c86 93ec      	ST   X,R30
                 _0x20A000F:
000c87 85a8      	LDD  R26,Y+8
000c88 30a7      	CPI  R26,LOW(0x7)
000c89 f010      	BRLO _0x20A0010
000c8a e0e6      	LDI  R30,LOW(6)
000c8b 87e8      	STD  Y+8,R30
                 _0x20A0010:
000c8c 8518      	LDD  R17,Y+8
                 _0x20A0011:
000c8d 2fe1      	MOV  R30,R17
000c8e 5011      	SUBI R17,1
000c8f 30e0      	CPI  R30,0
000c90 f079      	BREQ _0x20A0013
                +
000c91 81aa     +LDD R26 , Y + 2
000c92 81bb     +LDD R27 , Y + 2 + 1
000c93 818c     +LDD R24 , Y + 2 + 2
000c94 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
                +
000c95 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000c96 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000c97 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000c98 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000c99 940e 0e73 	CALL __MULF12
                +
000c9b 83ea     +STD Y + 2 , R30
000c9c 83fb     +STD Y + 2 + 1 , R31
000c9d 836c     +STD Y + 2 + 2 , R22
000c9e 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000c9f cfed      	RJMP _0x20A0011
                 _0x20A0013:
                +
000ca0 81ea     +LDD R30 , Y + 2
000ca1 81fb     +LDD R31 , Y + 2 + 1
000ca2 816c     +LDD R22 , Y + 2 + 2
000ca3 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000ca4 85a9     +LDD R26 , Y + 9
000ca5 85ba     +LDD R27 , Y + 9 + 1
000ca6 858b     +LDD R24 , Y + 9 + 2
000ca7 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000ca8 940e 0e23 	CALL __ADDF12
                +
000caa 87e9     +STD Y + 9 , R30
000cab 87fa     +STD Y + 9 + 1 , R31
000cac 876b     +STD Y + 9 + 2 , R22
000cad 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000cae e010      	LDI  R17,LOW(0)
                +
000caf e0e0     +LDI R30 , LOW ( 0x3F800000 )
000cb0 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000cb1 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000cb2 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
                +
000cb3 83ea     +STD Y + 2 , R30
000cb4 83fb     +STD Y + 2 + 1 , R31
000cb5 836c     +STD Y + 2 + 2 , R22
000cb6 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
                 _0x20A0014:
                +
000cb7 81ea     +LDD R30 , Y + 2
000cb8 81fb     +LDD R31 , Y + 2 + 1
000cb9 816c     +LDD R22 , Y + 2 + 2
000cba 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000cbb 85a9     +LDD R26 , Y + 9
000cbc 85ba     +LDD R27 , Y + 9 + 1
000cbd 858b     +LDD R24 , Y + 9 + 2
000cbe 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000cbf 940e 0f06 	CALL __CMPF12
000cc1 f0d8      	BRLO _0x20A0016
                +
000cc2 81aa     +LDD R26 , Y + 2
000cc3 81bb     +LDD R27 , Y + 2 + 1
000cc4 818c     +LDD R24 , Y + 2 + 2
000cc5 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
                +
000cc6 e0e0     +LDI R30 , LOW ( 0x41200000 )
000cc7 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000cc8 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000cc9 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000cca 940e 0e73 	CALL __MULF12
                +
000ccc 83ea     +STD Y + 2 , R30
000ccd 83fb     +STD Y + 2 + 1 , R31
000cce 836c     +STD Y + 2 + 2 , R22
000ccf 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000cd0 5f1f      	SUBI R17,-LOW(1)
000cd1 3217      	CPI  R17,39
000cd2 f048      	BRLO _0x20A0017
000cd3 81ee      	LDD  R30,Y+6
000cd4 81ff      	LDD  R31,Y+6+1
000cd5 93fa      	ST   -Y,R31
000cd6 93ea      	ST   -Y,R30
                +
000cd7 eda5     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 5 ) )
000cd8 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 5 ) )
                 	__POINTW2FN _0x20A0000,5
000cd9 940e 0bac 	CALL _strcpyf
000cdb c093      	RJMP _0x20C0002
                 _0x20A0017:
000cdc cfda      	RJMP _0x20A0014
                 _0x20A0016:
000cdd 3010      	CPI  R17,0
000cde f449      	BRNE _0x20A0018
000cdf 81ae      	LDD  R26,Y+6
000ce0 81bf      	LDD  R27,Y+6+1
000ce1 9611      	ADIW R26,1
000ce2 83ae      	STD  Y+6,R26
000ce3 83bf      	STD  Y+6+1,R27
000ce4 9711      	SBIW R26,1
000ce5 e3e0      	LDI  R30,LOW(48)
000ce6 93ec      	ST   X,R30
000ce7 c047      	RJMP _0x20A0019
                 _0x20A0018:
                 _0x20A001A:
000ce8 2fe1      	MOV  R30,R17
000ce9 5011      	SUBI R17,1
000cea 30e0      	CPI  R30,0
000ceb f409      	BRNE PC+2
000cec c042      	RJMP _0x20A001C
                +
000ced 81aa     +LDD R26 , Y + 2
000cee 81bb     +LDD R27 , Y + 2 + 1
000cef 818c     +LDD R24 , Y + 2 + 2
000cf0 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
                +
000cf1 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000cf2 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000cf3 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000cf4 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000cf5 940e 0e73 	CALL __MULF12
                +
000cf7 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000cf8 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000cf9 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000cfa e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000cfb 940e 0e23 	CALL __ADDF12
000cfd 01df      	MOVW R26,R30
000cfe 01cb      	MOVW R24,R22
000cff 940e 0c34 	CALL _floor
                +
000d01 83ea     +STD Y + 2 , R30
000d02 83fb     +STD Y + 2 + 1 , R31
000d03 836c     +STD Y + 2 + 2 , R22
000d04 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
                +
000d05 85a9     +LDD R26 , Y + 9
000d06 85ba     +LDD R27 , Y + 9 + 1
000d07 858b     +LDD R24 , Y + 9 + 2
000d08 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000d09 940e 0ec1 	CALL __DIVF21
000d0b 940e 0db0 	CALL __CFD1U
000d0d 2f0e      	MOV  R16,R30
000d0e 81ae      	LDD  R26,Y+6
000d0f 81bf      	LDD  R27,Y+6+1
000d10 9611      	ADIW R26,1
000d11 83ae      	STD  Y+6,R26
000d12 83bf      	STD  Y+6+1,R27
000d13 9711      	SBIW R26,1
000d14 5de0      	SUBI R30,-LOW(48)
000d15 93ec      	ST   X,R30
000d16 2fe0      	MOV  R30,R16
000d17 e0f0      	LDI  R31,0
                +
000d18 81aa     +LDD R26 , Y + 2
000d19 81bb     +LDD R27 , Y + 2 + 1
000d1a 818c     +LDD R24 , Y + 2 + 2
000d1b 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000d1c 940e 0f4f 	CALL __CWD1
000d1e 940e 0de9 	CALL __CDF1
000d20 940e 0e73 	CALL __MULF12
                +
000d22 85a9     +LDD R26 , Y + 9
000d23 85ba     +LDD R27 , Y + 9 + 1
000d24 858b     +LDD R24 , Y + 9 + 2
000d25 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000d26 940e 101b 	CALL __SWAPD12
000d28 940e 0e1c 	CALL __SUBF12
                +
000d2a 87e9     +STD Y + 9 , R30
000d2b 87fa     +STD Y + 9 + 1 , R31
000d2c 876b     +STD Y + 9 + 2 , R22
000d2d 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000d2e cfb9      	RJMP _0x20A001A
                 _0x20A001C:
                 _0x20A0019:
000d2f 85e8      	LDD  R30,Y+8
000d30 30e0      	CPI  R30,0
000d31 f1c9      	BREQ _0x20C0001
000d32 81ae      	LDD  R26,Y+6
000d33 81bf      	LDD  R27,Y+6+1
000d34 9611      	ADIW R26,1
000d35 83ae      	STD  Y+6,R26
000d36 83bf      	STD  Y+6+1,R27
000d37 9711      	SBIW R26,1
000d38 e2ee      	LDI  R30,LOW(46)
000d39 93ec      	ST   X,R30
                 _0x20A001E:
000d3a 85e8      	LDD  R30,Y+8
000d3b 50e1      	SUBI R30,LOW(1)
000d3c 87e8      	STD  Y+8,R30
000d3d 5fef      	SUBI R30,-LOW(1)
000d3e f161      	BREQ _0x20A0020
                +
000d3f 85a9     +LDD R26 , Y + 9
000d40 85ba     +LDD R27 , Y + 9 + 1
000d41 858b     +LDD R24 , Y + 9 + 2
000d42 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
                +
000d43 e0e0     +LDI R30 , LOW ( 0x41200000 )
000d44 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000d45 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000d46 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000d47 940e 0e73 	CALL __MULF12
                +
000d49 87e9     +STD Y + 9 , R30
000d4a 87fa     +STD Y + 9 + 1 , R31
000d4b 876b     +STD Y + 9 + 2 , R22
000d4c 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000d4d 940e 0db0 	CALL __CFD1U
000d4f 2f0e      	MOV  R16,R30
000d50 81ae      	LDD  R26,Y+6
000d51 81bf      	LDD  R27,Y+6+1
000d52 9611      	ADIW R26,1
000d53 83ae      	STD  Y+6,R26
000d54 83bf      	STD  Y+6+1,R27
000d55 9711      	SBIW R26,1
000d56 5de0      	SUBI R30,-LOW(48)
000d57 93ec      	ST   X,R30
000d58 2fe0      	MOV  R30,R16
000d59 e0f0      	LDI  R31,0
                +
000d5a 85a9     +LDD R26 , Y + 9
000d5b 85ba     +LDD R27 , Y + 9 + 1
000d5c 858b     +LDD R24 , Y + 9 + 2
000d5d 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000d5e 940e 0f4f 	CALL __CWD1
000d60 940e 0de9 	CALL __CDF1
000d62 940e 101b 	CALL __SWAPD12
000d64 940e 0e1c 	CALL __SUBF12
                +
000d66 87e9     +STD Y + 9 , R30
000d67 87fa     +STD Y + 9 + 1 , R31
000d68 876b     +STD Y + 9 + 2 , R22
000d69 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000d6a cfcf      	RJMP _0x20A001E
                 _0x20A0020:
                 _0x20C0001:
000d6b 81ae      	LDD  R26,Y+6
000d6c 81bf      	LDD  R27,Y+6+1
000d6d e0e0      	LDI  R30,LOW(0)
000d6e 93ec      	ST   X,R30
                 _0x20C0002:
000d6f 8119      	LDD  R17,Y+1
000d70 8108      	LDD  R16,Y+0
000d71 962d      	ADIW R28,13
000d72 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _recv_buf:
000300           	.BYTE 0x14
                 __seed_G105:
000314           	.BYTE 0x4
                 
                 	.CSEG
                 
                 	.CSEG
                 _delay_ms:
000d73 9610      	adiw r26,0
000d74 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000d75 ec8d     +LDI R24 , LOW ( 0xACD )
000d76 e09a     +LDI R25 , HIGH ( 0xACD )
                +__DELAY_USW_LOOP :
000d77 9701     +SBIW R24 , 1
000d78 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xACD
000d79 95a8      	wdr
000d7a 9711      	sbiw r26,1
000d7b f7c9      	brne __delay_ms0
                 __delay_ms1:
000d7c 9508      	ret
                 
                 __ANEGF1:
000d7d 9730      	SBIW R30,0
000d7e 4060      	SBCI R22,0
000d7f 4070      	SBCI R23,0
000d80 f009      	BREQ __ANEGF10
000d81 5870      	SUBI R23,0x80
                 __ANEGF10:
000d82 9508      	RET
                 
                 __ROUND_REPACK:
000d83 2355      	TST  R21
000d84 f442      	BRPL __REPACK
000d85 3850      	CPI  R21,0x80
000d86 f411      	BRNE __ROUND_REPACK0
000d87 ffe0      	SBRS R30,0
000d88 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000d89 9631      	ADIW R30,1
000d8a 1f69      	ADC  R22,R25
000d8b 1f79      	ADC  R23,R25
000d8c f06b      	BRVS __REPACK1
                 
                 __REPACK:
000d8d e850      	LDI  R21,0x80
000d8e 2757      	EOR  R21,R23
000d8f f411      	BRNE __REPACK0
000d90 935f      	PUSH R21
000d91 c0cf      	RJMP __ZERORES
                 __REPACK0:
000d92 3f5f      	CPI  R21,0xFF
000d93 f031      	BREQ __REPACK1
000d94 0f66      	LSL  R22
000d95 0c00      	LSL  R0
000d96 9557      	ROR  R21
000d97 9567      	ROR  R22
000d98 2f75      	MOV  R23,R21
000d99 9508      	RET
                 __REPACK1:
000d9a 935f      	PUSH R21
000d9b 2000      	TST  R0
000d9c f00a      	BRMI __REPACK2
000d9d c0cf      	RJMP __MAXRES
                 __REPACK2:
000d9e c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000d9f e850      	LDI  R21,0x80
000da0 2e19      	MOV  R1,R25
000da1 2215      	AND  R1,R21
000da2 0f88      	LSL  R24
000da3 1f99      	ROL  R25
000da4 2795      	EOR  R25,R21
000da5 0f55      	LSL  R21
000da6 9587      	ROR  R24
                 
                 __UNPACK1:
000da7 e850      	LDI  R21,0x80
000da8 2e07      	MOV  R0,R23
000da9 2205      	AND  R0,R21
000daa 0f66      	LSL  R22
000dab 1f77      	ROL  R23
000dac 2775      	EOR  R23,R21
000dad 0f55      	LSL  R21
000dae 9567      	ROR  R22
000daf 9508      	RET
                 
                 __CFD1U:
000db0 9468      	SET
000db1 c001      	RJMP __CFD1U0
                 __CFD1:
000db2 94e8      	CLT
                 __CFD1U0:
000db3 935f      	PUSH R21
000db4 dff2      	RCALL __UNPACK1
000db5 3870      	CPI  R23,0x80
000db6 f018      	BRLO __CFD10
000db7 3f7f      	CPI  R23,0xFF
000db8 f408      	BRCC __CFD10
000db9 c0a7      	RJMP __ZERORES
                 __CFD10:
000dba e156      	LDI  R21,22
000dbb 1b57      	SUB  R21,R23
000dbc f4aa      	BRPL __CFD11
000dbd 9551      	NEG  R21
000dbe 3058      	CPI  R21,8
000dbf f40e      	BRTC __CFD19
000dc0 3059      	CPI  R21,9
                 __CFD19:
000dc1 f030      	BRLO __CFD17
000dc2 efef      	SER  R30
000dc3 efff      	SER  R31
000dc4 ef6f      	SER  R22
000dc5 e77f      	LDI  R23,0x7F
000dc6 f977      	BLD  R23,7
000dc7 c01a      	RJMP __CFD15
                 __CFD17:
000dc8 2777      	CLR  R23
000dc9 2355      	TST  R21
000dca f0b9      	BREQ __CFD15
                 __CFD18:
000dcb 0fee      	LSL  R30
000dcc 1fff      	ROL  R31
000dcd 1f66      	ROL  R22
000dce 1f77      	ROL  R23
000dcf 955a      	DEC  R21
000dd0 f7d1      	BRNE __CFD18
000dd1 c010      	RJMP __CFD15
                 __CFD11:
000dd2 2777      	CLR  R23
                 __CFD12:
000dd3 3058      	CPI  R21,8
000dd4 f028      	BRLO __CFD13
000dd5 2fef      	MOV  R30,R31
000dd6 2ff6      	MOV  R31,R22
000dd7 2f67      	MOV  R22,R23
000dd8 5058      	SUBI R21,8
000dd9 cff9      	RJMP __CFD12
                 __CFD13:
000dda 2355      	TST  R21
000ddb f031      	BREQ __CFD15
                 __CFD14:
000ddc 9576      	LSR  R23
000ddd 9567      	ROR  R22
000dde 95f7      	ROR  R31
000ddf 95e7      	ROR  R30
000de0 955a      	DEC  R21
000de1 f7d1      	BRNE __CFD14
                 __CFD15:
000de2 2000      	TST  R0
000de3 f40a      	BRPL __CFD16
000de4 d154      	RCALL __ANEGD1
                 __CFD16:
000de5 915f      	POP  R21
000de6 9508      	RET
                 
                 __CDF1U:
000de7 9468      	SET
000de8 c001      	RJMP __CDF1U0
                 __CDF1:
000de9 94e8      	CLT
                 __CDF1U0:
000dea 9730      	SBIW R30,0
000deb 4060      	SBCI R22,0
000dec 4070      	SBCI R23,0
000ded f0b1      	BREQ __CDF10
000dee 2400      	CLR  R0
000def f026      	BRTS __CDF11
000df0 2377      	TST  R23
000df1 f412      	BRPL __CDF11
000df2 9400      	COM  R0
000df3 d145      	RCALL __ANEGD1
                 __CDF11:
000df4 2e17      	MOV  R1,R23
000df5 e17e      	LDI  R23,30
000df6 2011      	TST  R1
                 __CDF12:
000df7 f032      	BRMI __CDF13
000df8 957a      	DEC  R23
000df9 0fee      	LSL  R30
000dfa 1fff      	ROL  R31
000dfb 1f66      	ROL  R22
000dfc 1c11      	ROL  R1
000dfd cff9      	RJMP __CDF12
                 __CDF13:
000dfe 2fef      	MOV  R30,R31
000dff 2ff6      	MOV  R31,R22
000e00 2d61      	MOV  R22,R1
000e01 935f      	PUSH R21
000e02 df8a      	RCALL __REPACK
000e03 915f      	POP  R21
                 __CDF10:
000e04 9508      	RET
                 
                 __SWAPACC:
000e05 934f      	PUSH R20
000e06 01af      	MOVW R20,R30
000e07 01fd      	MOVW R30,R26
000e08 01da      	MOVW R26,R20
000e09 01ab      	MOVW R20,R22
000e0a 01bc      	MOVW R22,R24
000e0b 01ca      	MOVW R24,R20
000e0c 2d40      	MOV  R20,R0
000e0d 2c01      	MOV  R0,R1
000e0e 2e14      	MOV  R1,R20
000e0f 914f      	POP  R20
000e10 9508      	RET
                 
                 __UADD12:
000e11 0fea      	ADD  R30,R26
000e12 1ffb      	ADC  R31,R27
000e13 1f68      	ADC  R22,R24
000e14 9508      	RET
                 
                 __NEGMAN1:
000e15 95e0      	COM  R30
000e16 95f0      	COM  R31
000e17 9560      	COM  R22
000e18 5fef      	SUBI R30,-1
000e19 4fff      	SBCI R31,-1
000e1a 4f6f      	SBCI R22,-1
000e1b 9508      	RET
                 
                 __SUBF12:
000e1c 935f      	PUSH R21
000e1d df81      	RCALL __UNPACK
000e1e 3890      	CPI  R25,0x80
000e1f f171      	BREQ __ADDF129
000e20 e850      	LDI  R21,0x80
000e21 2615      	EOR  R1,R21
                 
000e22 c004      	RJMP __ADDF120
                 
                 __ADDF12:
000e23 935f      	PUSH R21
000e24 df7a      	RCALL __UNPACK
000e25 3890      	CPI  R25,0x80
000e26 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000e27 3870      	CPI  R23,0x80
000e28 f121      	BREQ __ADDF128
                 __ADDF121:
000e29 2f57      	MOV  R21,R23
000e2a 1b59      	SUB  R21,R25
000e2b f12b      	BRVS __ADDF1211
000e2c f412      	BRPL __ADDF122
000e2d dfd7      	RCALL __SWAPACC
000e2e cffa      	RJMP __ADDF121
                 __ADDF122:
000e2f 3158      	CPI  R21,24
000e30 f018      	BRLO __ADDF123
000e31 27aa      	CLR  R26
000e32 27bb      	CLR  R27
000e33 2788      	CLR  R24
                 __ADDF123:
000e34 3058      	CPI  R21,8
000e35 f028      	BRLO __ADDF124
000e36 2fab      	MOV  R26,R27
000e37 2fb8      	MOV  R27,R24
000e38 2788      	CLR  R24
000e39 5058      	SUBI R21,8
000e3a cff9      	RJMP __ADDF123
                 __ADDF124:
000e3b 2355      	TST  R21
000e3c f029      	BREQ __ADDF126
                 __ADDF125:
000e3d 9586      	LSR  R24
000e3e 95b7      	ROR  R27
000e3f 95a7      	ROR  R26
000e40 955a      	DEC  R21
000e41 f7d9      	BRNE __ADDF125
                 __ADDF126:
000e42 2d50      	MOV  R21,R0
000e43 2551      	EOR  R21,R1
000e44 f072      	BRMI __ADDF127
000e45 dfcb      	RCALL __UADD12
000e46 f438      	BRCC __ADDF129
000e47 9567      	ROR  R22
000e48 95f7      	ROR  R31
000e49 95e7      	ROR  R30
000e4a 9573      	INC  R23
000e4b f413      	BRVC __ADDF129
000e4c c020      	RJMP __MAXRES
                 __ADDF128:
000e4d dfb7      	RCALL __SWAPACC
                 __ADDF129:
000e4e df3e      	RCALL __REPACK
000e4f 915f      	POP  R21
000e50 9508      	RET
                 __ADDF1211:
000e51 f7d8      	BRCC __ADDF128
000e52 cffb      	RJMP __ADDF129
                 __ADDF127:
000e53 1bea      	SUB  R30,R26
000e54 0bfb      	SBC  R31,R27
000e55 0b68      	SBC  R22,R24
000e56 f051      	BREQ __ZERORES
000e57 f410      	BRCC __ADDF1210
000e58 9400      	COM  R0
000e59 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000e5a 2366      	TST  R22
000e5b f392      	BRMI __ADDF129
000e5c 0fee      	LSL  R30
000e5d 1fff      	ROL  R31
000e5e 1f66      	ROL  R22
000e5f 957a      	DEC  R23
000e60 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000e61 27ee      	CLR  R30
000e62 27ff      	CLR  R31
000e63 2766      	CLR  R22
000e64 2777      	CLR  R23
000e65 915f      	POP  R21
000e66 9508      	RET
                 
                 __MINRES:
000e67 efef      	SER  R30
000e68 efff      	SER  R31
000e69 e76f      	LDI  R22,0x7F
000e6a ef7f      	SER  R23
000e6b 915f      	POP  R21
000e6c 9508      	RET
                 
                 __MAXRES:
000e6d efef      	SER  R30
000e6e efff      	SER  R31
000e6f e76f      	LDI  R22,0x7F
000e70 e77f      	LDI  R23,0x7F
000e71 915f      	POP  R21
000e72 9508      	RET
                 
                 __MULF12:
000e73 935f      	PUSH R21
000e74 df2a      	RCALL __UNPACK
000e75 3870      	CPI  R23,0x80
000e76 f351      	BREQ __ZERORES
000e77 3890      	CPI  R25,0x80
000e78 f341      	BREQ __ZERORES
000e79 2401      	EOR  R0,R1
000e7a 9408      	SEC
000e7b 1f79      	ADC  R23,R25
000e7c f423      	BRVC __MULF124
000e7d f31c      	BRLT __ZERORES
                 __MULF125:
000e7e 2000      	TST  R0
000e7f f33a      	BRMI __MINRES
000e80 cfec      	RJMP __MAXRES
                 __MULF124:
000e81 920f      	PUSH R0
000e82 931f      	PUSH R17
000e83 932f      	PUSH R18
000e84 933f      	PUSH R19
000e85 934f      	PUSH R20
000e86 2711      	CLR  R17
000e87 2722      	CLR  R18
000e88 2799      	CLR  R25
000e89 9f68      	MUL  R22,R24
000e8a 01a0      	MOVW R20,R0
000e8b 9f8f      	MUL  R24,R31
000e8c 2d30      	MOV  R19,R0
000e8d 0d41      	ADD  R20,R1
000e8e 1f59      	ADC  R21,R25
000e8f 9f6b      	MUL  R22,R27
000e90 0d30      	ADD  R19,R0
000e91 1d41      	ADC  R20,R1
000e92 1f59      	ADC  R21,R25
000e93 9f8e      	MUL  R24,R30
000e94 d027      	RCALL __MULF126
000e95 9fbf      	MUL  R27,R31
000e96 d025      	RCALL __MULF126
000e97 9f6a      	MUL  R22,R26
000e98 d023      	RCALL __MULF126
000e99 9fbe      	MUL  R27,R30
000e9a d01d      	RCALL __MULF127
000e9b 9faf      	MUL  R26,R31
000e9c d01b      	RCALL __MULF127
000e9d 9fae      	MUL  R26,R30
000e9e 0d11      	ADD  R17,R1
000e9f 1f29      	ADC  R18,R25
000ea0 1f39      	ADC  R19,R25
000ea1 1f49      	ADC  R20,R25
000ea2 1f59      	ADC  R21,R25
000ea3 2fe3      	MOV  R30,R19
000ea4 2ff4      	MOV  R31,R20
000ea5 2f65      	MOV  R22,R21
000ea6 2f52      	MOV  R21,R18
000ea7 914f      	POP  R20
000ea8 913f      	POP  R19
000ea9 912f      	POP  R18
000eaa 911f      	POP  R17
000eab 900f      	POP  R0
000eac 2366      	TST  R22
000ead f02a      	BRMI __MULF122
000eae 0f55      	LSL  R21
000eaf 1fee      	ROL  R30
000eb0 1fff      	ROL  R31
000eb1 1f66      	ROL  R22
000eb2 c002      	RJMP __MULF123
                 __MULF122:
000eb3 9573      	INC  R23
000eb4 f24b      	BRVS __MULF125
                 __MULF123:
000eb5 decd      	RCALL __ROUND_REPACK
000eb6 915f      	POP  R21
000eb7 9508      	RET
                 
                 __MULF127:
000eb8 0d10      	ADD  R17,R0
000eb9 1d21      	ADC  R18,R1
000eba 1f39      	ADC  R19,R25
000ebb c002      	RJMP __MULF128
                 __MULF126:
000ebc 0d20      	ADD  R18,R0
000ebd 1d31      	ADC  R19,R1
                 __MULF128:
000ebe 1f49      	ADC  R20,R25
000ebf 1f59      	ADC  R21,R25
000ec0 9508      	RET
                 
                 __DIVF21:
000ec1 935f      	PUSH R21
000ec2 dedc      	RCALL __UNPACK
000ec3 3870      	CPI  R23,0x80
000ec4 f421      	BRNE __DIVF210
000ec5 2011      	TST  R1
                 __DIVF211:
000ec6 f40a      	BRPL __DIVF219
000ec7 cf9f      	RJMP __MINRES
                 __DIVF219:
000ec8 cfa4      	RJMP __MAXRES
                 __DIVF210:
000ec9 3890      	CPI  R25,0x80
000eca f409      	BRNE __DIVF218
                 __DIVF217:
000ecb cf95      	RJMP __ZERORES
                 __DIVF218:
000ecc 2401      	EOR  R0,R1
000ecd 9408      	SEC
000ece 0b97      	SBC  R25,R23
000ecf f41b      	BRVC __DIVF216
000ed0 f3d4      	BRLT __DIVF217
000ed1 2000      	TST  R0
000ed2 cff3      	RJMP __DIVF211
                 __DIVF216:
000ed3 2f79      	MOV  R23,R25
000ed4 931f      	PUSH R17
000ed5 932f      	PUSH R18
000ed6 933f      	PUSH R19
000ed7 934f      	PUSH R20
000ed8 2411      	CLR  R1
000ed9 2711      	CLR  R17
000eda 2722      	CLR  R18
000edb 2733      	CLR  R19
000edc 2744      	CLR  R20
000edd 2755      	CLR  R21
000ede e290      	LDI  R25,32
                 __DIVF212:
000edf 17ae      	CP   R26,R30
000ee0 07bf      	CPC  R27,R31
000ee1 0786      	CPC  R24,R22
000ee2 0741      	CPC  R20,R17
000ee3 f030      	BRLO __DIVF213
000ee4 1bae      	SUB  R26,R30
000ee5 0bbf      	SBC  R27,R31
000ee6 0b86      	SBC  R24,R22
000ee7 0b41      	SBC  R20,R17
000ee8 9408      	SEC
000ee9 c001      	RJMP __DIVF214
                 __DIVF213:
000eea 9488      	CLC
                 __DIVF214:
000eeb 1f55      	ROL  R21
000eec 1f22      	ROL  R18
000eed 1f33      	ROL  R19
000eee 1c11      	ROL  R1
000eef 1faa      	ROL  R26
000ef0 1fbb      	ROL  R27
000ef1 1f88      	ROL  R24
000ef2 1f44      	ROL  R20
000ef3 959a      	DEC  R25
000ef4 f751      	BRNE __DIVF212
000ef5 01f9      	MOVW R30,R18
000ef6 2d61      	MOV  R22,R1
000ef7 914f      	POP  R20
000ef8 913f      	POP  R19
000ef9 912f      	POP  R18
000efa 911f      	POP  R17
000efb 2366      	TST  R22
000efc f032      	BRMI __DIVF215
000efd 0f55      	LSL  R21
000efe 1fee      	ROL  R30
000eff 1fff      	ROL  R31
000f00 1f66      	ROL  R22
000f01 957a      	DEC  R23
000f02 f243      	BRVS __DIVF217
                 __DIVF215:
000f03 de7f      	RCALL __ROUND_REPACK
000f04 915f      	POP  R21
000f05 9508      	RET
                 
                 __CMPF12:
000f06 2399      	TST  R25
000f07 f09a      	BRMI __CMPF120
000f08 2377      	TST  R23
000f09 f042      	BRMI __CMPF121
000f0a 1797      	CP   R25,R23
000f0b f048      	BRLO __CMPF122
000f0c f429      	BRNE __CMPF121
000f0d 17ae      	CP   R26,R30
000f0e 07bf      	CPC  R27,R31
000f0f 0786      	CPC  R24,R22
000f10 f020      	BRLO __CMPF122
000f11 f031      	BREQ __CMPF123
                 __CMPF121:
000f12 9498      	CLZ
000f13 9488      	CLC
000f14 9508      	RET
                 __CMPF122:
000f15 9498      	CLZ
000f16 9408      	SEC
000f17 9508      	RET
                 __CMPF123:
000f18 9418      	SEZ
000f19 9488      	CLC
000f1a 9508      	RET
                 __CMPF120:
000f1b 2377      	TST  R23
000f1c f7c2      	BRPL __CMPF122
000f1d 1797      	CP   R25,R23
000f1e f398      	BRLO __CMPF121
000f1f f7a9      	BRNE __CMPF122
000f20 17ea      	CP   R30,R26
000f21 07fb      	CPC  R31,R27
000f22 0768      	CPC  R22,R24
000f23 f388      	BRLO __CMPF122
000f24 f399      	BREQ __CMPF123
000f25 cfec      	RJMP __CMPF121
                 
                 __GTF12:
000f26 dfdf      	RCALL __CMPF12
000f27 e0e1      	LDI  R30,1
000f28 f009      	BREQ __GTF120
000f29 f408      	BRCC __GTF121
                 __GTF120:
000f2a 27ee      	CLR  R30
                 __GTF121:
000f2b 9508      	RET
                 
                 __ADDW2R15:
000f2c 2400      	CLR  R0
000f2d 0daf      	ADD  R26,R15
000f2e 1db0      	ADC  R27,R0
000f2f 9508      	RET
                 
                 __ADDD12:
000f30 0fea      	ADD  R30,R26
000f31 1ffb      	ADC  R31,R27
000f32 1f68      	ADC  R22,R24
000f33 1f79      	ADC  R23,R25
000f34 9508      	RET
                 
                 __ANEGW1:
000f35 95f1      	NEG  R31
000f36 95e1      	NEG  R30
000f37 40f0      	SBCI R31,0
000f38 9508      	RET
                 
                 __ANEGD1:
000f39 95f0      	COM  R31
000f3a 9560      	COM  R22
000f3b 9570      	COM  R23
000f3c 95e1      	NEG  R30
000f3d 4fff      	SBCI R31,-1
000f3e 4f6f      	SBCI R22,-1
000f3f 4f7f      	SBCI R23,-1
000f40 9508      	RET
                 
                 __LSLB12:
000f41 23ee      	TST  R30
000f42 2e0e      	MOV  R0,R30
000f43 2fea      	MOV  R30,R26
000f44 f019      	BREQ __LSLB12R
                 __LSLB12L:
000f45 0fee      	LSL  R30
000f46 940a      	DEC  R0
000f47 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
000f48 9508      	RET
                 
                 __CBD1:
000f49 2ffe      	MOV  R31,R30
000f4a 0fff      	ADD  R31,R31
000f4b 0bff      	SBC  R31,R31
000f4c 2f6f      	MOV  R22,R31
000f4d 2f7f      	MOV  R23,R31
000f4e 9508      	RET
                 
                 __CWD1:
000f4f 2f6f      	MOV  R22,R31
000f50 0f66      	ADD  R22,R22
000f51 0b66      	SBC  R22,R22
000f52 2f76      	MOV  R23,R22
000f53 9508      	RET
                 
                 __CWD2:
000f54 2f8b      	MOV  R24,R27
000f55 0f88      	ADD  R24,R24
000f56 0b88      	SBC  R24,R24
000f57 2f98      	MOV  R25,R24
000f58 9508      	RET
                 
                 __MULD12U:
000f59 9f7a      	MUL  R23,R26
000f5a 2d70      	MOV  R23,R0
000f5b 9f6b      	MUL  R22,R27
000f5c 0d70      	ADD  R23,R0
000f5d 9ff8      	MUL  R31,R24
000f5e 0d70      	ADD  R23,R0
000f5f 9fe9      	MUL  R30,R25
000f60 0d70      	ADD  R23,R0
000f61 9f6a      	MUL  R22,R26
000f62 2d60      	MOV  R22,R0
000f63 0d71      	ADD  R23,R1
000f64 9ffb      	MUL  R31,R27
000f65 0d60      	ADD  R22,R0
000f66 1d71      	ADC  R23,R1
000f67 9fe8      	MUL  R30,R24
000f68 0d60      	ADD  R22,R0
000f69 1d71      	ADC  R23,R1
000f6a 2788      	CLR  R24
000f6b 9ffa      	MUL  R31,R26
000f6c 2df0      	MOV  R31,R0
000f6d 0d61      	ADD  R22,R1
000f6e 1f78      	ADC  R23,R24
000f6f 9feb      	MUL  R30,R27
000f70 0df0      	ADD  R31,R0
000f71 1d61      	ADC  R22,R1
000f72 1f78      	ADC  R23,R24
000f73 9fea      	MUL  R30,R26
000f74 2de0      	MOV  R30,R0
000f75 0df1      	ADD  R31,R1
000f76 1f68      	ADC  R22,R24
000f77 1f78      	ADC  R23,R24
000f78 9508      	RET
                 
                 __DIVB21U:
000f79 2400      	CLR  R0
000f7a e098      	LDI  R25,8
                 __DIVB21U1:
000f7b 0faa      	LSL  R26
000f7c 1c00      	ROL  R0
000f7d 1a0e      	SUB  R0,R30
000f7e f410      	BRCC __DIVB21U2
000f7f 0e0e      	ADD  R0,R30
000f80 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
000f81 60a1      	SBR  R26,1
                 __DIVB21U3:
000f82 959a      	DEC  R25
000f83 f7b9      	BRNE __DIVB21U1
000f84 2fea      	MOV  R30,R26
000f85 2da0      	MOV  R26,R0
000f86 9508      	RET
                 
                 __DIVB21:
000f87 d05a      	RCALL __CHKSIGNB
000f88 dff0      	RCALL __DIVB21U
000f89 f40e      	BRTC __DIVB211
000f8a 95e1      	NEG  R30
                 __DIVB211:
000f8b 9508      	RET
                 
                 __DIVW21U:
000f8c 2400      	CLR  R0
000f8d 2411      	CLR  R1
000f8e e190      	LDI  R25,16
                 __DIVW21U1:
000f8f 0faa      	LSL  R26
000f90 1fbb      	ROL  R27
000f91 1c00      	ROL  R0
000f92 1c11      	ROL  R1
000f93 1a0e      	SUB  R0,R30
000f94 0a1f      	SBC  R1,R31
000f95 f418      	BRCC __DIVW21U2
000f96 0e0e      	ADD  R0,R30
000f97 1e1f      	ADC  R1,R31
000f98 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000f99 60a1      	SBR  R26,1
                 __DIVW21U3:
000f9a 959a      	DEC  R25
000f9b f799      	BRNE __DIVW21U1
000f9c 01fd      	MOVW R30,R26
000f9d 01d0      	MOVW R26,R0
000f9e 9508      	RET
                 
                 __DIVD21U:
000f9f 933f      	PUSH R19
000fa0 934f      	PUSH R20
000fa1 935f      	PUSH R21
000fa2 2400      	CLR  R0
000fa3 2411      	CLR  R1
000fa4 2744      	CLR  R20
000fa5 2755      	CLR  R21
000fa6 e230      	LDI  R19,32
                 __DIVD21U1:
000fa7 0faa      	LSL  R26
000fa8 1fbb      	ROL  R27
000fa9 1f88      	ROL  R24
000faa 1f99      	ROL  R25
000fab 1c00      	ROL  R0
000fac 1c11      	ROL  R1
000fad 1f44      	ROL  R20
000fae 1f55      	ROL  R21
000faf 1a0e      	SUB  R0,R30
000fb0 0a1f      	SBC  R1,R31
000fb1 0b46      	SBC  R20,R22
000fb2 0b57      	SBC  R21,R23
000fb3 f428      	BRCC __DIVD21U2
000fb4 0e0e      	ADD  R0,R30
000fb5 1e1f      	ADC  R1,R31
000fb6 1f46      	ADC  R20,R22
000fb7 1f57      	ADC  R21,R23
000fb8 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000fb9 60a1      	SBR  R26,1
                 __DIVD21U3:
000fba 953a      	DEC  R19
000fbb f759      	BRNE __DIVD21U1
000fbc 01fd      	MOVW R30,R26
000fbd 01bc      	MOVW R22,R24
000fbe 01d0      	MOVW R26,R0
000fbf 01ca      	MOVW R24,R20
000fc0 915f      	POP  R21
000fc1 914f      	POP  R20
000fc2 913f      	POP  R19
000fc3 9508      	RET
                 
                 __MODB21:
000fc4 94e8      	CLT
000fc5 ffa7      	SBRS R26,7
000fc6 c002      	RJMP __MODB211
000fc7 95a1      	NEG  R26
000fc8 9468      	SET
                 __MODB211:
000fc9 fde7      	SBRC R30,7
000fca 95e1      	NEG  R30
000fcb dfad      	RCALL __DIVB21U
000fcc 2fea      	MOV  R30,R26
000fcd f40e      	BRTC __MODB212
000fce 95e1      	NEG  R30
                 __MODB212:
000fcf 9508      	RET
                 
                 __MODW21:
000fd0 94e8      	CLT
000fd1 ffb7      	SBRS R27,7
000fd2 c004      	RJMP __MODW211
000fd3 95a0      	COM  R26
000fd4 95b0      	COM  R27
000fd5 9611      	ADIW R26,1
000fd6 9468      	SET
                 __MODW211:
000fd7 fdf7      	SBRC R31,7
000fd8 df5c      	RCALL __ANEGW1
000fd9 dfb2      	RCALL __DIVW21U
000fda 01fd      	MOVW R30,R26
000fdb f40e      	BRTC __MODW212
000fdc df58      	RCALL __ANEGW1
                 __MODW212:
000fdd 9508      	RET
                 
                 __MODD21U:
000fde dfc0      	RCALL __DIVD21U
000fdf 01fd      	MOVW R30,R26
000fe0 01bc      	MOVW R22,R24
000fe1 9508      	RET
                 
                 __CHKSIGNB:
000fe2 94e8      	CLT
000fe3 ffe7      	SBRS R30,7
000fe4 c002      	RJMP __CHKSB1
000fe5 95e1      	NEG  R30
000fe6 9468      	SET
                 __CHKSB1:
000fe7 ffa7      	SBRS R26,7
000fe8 c004      	RJMP __CHKSB2
000fe9 95a1      	NEG  R26
000fea f800      	BLD  R0,0
000feb 9403      	INC  R0
000fec fa00      	BST  R0,0
                 __CHKSB2:
000fed 9508      	RET
                 
                 __GETW1P:
000fee 91ed      	LD   R30,X+
000fef 91fc      	LD   R31,X
000ff0 9711      	SBIW R26,1
000ff1 9508      	RET
                 
                 __GETD1P:
000ff2 91ed      	LD   R30,X+
000ff3 91fd      	LD   R31,X+
000ff4 916d      	LD   R22,X+
000ff5 917c      	LD   R23,X
000ff6 9713      	SBIW R26,3
000ff7 9508      	RET
                 
                 __PUTDP1:
000ff8 93ed      	ST   X+,R30
000ff9 93fd      	ST   X+,R31
000ffa 936d      	ST   X+,R22
000ffb 937c      	ST   X,R23
000ffc 9508      	RET
                 
                 __GETD1S0:
000ffd 81e8      	LD   R30,Y
000ffe 81f9      	LDD  R31,Y+1
000fff 816a      	LDD  R22,Y+2
001000 817b      	LDD  R23,Y+3
001001 9508      	RET
                 
                 __GETD2S0:
001002 81a8      	LD   R26,Y
001003 81b9      	LDD  R27,Y+1
001004 818a      	LDD  R24,Y+2
001005 819b      	LDD  R25,Y+3
001006 9508      	RET
                 
                 __PUTD1S0:
001007 83e8      	ST   Y,R30
001008 83f9      	STD  Y+1,R31
001009 836a      	STD  Y+2,R22
00100a 837b      	STD  Y+3,R23
00100b 9508      	RET
                 
                 __PUTPARD1:
00100c 937a      	ST   -Y,R23
00100d 936a      	ST   -Y,R22
00100e 93fa      	ST   -Y,R31
00100f 93ea      	ST   -Y,R30
001010 9508      	RET
                 
                 __PUTPARD2:
001011 939a      	ST   -Y,R25
001012 938a      	ST   -Y,R24
001013 93ba      	ST   -Y,R27
001014 93aa      	ST   -Y,R26
001015 9508      	RET
                 
                 __CDF2U:
001016 9468      	SET
001017 c001      	RJMP __CDF2U0
                 __CDF2:
001018 94e8      	CLT
                 __CDF2U0:
001019 d001      	RCALL __SWAPD12
00101a ddcf      	RCALL __CDF1U0
                 
                 __SWAPD12:
00101b 2e18      	MOV  R1,R24
00101c 2f86      	MOV  R24,R22
00101d 2d61      	MOV  R22,R1
00101e 2e19      	MOV  R1,R25
00101f 2f97      	MOV  R25,R23
001020 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
001021 2e1b      	MOV  R1,R27
001022 2fbf      	MOV  R27,R31
001023 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
001024 2e1a      	MOV  R1,R26
001025 2fae      	MOV  R26,R30
001026 2de1      	MOV  R30,R1
001027 9508      	RET
                 
                 __EEPROMRDW:
001028 9611      	ADIW R26,1
001029 d002      	RCALL __EEPROMRDB
00102a 2ffe      	MOV  R31,R30
00102b 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
00102c 99f9      	SBIC EECR,EEWE
00102d cffe      	RJMP __EEPROMRDB
00102e 93ff      	PUSH R31
00102f b7ff      	IN   R31,SREG
001030 94f8      	CLI
001031 bda1      	OUT  EEARL,R26
001032 bdb2      	OUT  EEARH,R27
001033 9af8      	SBI  EECR,EERE
001034 b5e0      	IN   R30,EEDR
001035 bfff      	OUT  SREG,R31
001036 91ff      	POP  R31
001037 9508      	RET
                 
                 __EEPROMWRW:
001038 d007      	RCALL __EEPROMWRB
001039 9611      	ADIW R26,1
00103a 93ef      	PUSH R30
00103b 2fef      	MOV  R30,R31
00103c d003      	RCALL __EEPROMWRB
00103d 91ef      	POP  R30
00103e 9711      	SBIW R26,1
00103f 9508      	RET
                 
                 __EEPROMWRB:
001040 9bf9      	SBIS EECR,EEWE
001041 c002      	RJMP __EEPROMWRB1
001042 95a8      	WDR
001043 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
001044 b79f      	IN   R25,SREG
001045 94f8      	CLI
001046 bda1      	OUT  EEARL,R26
001047 bdb2      	OUT  EEARH,R27
001048 9af8      	SBI  EECR,EERE
001049 b580      	IN   R24,EEDR
00104a 17e8      	CP   R30,R24
00104b f019      	BREQ __EEPROMWRB0
00104c bde0      	OUT  EEDR,R30
00104d 9afa      	SBI  EECR,EEMWE
00104e 9af9      	SBI  EECR,EEWE
                 __EEPROMWRB0:
00104f bf9f      	OUT  SREG,R25
001050 9508      	RET
                 
                 __CPD10:
001051 9730      	SBIW R30,0
001052 4060      	SBCI R22,0
001053 4070      	SBCI R23,0
001054 9508      	RET
                 
                 __CPW02:
001055 2400      	CLR  R0
001056 160a      	CP   R0,R26
001057 060b      	CPC  R0,R27
001058 9508      	RET
                 
                 __SAVELOCR6:
001059 935a      	ST   -Y,R21
                 __SAVELOCR5:
00105a 934a      	ST   -Y,R20
                 __SAVELOCR4:
00105b 933a      	ST   -Y,R19
                 __SAVELOCR3:
00105c 932a      	ST   -Y,R18
                 __SAVELOCR2:
00105d 931a      	ST   -Y,R17
00105e 930a      	ST   -Y,R16
00105f 9508      	RET
                 
                 __LOADLOCR6:
001060 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
001061 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
001062 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
001063 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
001064 8119      	LDD  R17,Y+1
001065 8108      	LD   R16,Y
001066 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
001067 0fac      	ADD  R26,R28
001068 1fbd      	ADC  R27,R29
                 __INITLOC0:
001069 9005      	LPM  R0,Z+
00106a 920d      	ST   X+,R0
00106b 958a      	DEC  R24
00106c f7e1      	BRNE __INITLOC0
00106d 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega328P register use summary:
r0 : 124 r1 :  46 r2 :   0 r3 :   0 r4 :   3 r5 :   4 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:  22 
r16:  89 r17:  88 r18:  64 r19:  75 r20:  72 r21: 105 r22: 169 r23: 154 
r24: 134 r25:  92 r26: 491 r27: 248 r28: 101 r29:   2 r30: 897 r31: 426 
x  : 123 y  : 952 z  :  55 
Registers used: 24 out of 35 (68.6%)

ATmega328P instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  44 add   :  38 
adiw  :  96 and   :   5 andi  :  25 asr   :   0 bclr  :   0 bld   :  12 
brbc  :   0 brbs  :   0 brcc  :  10 brcs  :   5 break :   0 breq  :  73 
brge  :   7 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  37 
brlt  :   6 brmi  :  11 brne  : 101 brpl  :   9 brsh  :  12 brtc  :   5 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 call  : 199 
cbi   :  10 cbr   :   2 clc   :   3 clh   :   0 cli   :   3 cln   :   0 
clr   :  73 cls   :   0 clt   :  11 clv   :   0 clz   :   2 com   :  10 
cp    :  25 cpc   :  24 cpi   : 145 cpse  :   0 dec   :  22 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :  17 ijmp  :   0 
in    :  29 inc   :   3 jmp   :  28 ld    : 124 ldd   : 507 ldi   : 415 
lds   :  11 lpm   :  17 lsl   :  16 lsr   :   3 mov   : 146 movw  : 129 
mul   :  22 muls  :   0 mulsu :   0 neg   :  11 nop   :   0 or    :   6 
ori   :  14 out   :  21 pop   :  40 push  :  40 rcall :  58 ret   :  77 
reti  :   1 rjmp  : 218 rol   :  35 ror   :  15 sbc   :  15 sbci  :  51 
sbi   :  17 sbic  :   3 sbis  :   4 sbiw  :  64 sbr   :   5 sbrc  :   7 
sbrs  :  23 sec   :   5 seh   :   0 sei   :   1 sen   :   0 ser   :   8 
ses   :   0 set   :  10 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    : 245 std   : 239 sts   :  13 sub   :  10 subi  :  93 swap  :   2 
tst   :  27 wdr   :   3 
Instructions used: 83 out of 116 (71.6%)

ATmega328P memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0020dc   8284    128   8412   32768  25.7%
[.dseg] 0x000100 0x000318      0     24     24    2048   1.2%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 6 warnings
