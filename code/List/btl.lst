
AVRASM ver. 2.1.30  D:\OneDrive - student.hust.edu.vn\HUST\Learn in Hust\20192 Ky thuat ghep noi may tinh\codevisionavr_atmega328p\btl\List\btl.asm Sun Jun 14 18:41:23 2020

D:\OneDrive - student.hust.edu.vn\HUST\Learn in Hust\20192 Ky thuat ghep noi may tinh\codevisionavr_atmega328p\btl\List\btl.asm(1090): warning: Register r5 already defined by the .DEF directive
D:\OneDrive - student.hust.edu.vn\HUST\Learn in Hust\20192 Ky thuat ghep noi may tinh\codevisionavr_atmega328p\btl\List\btl.asm(1091): warning: Register r4 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Release
                 ;Chip type              : ATmega328P
                 ;Program type           : Application
                 ;Clock frequency        : 11.059200 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Speed
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : long, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega328P
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x08FF
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _recv_buf_ind=R5
                 	.DEF _recv_done=R4
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 006b 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 010d 	JMP  _USART_receive_isr
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000034 0000      	.DB  0x0,0x0
                 
                 _0x2F:
000035 0000
000036 0000
000037 0000
000038 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000039 0000
00003a 0000
00003b 0000
00003c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00003d 0000
00003e 0000
00003f 0000
000040 ff00      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xFF
000041 ffff
000042 ffff
D:\OneDrive - student.hust.edu.vn\HUST\Learn in Hust\20192 Ky thuat ghep noi may tinh\codevisionavr_atmega328p\btl\List\btl.asm(1138): warning: .cseg .db misalignment - padding zero byte
000043 00ff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x0:
000044 6425
000045 3000
000046 2520
000047 2064      	.DB  0x25,0x64,0x0,0x30,0x20,0x25,0x64,0x20
000048 6425
000049 2520
00004a 0064
00004b 312d      	.DB  0x25,0x64,0x20,0x25,0x64,0x0,0x2D,0x31
00004c 2520
00004d 0064
00004e 3a54
00004f 6425      	.DB  0x20,0x25,0x64,0x0,0x54,0x3A,0x25,0x64
000050 436f
000051 202c
000052 3a48
000053 6425      	.DB  0x6F,0x43,0x2C,0x20,0x48,0x3A,0x25,0x64
000054 2525
000055 4c00
000056 253a
000057 2e34      	.DB  0x25,0x25,0x0,0x4C,0x3A,0x25,0x34,0x2E
000058 6632
000059 2525
D:\OneDrive - student.hust.edu.vn\HUST\Learn in Hust\20192 Ky thuat ghep noi may tinh\codevisionavr_atmega328p\btl\List\btl.asm(1145): warning: .cseg .db misalignment - padding zero byte
00005a 0000      	.DB  0x32,0x66,0x25,0x25,0x0
                 _0x2000000:
00005b 4e2d
00005c 4e41
D:\OneDrive - student.hust.edu.vn\HUST\Learn in Hust\20192 Ky thuat ghep noi may tinh\codevisionavr_atmega328p\btl\List\btl.asm(1147): warning: .cseg .db misalignment - padding zero byte
00005d 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x20A0060:
D:\OneDrive - student.hust.edu.vn\HUST\Learn in Hust\20192 Ky thuat ghep noi may tinh\codevisionavr_atmega328p\btl\List\btl.asm(1149): warning: .cseg .db misalignment - padding zero byte
00005e 0001      	.DB  0x1
                 _0x20A0000:
00005f 4e2d
000060 4e41
000061 4900
000062 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\OneDrive - student.hust.edu.vn\HUST\Learn in Hust\20192 Ky thuat ghep noi may tinh\codevisionavr_atmega328p\btl\List\btl.asm(1152): warning: .cseg .db misalignment - padding zero byte
000063 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000064 0002      	.DW  0x02
000065 0004      	.DW  0x04
000066 0068      	.DW  __REG_VARS*2
                 
000067 0001      	.DW  0x01
000068 0314      	.DW  __seed_G105
000069 00bc      	.DW  _0x20A0060*2
                 
                 _0xFFFFFFFF:
00006a 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00006b 94f8      	CLI
00006c 27ee      	CLR  R30
00006d bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00006e e0f1      	LDI  R31,1
00006f bff5      	OUT  MCUCR,R31
000070 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000071 e1f8      	LDI  R31,0x18
000072 95a8      	WDR
000073 b7a4      	IN   R26,MCUSR
000074 7fa7      	CBR  R26,8
000075 bfa4      	OUT  MCUSR,R26
000076 93f0 0060 	STS  WDTCSR,R31
000078 93e0 0060 	STS  WDTCSR,R30
                 
                 ;CLEAR R2-R14
00007a e08d      	LDI  R24,(14-2)+1
00007b e0a2      	LDI  R26,2
00007c 27bb      	CLR  R27
                 __CLEAR_REG:
00007d 93ed      	ST   X+,R30
00007e 958a      	DEC  R24
00007f f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000080 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000081 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000082 e0a0      	LDI  R26,LOW(__SRAM_START)
000083 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000084 93ed      	ST   X+,R30
000085 9701      	SBIW R24,1
000086 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000087 ece8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000088 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000089 9185      	LPM  R24,Z+
00008a 9195      	LPM  R25,Z+
00008b 9700      	SBIW R24,0
00008c f061      	BREQ __GLOBAL_INI_END
00008d 91a5      	LPM  R26,Z+
00008e 91b5      	LPM  R27,Z+
00008f 9005      	LPM  R0,Z+
000090 9015      	LPM  R1,Z+
000091 01bf      	MOVW R22,R30
000092 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000093 9005      	LPM  R0,Z+
000094 920d      	ST   X+,R0
000095 9701      	SBIW R24,1
000096 f7e1      	BRNE __GLOBAL_INI_LOOP
000097 01fb      	MOVW R30,R22
000098 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
000099 e0e0      	LDI  R30,__GPIOR0_INIT
00009a bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00009b efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00009c bfed      	OUT  SPL,R30
00009d e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00009e bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00009f e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000a0 e0d3      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000a1 940c 026f 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x300
                 
                 	.CSEG
                 ;#include <mega328p.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <eeprom.h>
                 ;#include <string.h>
                 ;#define BAUD 9600
                 ;#define SYS_CLOCK 11059200
                 ;#define DHT11_PORT PORTB
                 ;#define DHT11_DDR DDRB
                 ;#define DHT11_PIN PINB
                 ;#define DHT11_INPUTPIN 1
                 ;#define DHT11_TIMEOUT 200
                 ;#define V_REF 5.0
                 ;#define LCD_PORT PORTD
                 ;#define LCD_DPIN DDRD
                 ;#define LCD_RSPIN 2
                 ;#define LCD_ENPIN 3
                 ;
                 ;char recv_buf[20];
                 ;char recv_buf_ind = 0;
                 ;char recv_done = 0;
                 ;
                 ;void ADC_init(){
                 ; 0000 0017 void ADC_init(){
                 
                 	.CSEG
                 _ADC_init:
                 ; .FSTART _ADC_init
                 ; 0000 0018     // select Vref = AVcc
                 ; 0000 0019     ADMUX |= (1<<REFS0);
0000a3 91e0 007c 	LDS  R30,124
0000a5 64e0      	ORI  R30,0x40
0000a6 93e0 007c 	STS  124,R30
                 ; 0000 001A //    // Left adjust ADC result to allow easy 8 bit reading
                 ; 0000 001B //    ADMUX |= (1 << ADLAR);
                 ; 0000 001C     // set prescaler to 64 and enable ADC
                 ; 0000 001D     ADCSRA |= (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0)| (1 << ADEN);
0000a8 91e0 007a 	LDS  R30,122
0000aa 68e7      	ORI  R30,LOW(0x87)
0000ab 93e0 007a 	STS  122,R30
                 ; 0000 001E }
0000ad 9508      	RET
                 ; .FEND
                 ;
                 ;unsigned int ADC_read(unsigned char ADCchannel){
                 ; 0000 0020 unsigned int ADC_read(unsigned char ADCchannel){
                 _ADC_read:
                 ; .FSTART _ADC_read
                 ; 0000 0021     //select ADC channel with safety mask
                 ; 0000 0022     ADMUX = (ADMUX & 0xF0) | (ADCchannel & 0x0F);
0000ae 93aa      	ST   -Y,R26
                 ;	ADCchannel -> Y+0
0000af 91e0 007c 	LDS  R30,124
0000b1 7fe0      	ANDI R30,LOW(0xF0)
0000b2 2fae      	MOV  R26,R30
0000b3 81e8      	LD   R30,Y
0000b4 70ef      	ANDI R30,LOW(0xF)
0000b5 2bea      	OR   R30,R26
0000b6 93e0 007c 	STS  124,R30
                 ; 0000 0023     //single conversion mode
                 ; 0000 0024     ADCSRA |= (1<<ADSC);
0000b8 91e0 007a 	LDS  R30,122
0000ba 64e0      	ORI  R30,0x40
0000bb 93e0 007a 	STS  122,R30
                 ; 0000 0025     // wait until ADC conversion is complete
                 ; 0000 0026     while( ADCSRA & (1<<ADSC));
                 _0x3:
0000bd 91e0 007a 	LDS  R30,122
0000bf 74e0      	ANDI R30,LOW(0x40)
0000c0 f7e1      	BRNE _0x3
                 ; 0000 0027     return ADCL + (ADCH & 0x03) * 256;
0000c1 91e0 0078 	LDS  R30,120
0000c3 e0f0      	LDI  R31,0
0000c4 01df      	MOVW R26,R30
0000c5 91e0 0079 	LDS  R30,121
0000c7 e0f0      	LDI  R31,0
0000c8 70e3      	ANDI R30,LOW(0x3)
0000c9 70f0      	ANDI R31,HIGH(0x3)
0000ca 2ffe      	MOV  R31,R30
0000cb e0e0      	LDI  R30,0
0000cc 0fea      	ADD  R30,R26
0000cd 1ffb      	ADC  R31,R27
0000ce c08d      	RJMP _0x20C000C
                 ; 0000 0028 }
                 ; .FEND
                 ;
                 ;void USART_init(unsigned int ubrr){
                 ; 0000 002A void USART_init(unsigned int ubrr){
                 _USART_init:
                 ; .FSTART _USART_init
                 ; 0000 002B 	// set baud rate
                 ; 0000 002C 	UBRR0H = (unsigned char)(ubrr >> 8);
0000cf 93ba      	ST   -Y,R27
0000d0 93aa      	ST   -Y,R26
                 ;	ubrr -> Y+0
0000d1 81e9      	LDD  R30,Y+1
0000d2 93e0 00c5 	STS  197,R30
                 ; 0000 002D 	UBRR0L = (unsigned char)ubrr;
0000d4 81e8      	LD   R30,Y
0000d5 93e0 00c4 	STS  196,R30
                 ; 0000 002E 	// enable receiver and transmitter, receive interrupt
                 ; 0000 002F 	UCSR0B = 0x98;
0000d7 e9e8      	LDI  R30,LOW(152)
0000d8 93e0 00c1 	STS  193,R30
                 ; 0000 0030 	// set frame format: 8 bit data, 1 stop bit
                 ; 0000 0031 	UCSR0C = 0x06;
0000da e0e6      	LDI  R30,LOW(6)
0000db 93e0 00c2 	STS  194,R30
                 ; 0000 0032 }
0000dd 9622      	ADIW R28,2
0000de 9508      	RET
                 ; .FEND
                 ;
                 ;void USART_put(unsigned char * buf){
                 ; 0000 0034 void USART_put(unsigned char * buf){
                 _USART_put:
                 ; .FSTART _USART_put
                 ; 0000 0035     int i = 0;
                 ; 0000 0036     while(buf[i] != 0){
0000df 93ba      	ST   -Y,R27
0000e0 93aa      	ST   -Y,R26
0000e1 931a      	ST   -Y,R17
0000e2 930a      	ST   -Y,R16
                 ;	*buf -> Y+2
                 ;	i -> R16,R17
                +
0000e3 e000     +LDI R16 , LOW ( 0 )
0000e4 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x6:
0000e5 01f8      	MOVW R30,R16
0000e6 81aa      	LDD  R26,Y+2
0000e7 81bb      	LDD  R27,Y+2+1
0000e8 0fae      	ADD  R26,R30
0000e9 1fbf      	ADC  R27,R31
0000ea 91ec      	LD   R30,X
0000eb 30e0      	CPI  R30,0
0000ec f079      	BREQ _0x8
                 ; 0000 0037         while(!(UCSR0A & (1 << UDRE0))); // wait for empty transmit buffer
                 _0x9:
0000ed 91e0 00c0 	LDS  R30,192
0000ef 72e0      	ANDI R30,LOW(0x20)
0000f0 f3e1      	BREQ _0x9
                 ; 0000 0038         UDR0 = buf[i];
0000f1 01f8      	MOVW R30,R16
0000f2 81aa      	LDD  R26,Y+2
0000f3 81bb      	LDD  R27,Y+2+1
0000f4 0fae      	ADD  R26,R30
0000f5 1fbf      	ADC  R27,R31
0000f6 91ec      	LD   R30,X
0000f7 93e0 00c6 	STS  198,R30
                 ; 0000 0039         i++;
                +
0000f9 5f0f     +SUBI R16 , LOW ( - 1 )
0000fa 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 003A     }
0000fb cfe9      	RJMP _0x6
                 _0x8:
                 ; 0000 003B     // sending '\n' '\r'
                 ; 0000 003C     while(!(UCSR0A & (1 << UDRE0)));
                 _0xC:
0000fc 91e0 00c0 	LDS  R30,192
0000fe 72e0      	ANDI R30,LOW(0x20)
0000ff f3e1      	BREQ _0xC
                 ; 0000 003D     UDR0 = '\n';
000100 e0ea      	LDI  R30,LOW(10)
000101 93e0 00c6 	STS  198,R30
                 ; 0000 003E     while(!(UCSR0A & (1 << UDRE0)));
                 _0xF:
000103 91e0 00c0 	LDS  R30,192
000105 72e0      	ANDI R30,LOW(0x20)
000106 f3e1      	BREQ _0xF
                 ; 0000 003F     UDR0 = '\r';
000107 e0ed      	LDI  R30,LOW(13)
000108 93e0 00c6 	STS  198,R30
                 ; 0000 0040 }
00010a 8119      	LDD  R17,Y+1
00010b 8108      	LDD  R16,Y+0
00010c c0cd      	RJMP _0x20C000B
                 ; .FEND
                 ;
                 ;interrupt [USART_RXC] void USART_receive_isr (void){
                 ; 0000 0042 interrupt [19] void USART_receive_isr (void){
                 _USART_receive_isr:
                 ; .FSTART _USART_receive_isr
00010d 920a      	ST   -Y,R0
00010e 921a      	ST   -Y,R1
00010f 939a      	ST   -Y,R25
000110 93aa      	ST   -Y,R26
000111 93ba      	ST   -Y,R27
000112 93ea      	ST   -Y,R30
000113 93fa      	ST   -Y,R31
000114 b7ef      	IN   R30,SREG
000115 93ea      	ST   -Y,R30
                 ; 0000 0043     recv_buf_ind = (recv_buf_ind + 1) % 20;
000116 2de5      	MOV  R30,R5
000117 e0f0      	LDI  R31,0
000118 9631      	ADIW R30,1
000119 01df      	MOVW R26,R30
00011a e1e4      	LDI  R30,LOW(20)
00011b e0f0      	LDI  R31,HIGH(20)
00011c 940e 0f1e 	CALL __MODW21
00011e 2e5e      	MOV  R5,R30
                 ; 0000 0044     recv_buf[recv_buf_ind] = UDR0;
00011f 2da5      	MOV  R26,R5
000120 e0b0      	LDI  R27,0
000121 50a0      	SUBI R26,LOW(-_recv_buf)
000122 4fbd      	SBCI R27,HIGH(-_recv_buf)
000123 91e0 00c6 	LDS  R30,198
000125 93ec      	ST   X,R30
                 ; 0000 0045     if(recv_buf[recv_buf_ind] == 'e') recv_done = 1;
000126 2de5      	MOV  R30,R5
000127 e0f0      	LDI  R31,0
000128 50e0      	SUBI R30,LOW(-_recv_buf)
000129 4ffd      	SBCI R31,HIGH(-_recv_buf)
00012a 81a0      	LD   R26,Z
00012b 36a5      	CPI  R26,LOW(0x65)
00012c f411      	BRNE _0x12
00012d e0e1      	LDI  R30,LOW(1)
00012e 2e4e      	MOV  R4,R30
                 ; 0000 0046 }
                 _0x12:
00012f 91e9      	LD   R30,Y+
000130 bfef      	OUT  SREG,R30
000131 91f9      	LD   R31,Y+
000132 91e9      	LD   R30,Y+
000133 91b9      	LD   R27,Y+
000134 91a9      	LD   R26,Y+
000135 9199      	LD   R25,Y+
000136 9019      	LD   R1,Y+
000137 9009      	LD   R0,Y+
000138 9518      	RETI
                 ; .FEND
                 ;
                 ;void LCD_action(unsigned char cmnd){
                 ; 0000 0048 void LCD_action(unsigned char cmnd){
                 _LCD_action:
                 ; .FSTART _LCD_action
                 ; 0000 0049     // 4 bit mode
                 ; 0000 004A     LCD_PORT = (LCD_PORT & 0x0F) | (cmnd & 0xF0); // send upper nibble
000139 93aa      	ST   -Y,R26
                 ;	cmnd -> Y+0
00013a b1eb      	IN   R30,0xB
00013b 70ef      	ANDI R30,LOW(0xF)
00013c 2fae      	MOV  R26,R30
00013d 81e8      	LD   R30,Y
00013e 7fe0      	ANDI R30,LOW(0xF0)
00013f 2bea      	OR   R30,R26
000140 b9eb      	OUT  0xB,R30
                 ; 0000 004B     LCD_PORT &= ~(1 << LCD_RSPIN); // RS = 0
000141 985a      	CBI  0xB,2
                 ; 0000 004C     LCD_PORT |= (1 << LCD_ENPIN); // EN = 1
000142 9a5b      	SBI  0xB,3
                 ; 0000 004D     delay_us(1);
                +
000143 e084     +LDI R24 , LOW ( 4 )
                +__DELAY_USB_LOOP :
000144 958a     +DEC R24
000145 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 4
                 ; 0000 004E     LCD_PORT &= ~(1 << LCD_ENPIN); // EN = 0
000146 985b      	CBI  0xB,3
                 ; 0000 004F     delay_us(200);
                +
000147 e289     +LDI R24 , LOW ( 553 )
000148 e092     +LDI R25 , HIGH ( 553 )
                +__DELAY_USW_LOOP :
000149 9701     +SBIW R24 , 1
00014a f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 553
                 ; 0000 0050     LCD_PORT = (LCD_PORT & 0x0F) | (cmnd << 4); // send lower nibble
00014b b1eb      	IN   R30,0xB
00014c 70ef      	ANDI R30,LOW(0xF)
00014d 2fae      	MOV  R26,R30
00014e 81e8      	LD   R30,Y
00014f 95e2      	SWAP R30
000150 7fe0      	ANDI R30,0xF0
000151 2bea      	OR   R30,R26
000152 b9eb      	OUT  0xB,R30
                 ; 0000 0051     LCD_PORT |= (1 << LCD_ENPIN); // EN = 1
000153 9a5b      	SBI  0xB,3
                 ; 0000 0052     delay_us(1);
                +
000154 e084     +LDI R24 , LOW ( 4 )
                +__DELAY_USB_LOOP :
000155 958a     +DEC R24
000156 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 4
                 ; 0000 0053     LCD_PORT &= ~(1 << LCD_ENPIN); // EN = 0
000157 985b      	CBI  0xB,3
                 ; 0000 0054     delay_ms(2);
000158 e0a2      	LDI  R26,LOW(2)
000159 e0b0      	LDI  R27,0
00015a 940e 0cc0 	CALL _delay_ms
                 ; 0000 0055 }
                 _0x20C000C:
00015c 9621      	ADIW R28,1
00015d 9508      	RET
                 ; .FEND
                 ;
                 ;void LCD_init(void){
                 ; 0000 0057 void LCD_init(void){
                 _LCD_init:
                 ; .FSTART _LCD_init
                 ; 0000 0058     LCD_DPIN = 0xFF;
00015e efef      	LDI  R30,LOW(255)
00015f b9ea      	OUT  0xA,R30
                 ; 0000 0059     delay_ms(20); // wait before LCD activation
000160 e1a4      	LDI  R26,LOW(20)
000161 e0b0      	LDI  R27,0
000162 940e 0cc0 	CALL _delay_ms
                 ; 0000 005A     LCD_action(0x02); // 4 bit control
000164 e0a2      	LDI  R26,LOW(2)
000165 dfd3      	RCALL _LCD_action
                 ; 0000 005B     LCD_action(0x28); // initialization of 16X2 LCD in 4bit mode
000166 e2a8      	LDI  R26,LOW(40)
000167 dfd1      	RCALL _LCD_action
                 ; 0000 005C     LCD_action(0x0C); // disable cursor
000168 e0ac      	LDI  R26,LOW(12)
000169 dfcf      	RCALL _LCD_action
                 ; 0000 005D     LCD_action(0x06); // auto increment cursor
00016a e0a6      	LDI  R26,LOW(6)
00016b dfcd      	RCALL _LCD_action
                 ; 0000 005E     LCD_action(0x01); // clear LCD
00016c e0a1      	LDI  R26,LOW(1)
00016d dfcb      	RCALL _LCD_action
                 ; 0000 005F     LCD_action(0x80); // cursor at home position
00016e e8a0      	LDI  R26,LOW(128)
00016f dfc9      	RCALL _LCD_action
                 ; 0000 0060     delay_ms(2);
000170 e0a2      	LDI  R26,LOW(2)
000171 e0b0      	LDI  R27,0
000172 940e 0cc0 	CALL _delay_ms
                 ; 0000 0061 }
000174 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;void LCD_clear(void){
                 ; 0000 0064 void LCD_clear(void){
                 _LCD_clear:
                 ; .FSTART _LCD_clear
                 ; 0000 0065     LCD_action(0x01); // clear LCD
000175 e0a1      	LDI  R26,LOW(1)
000176 dfc2      	RCALL _LCD_action
                 ; 0000 0066     delay_ms(2);
000177 e0a2      	LDI  R26,LOW(2)
000178 e0b0      	LDI  R27,0
000179 940e 0cc0 	CALL _delay_ms
                 ; 0000 0067     LCD_action(0x80); // move to line 1, position 1
00017b e8a0      	LDI  R26,LOW(128)
00017c dfbc      	RCALL _LCD_action
                 ; 0000 0068 }
00017d 9508      	RET
                 ; .FEND
                 ;
                 ;void LCD_print(char *str){
                 ; 0000 006A void LCD_print(char *str){
                 _LCD_print:
                 ; .FSTART _LCD_print
                 ; 0000 006B     int i;
                 ; 0000 006C 	for(i=0; str[i]!=0; i++)
00017e 93ba      	ST   -Y,R27
00017f 93aa      	ST   -Y,R26
000180 931a      	ST   -Y,R17
000181 930a      	ST   -Y,R16
                 ;	*str -> Y+2
                 ;	i -> R16,R17
                +
000182 e000     +LDI R16 , LOW ( 0 )
000183 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x14:
000184 01f8      	MOVW R30,R16
000185 81aa      	LDD  R26,Y+2
000186 81bb      	LDD  R27,Y+2+1
000187 0fae      	ADD  R26,R30
000188 1fbf      	ADC  R27,R31
000189 91ec      	LD   R30,X
00018a 30e0      	CPI  R30,0
00018b f179      	BREQ _0x15
                 ; 0000 006D 	{
                 ; 0000 006E 		LCD_PORT = (LCD_PORT & 0x0F) | (str[i] & 0xF0);
00018c b1eb      	IN   R30,0xB
00018d 70ef      	ANDI R30,LOW(0xF)
00018e 2e0e      	MOV  R0,R30
00018f 01f8      	MOVW R30,R16
000190 81aa      	LDD  R26,Y+2
000191 81bb      	LDD  R27,Y+2+1
000192 0fae      	ADD  R26,R30
000193 1fbf      	ADC  R27,R31
000194 91ec      	LD   R30,X
000195 7fe0      	ANDI R30,LOW(0xF0)
000196 29e0      	OR   R30,R0
000197 b9eb      	OUT  0xB,R30
                 ; 0000 006F 		LCD_PORT |= (1<<LCD_RSPIN); // RS = 1, data reg
000198 9a5a      	SBI  0xB,2
                 ; 0000 0070 		LCD_PORT |= (1<<LCD_ENPIN); // EN = 1
000199 9a5b      	SBI  0xB,3
                 ; 0000 0071 		delay_us(1);
                +
00019a e084     +LDI R24 , LOW ( 4 )
                +__DELAY_USB_LOOP :
00019b 958a     +DEC R24
00019c f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 4
                 ; 0000 0072 		LCD_PORT &= ~ (1<<LCD_ENPIN); // EN = 0
00019d 985b      	CBI  0xB,3
                 ; 0000 0073 		delay_us(200);
                +
00019e e289     +LDI R24 , LOW ( 553 )
00019f e092     +LDI R25 , HIGH ( 553 )
                +__DELAY_USW_LOOP :
0001a0 9701     +SBIW R24 , 1
0001a1 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 553
                 ; 0000 0074 		LCD_PORT = (LCD_PORT & 0x0F) | (str[i] << 4);
0001a2 b1eb      	IN   R30,0xB
0001a3 70ef      	ANDI R30,LOW(0xF)
0001a4 2e0e      	MOV  R0,R30
0001a5 01f8      	MOVW R30,R16
0001a6 81aa      	LDD  R26,Y+2
0001a7 81bb      	LDD  R27,Y+2+1
0001a8 0fae      	ADD  R26,R30
0001a9 1fbf      	ADC  R27,R31
0001aa 91ec      	LD   R30,X
0001ab 95e2      	SWAP R30
0001ac 7fe0      	ANDI R30,0xF0
0001ad 29e0      	OR   R30,R0
0001ae b9eb      	OUT  0xB,R30
                 ; 0000 0075 		LCD_PORT |= (1<<LCD_ENPIN);
0001af 9a5b      	SBI  0xB,3
                 ; 0000 0076 		delay_us(1);
                +
0001b0 e084     +LDI R24 , LOW ( 4 )
                +__DELAY_USB_LOOP :
0001b1 958a     +DEC R24
0001b2 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 4
                 ; 0000 0077 		LCD_PORT &= ~ (1<<LCD_ENPIN);
0001b3 985b      	CBI  0xB,3
                 ; 0000 0078 		delay_ms(2);
0001b4 e0a2      	LDI  R26,LOW(2)
0001b5 e0b0      	LDI  R27,0
0001b6 940e 0cc0 	CALL _delay_ms
                 ; 0000 0079 	}
                +
0001b8 5f0f     +SUBI R16 , LOW ( - 1 )
0001b9 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0001ba cfc9      	RJMP _0x14
                 _0x15:
                 ; 0000 007A }
0001bb 8119      	LDD  R17,Y+1
0001bc 8108      	LDD  R16,Y+0
0001bd c01c      	RJMP _0x20C000B
                 ; .FEND
                 ;
                 ;void LCD_print_pos(char row, char pos, char *str){
                 ; 0000 007C void LCD_print_pos(char row, char pos, char *str){
                 _LCD_print_pos:
                 ; .FSTART _LCD_print_pos
                 ; 0000 007D     if(row == 0 && pos < 16) // line 1
0001be 93ba      	ST   -Y,R27
0001bf 93aa      	ST   -Y,R26
                 ;	row -> Y+3
                 ;	pos -> Y+2
                 ;	*str -> Y+0
0001c0 81ab      	LDD  R26,Y+3
0001c1 30a0      	CPI  R26,LOW(0x0)
0001c2 f419      	BRNE _0x17
0001c3 81aa      	LDD  R26,Y+2
0001c4 31a0      	CPI  R26,LOW(0x10)
0001c5 f008      	BRLO _0x18
                 _0x17:
0001c6 c004      	RJMP _0x16
                 _0x18:
                 ; 0000 007E         LCD_action((pos & 0x0F)|0x80);
0001c7 81ea      	LDD  R30,Y+2
0001c8 70ef      	ANDI R30,LOW(0xF)
0001c9 68e0      	ORI  R30,0x80
0001ca c00a      	RJMP _0x48
                 ; 0000 007F     else if(row == 1 && pos < 16) // line 2
                 _0x16:
0001cb 81ab      	LDD  R26,Y+3
0001cc 30a1      	CPI  R26,LOW(0x1)
0001cd f419      	BRNE _0x1B
0001ce 81aa      	LDD  R26,Y+2
0001cf 31a0      	CPI  R26,LOW(0x10)
0001d0 f008      	BRLO _0x1C
                 _0x1B:
0001d1 c005      	RJMP _0x1A
                 _0x1C:
                 ; 0000 0080         LCD_action((pos & 0x0F)|0xC0);
0001d2 81ea      	LDD  R30,Y+2
0001d3 70ef      	ANDI R30,LOW(0xF)
0001d4 6ce0      	ORI  R30,LOW(0xC0)
                 _0x48:
0001d5 2fae      	MOV  R26,R30
0001d6 df62      	RCALL _LCD_action
                 ; 0000 0081     LCD_print(str);
                 _0x1A:
0001d7 81a8      	LD   R26,Y
0001d8 81b9      	LDD  R27,Y+1
0001d9 dfa4      	RCALL _LCD_print
                 ; 0000 0082 }
                 _0x20C000B:
0001da 9624      	ADIW R28,4
0001db 9508      	RET
                 ; .FEND
                 ;
                 ;int read_dht11(int* temp, int* humidity){
                 ; 0000 0084 int read_dht11(int* temp, int* humidity){
                 _read_dht11:
                 ; .FSTART _read_dht11
                 ; 0000 0085     unsigned char i, j, bytes[5], time_count;
                 ; 0000 0086     //reset port
                 ; 0000 0087     DHT11_DDR |= (1<<DHT11_INPUTPIN); //output mode
0001dc 93ba      	ST   -Y,R27
0001dd 93aa      	ST   -Y,R26
0001de 9725      	SBIW R28,5
0001df 940e 0fa0 	CALL __SAVELOCR4
                 ;	*temp -> Y+11
                 ;	*humidity -> Y+9
                 ;	i -> R17
                 ;	j -> R16
                 ;	bytes -> Y+4
                 ;	time_count -> R19
0001e1 9a21      	SBI  0x4,1
                 ; 0000 0088     DHT11_PORT |= (1<<DHT11_INPUTPIN); // high
0001e2 9a29      	SBI  0x5,1
                 ; 0000 0089     delay_ms(100);
0001e3 e6a4      	LDI  R26,LOW(100)
0001e4 e0b0      	LDI  R27,0
0001e5 940e 0cc0 	CALL _delay_ms
                 ; 0000 008A 	// send start signal
                 ; 0000 008B 	DHT11_PORT &= ~(1<<DHT11_INPUTPIN); // low
0001e7 9829      	CBI  0x5,1
                 ; 0000 008C 	delay_ms(18);
0001e8 e1a2      	LDI  R26,LOW(18)
0001e9 e0b0      	LDI  R27,0
0001ea 940e 0cc0 	CALL _delay_ms
                 ; 0000 008D 	DHT11_PORT |= (1<<DHT11_INPUTPIN); // high
0001ec 9a29      	SBI  0x5,1
                 ; 0000 008E 	DHT11_DDR &= ~(1<<DHT11_INPUTPIN); //input mode
0001ed 9821      	CBI  0x4,1
                 ; 0000 008F 	delay_us(40);
                +
0001ee e983     +LDI R24 , LOW ( 147 )
                +__DELAY_USB_LOOP :
0001ef 958a     +DEC R24
0001f0 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 147
                 ; 0000 0090     // check DHT response signal
                 ; 0000 0091     if((DHT11_PIN & (1 << DHT11_INPUTPIN))){
0001f1 9b19      	SBIS 0x3,1
0001f2 c003      	RJMP _0x1D
                 ; 0000 0092         // error
                 ; 0000 0093         return -1;
0001f3 efef      	LDI  R30,LOW(65535)
0001f4 efff      	LDI  R31,HIGH(65535)
0001f5 c075      	RJMP _0x20C000A
                 ; 0000 0094     }
                 ; 0000 0095     delay_us(80);
                 _0x1D:
                +
0001f6 ed8d     +LDI R24 , LOW ( 221 )
0001f7 e090     +LDI R25 , HIGH ( 221 )
                +__DELAY_USW_LOOP :
0001f8 9701     +SBIW R24 , 1
0001f9 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 221
                 ; 0000 0096     // check DHT pulls up
                 ; 0000 0097     if(!(DHT11_PIN & (1 << DHT11_INPUTPIN))){
0001fa 9919      	SBIC 0x3,1
0001fb c003      	RJMP _0x1E
                 ; 0000 0098         // error
                 ; 0000 0099         return -2;
0001fc efee      	LDI  R30,LOW(65534)
0001fd efff      	LDI  R31,HIGH(65534)
0001fe c06c      	RJMP _0x20C000A
                 ; 0000 009A     }
                 ; 0000 009B     delay_us(80);
                 _0x1E:
                +
0001ff ed8d     +LDI R24 , LOW ( 221 )
000200 e090     +LDI R25 , HIGH ( 221 )
                +__DELAY_USW_LOOP :
000201 9701     +SBIW R24 , 1
000202 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 221
                 ; 0000 009C     // read 5 bytes
                 ; 0000 009D     for(i = 0; i < 5; i++){
000203 e010      	LDI  R17,LOW(0)
                 _0x20:
000204 3015      	CPI  R17,5
000205 f5e0      	BRSH _0x21
                 ; 0000 009E         unsigned char result = 0;
                 ; 0000 009F         for(j = 0; j < 8; j++){
000206 9721      	SBIW R28,1
000207 e0e0      	LDI  R30,LOW(0)
000208 83e8      	ST   Y,R30
                 ;	*temp -> Y+12
                 ;	*humidity -> Y+10
                 ;	bytes -> Y+5
                 ;	result -> Y+0
000209 e000      	LDI  R16,LOW(0)
                 _0x23:
00020a 3008      	CPI  R16,8
00020b f558      	BRSH _0x24
                 ; 0000 00A0             time_count = 0;
00020c e030      	LDI  R19,LOW(0)
                 ; 0000 00A1             // wait for a high voltage
                 ; 0000 00A2             while(!(DHT11_PIN & (1 << DHT11_INPUTPIN))){
                 _0x25:
00020d 9919      	SBIC 0x3,1
00020e c00b      	RJMP _0x27
                 ; 0000 00A3                 time_count++;
00020f 5f3f      	SUBI R19,-1
                 ; 0000 00A4                 if(time_count > DHT11_TIMEOUT) return -3; // timeout error
000210 3c39      	CPI  R19,201
000211 f020      	BRLO _0x28
000212 efed      	LDI  R30,LOW(65533)
000213 efff      	LDI  R31,HIGH(65533)
000214 9621      	ADIW R28,1
000215 c055      	RJMP _0x20C000A
                 ; 0000 00A5                 delay_us(1);
                 _0x28:
                +
000216 e084     +LDI R24 , LOW ( 4 )
                +__DELAY_USB_LOOP :
000217 958a     +DEC R24
000218 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 4
                 ; 0000 00A6             }
000219 cff3      	RJMP _0x25
                 _0x27:
                 ; 0000 00A7             delay_us(30);
                +
00021a e68f     +LDI R24 , LOW ( 111 )
                +__DELAY_USB_LOOP :
00021b 958a     +DEC R24
00021c f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 111
                 ; 0000 00A8             if(DHT11_PIN & (1 << DHT11_INPUTPIN)) // high after 30 us -> bit 1
00021d 9b19      	SBIS 0x3,1
00021e c008      	RJMP _0x29
                 ; 0000 00A9                 result |= (1<<(7-j));
00021f e0e7      	LDI  R30,LOW(7)
000220 1be0      	SUB  R30,R16
000221 e0a1      	LDI  R26,LOW(1)
000222 940e 0e88 	CALL __LSLB12
000224 81a8      	LD   R26,Y
000225 2bea      	OR   R30,R26
000226 83e8      	ST   Y,R30
                 ; 0000 00AA             time_count = 0;
                 _0x29:
000227 e030      	LDI  R19,LOW(0)
                 ; 0000 00AB             // wait until get low
                 ; 0000 00AC             while(DHT11_PIN & (1 << DHT11_INPUTPIN)){
                 _0x2A:
000228 9b19      	SBIS 0x3,1
000229 c00b      	RJMP _0x2C
                 ; 0000 00AD                 time_count++;
00022a 5f3f      	SUBI R19,-1
                 ; 0000 00AE                 if(time_count > DHT11_TIMEOUT) return -3; // timeout error
00022b 3c39      	CPI  R19,201
00022c f020      	BRLO _0x2D
00022d efed      	LDI  R30,LOW(65533)
00022e efff      	LDI  R31,HIGH(65533)
00022f 9621      	ADIW R28,1
000230 c03a      	RJMP _0x20C000A
                 ; 0000 00AF                 delay_us(1);
                 _0x2D:
                +
000231 e084     +LDI R24 , LOW ( 4 )
                +__DELAY_USB_LOOP :
000232 958a     +DEC R24
000233 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 4
                 ; 0000 00B0             }
000234 cff3      	RJMP _0x2A
                 _0x2C:
                 ; 0000 00B1         }
000235 5f0f      	SUBI R16,-1
000236 cfd3      	RJMP _0x23
                 _0x24:
                 ; 0000 00B2         bytes[i] = result;
000237 2fe1      	MOV  R30,R17
000238 e0f0      	LDI  R31,0
000239 01de      	MOVW R26,R28
00023a 9615      	ADIW R26,5
00023b 0fea      	ADD  R30,R26
00023c 1ffb      	ADC  R31,R27
00023d 81a8      	LD   R26,Y
00023e 83a0      	STD  Z+0,R26
                 ; 0000 00B3     }
00023f 9621      	ADIW R28,1
000240 5f1f      	SUBI R17,-1
000241 cfc2      	RJMP _0x20
                 _0x21:
                 ; 0000 00B4     // reset port
                 ; 0000 00B5     DHT11_DDR |= (1<<DHT11_INPUTPIN); //output mode
000242 9a21      	SBI  0x4,1
                 ; 0000 00B6     DHT11_PORT |= (1<<DHT11_INPUTPIN); // high
000243 9a29      	SBI  0x5,1
                 ; 0000 00B7     delay_ms(100);
000244 e6a4      	LDI  R26,LOW(100)
000245 e0b0      	LDI  R27,0
000246 940e 0cc0 	CALL _delay_ms
                 ; 0000 00B8     // checksum
                 ; 0000 00B9     if((unsigned char)(bytes[0] + bytes[1] + bytes[2] + bytes[3]) == bytes[4]){
000248 81ac      	LDD  R26,Y+4
000249 27bb      	CLR  R27
00024a 81ed      	LDD  R30,Y+5
00024b e0f0      	LDI  R31,0
00024c 0fae      	ADD  R26,R30
00024d 1fbf      	ADC  R27,R31
00024e 81ee      	LDD  R30,Y+6
00024f e0f0      	LDI  R31,0
000250 0fae      	ADD  R26,R30
000251 1fbf      	ADC  R27,R31
000252 81ef      	LDD  R30,Y+7
000253 e0f0      	LDI  R31,0
000254 0fea      	ADD  R30,R26
000255 1ffb      	ADC  R31,R27
000256 2fae      	MOV  R26,R30
000257 85e8      	LDD  R30,Y+8
000258 17ea      	CP   R30,R26
000259 f479      	BRNE _0x2E
                 ; 0000 00BA         *temp = bytes[2];
00025a 81ee      	LDD  R30,Y+6
00025b 85ab      	LDD  R26,Y+11
00025c 85bc      	LDD  R27,Y+11+1
00025d e0f0      	LDI  R31,0
00025e 93ed      	ST   X+,R30
00025f 93fc      	ST   X,R31
                 ; 0000 00BB //        *temp = *temp << 8;
                 ; 0000 00BC //        *temp = *temp | bytes[3];
                 ; 0000 00BD         *humidity = bytes[0];
000260 81ec      	LDD  R30,Y+4
000261 85a9      	LDD  R26,Y+9
000262 85ba      	LDD  R27,Y+9+1
000263 e0f0      	LDI  R31,0
000264 93ed      	ST   X+,R30
000265 93fc      	ST   X,R31
                 ; 0000 00BE //        *humidity = *humidity << 8;
                 ; 0000 00BF //        *humidity = *humidity | bytes[1];
                 ; 0000 00C0         return 0;
000266 e0e0      	LDI  R30,LOW(0)
000267 e0f0      	LDI  R31,HIGH(0)
000268 c002      	RJMP _0x20C000A
                 ; 0000 00C1     }
                 ; 0000 00C2     // checksum error
                 ; 0000 00C3     return -4;
                 _0x2E:
000269 efec      	LDI  R30,LOW(65532)
00026a efff      	LDI  R31,HIGH(65532)
                 _0x20C000A:
00026b 940e 0fa7 	CALL __LOADLOCR4
00026d 962d      	ADIW R28,13
00026e 9508      	RET
                 ; 0000 00C4 }
                 ; .FEND
                 ;
                 ;void main(void){
                 ; 0000 00C6 void main(void){
                 _main:
                 ; .FSTART _main
                 ; 0000 00C7     int temp, humidity, err_code, light, temp_threshold = -1, humidity_threshold = -1, light_threshold = -1;
                 ; 0000 00C8     char i, j, recv_data[20], loop_count = 0, *p;
                 ; 0000 00C9     char mss[24];
                 ; 0000 00CA     #asm("sei ");
00026f 97e9      	SBIW R28,57
000270 e18d      	LDI  R24,29
000271 e1aa      	LDI  R26,LOW(26)
000272 e0b0      	LDI  R27,HIGH(26)
000273 e6ea      	LDI  R30,LOW(_0x2F*2)
000274 e0f0      	LDI  R31,HIGH(_0x2F*2)
000275 940e 0fac 	CALL __INITLOCB
                 ;	temp -> R16,R17
                 ;	humidity -> R18,R19
                 ;	err_code -> R20,R21
                 ;	light -> Y+55
                 ;	temp_threshold -> Y+53
                 ;	humidity_threshold -> Y+51
                 ;	light_threshold -> Y+49
                 ;	i -> Y+48
                 ;	j -> Y+47
                 ;	recv_data -> Y+27
                 ;	loop_count -> Y+26
                 ;	*p -> Y+24
                 ;	mss -> Y+0
000277 9478      	sei 
                 ; 0000 00CB     // ADC init - ADC6
                 ; 0000 00CC     ADC_init();
000278 de2a      	RCALL _ADC_init
                 ; 0000 00CD 	USART_init(SYS_CLOCK/16/BAUD - 1);
000279 e4a7      	LDI  R26,LOW(71)
00027a e0b0      	LDI  R27,0
00027b de53      	RCALL _USART_init
                 ; 0000 00CE     LCD_init();
00027c dee1      	RCALL _LCD_init
                 ; 0000 00CF     // init led pin
                 ; 0000 00D0     DDRB |= 0x1C; // 2,3,4
00027d b1e4      	IN   R30,0x4
00027e 61ec      	ORI  R30,LOW(0x1C)
00027f b9e4      	OUT  0x4,R30
                 ; 0000 00D1     temp_threshold = eeprom_read_word(0);
000280 e0a0      	LDI  R26,LOW(0)
000281 e0b0      	LDI  R27,HIGH(0)
000282 940e 0f71 	CALL __EEPROMRDW
000284 abed      	STD  Y+53,R30
000285 abfe      	STD  Y+53+1,R31
                 ; 0000 00D2     humidity_threshold = eeprom_read_word(2);
000286 e0a2      	LDI  R26,LOW(2)
000287 e0b0      	LDI  R27,HIGH(2)
000288 940e 0f71 	CALL __EEPROMRDW
00028a abeb      	STD  Y+51,R30
00028b abfc      	STD  Y+51+1,R31
                 ; 0000 00D3     light_threshold = eeprom_read_word(4);
00028c e0a4      	LDI  R26,LOW(4)
00028d e0b0      	LDI  R27,HIGH(4)
00028e 940e 0f71 	CALL __EEPROMRDW
000290 abe9      	STD  Y+49,R30
000291 abfa      	STD  Y+49+1,R31
                 ; 0000 00D4     //USART_put("Hello from ATmega328p");
                 ; 0000 00D5 	while(1){
                 _0x30:
                 ; 0000 00D6         // check uart data received
                 ; 0000 00D7         loop_count++;
000292 8dea      	LDD  R30,Y+26
000293 5fef      	SUBI R30,-LOW(1)
000294 8fea      	STD  Y+26,R30
                 ; 0000 00D8         if(recv_done){
000295 2044      	TST  R4
000296 f409      	BRNE PC+2
000297 c0c5      	RJMP _0x33
                 ; 0000 00D9             recv_done = 0;
000298 2444      	CLR  R4
                 ; 0000 00DA             for(i = 0; i < 20; i++) // find 's';
000299 e0e0      	LDI  R30,LOW(0)
00029a abe8      	STD  Y+48,R30
                 _0x35:
00029b a9a8      	LDD  R26,Y+48
00029c 31a4      	CPI  R26,LOW(0x14)
00029d f458      	BRSH _0x36
                 ; 0000 00DB                 if(recv_buf[i] == 's') break;
00029e a9e8      	LDD  R30,Y+48
00029f e0f0      	LDI  R31,0
0002a0 50e0      	SUBI R30,LOW(-_recv_buf)
0002a1 4ffd      	SBCI R31,HIGH(-_recv_buf)
0002a2 81a0      	LD   R26,Z
0002a3 37a3      	CPI  R26,LOW(0x73)
0002a4 f021      	BREQ _0x36
                 ; 0000 00DC             if(i != 20){
0002a5 a9e8      	LDD  R30,Y+48
0002a6 5fef      	SUBI R30,-LOW(1)
0002a7 abe8      	STD  Y+48,R30
0002a8 cff2      	RJMP _0x35
                 _0x36:
0002a9 a9a8      	LDD  R26,Y+48
0002aa 31a4      	CPI  R26,LOW(0x14)
0002ab f409      	BRNE PC+2
0002ac c0b0      	RJMP _0x38
                 ; 0000 00DD                 j = (i + 1) % 20;
0002ad a9e8      	LDD  R30,Y+48
0002ae e0f0      	LDI  R31,0
0002af 9631      	ADIW R30,1
0002b0 01df      	MOVW R26,R30
0002b1 e1e4      	LDI  R30,LOW(20)
0002b2 e0f0      	LDI  R31,HIGH(20)
0002b3 940e 0f1e 	CALL __MODW21
0002b5 a7ef      	STD  Y+47,R30
                 ; 0000 00DE                 memset(recv_data, 0, 20);
0002b6 01fe      	MOVW R30,R28
0002b7 967b      	ADIW R30,27
0002b8 93fa      	ST   -Y,R31
0002b9 93ea      	ST   -Y,R30
0002ba e0e0      	LDI  R30,LOW(0)
0002bb 93ea      	ST   -Y,R30
0002bc e1a4      	LDI  R26,LOW(20)
0002bd e0b0      	LDI  R27,0
0002be 940e 0ae9 	CALL _memset
                 ; 0000 00DF                 while(j != i){
                 _0x39:
0002c0 a9e8      	LDD  R30,Y+48
0002c1 a5af      	LDD  R26,Y+47
0002c2 17ea      	CP   R30,R26
0002c3 f151      	BREQ _0x3B
                 ; 0000 00E0                     if(recv_buf[j] == 'e') break;
0002c4 a5ef      	LDD  R30,Y+47
0002c5 e0f0      	LDI  R31,0
0002c6 50e0      	SUBI R30,LOW(-_recv_buf)
0002c7 4ffd      	SBCI R31,HIGH(-_recv_buf)
0002c8 81a0      	LD   R26,Z
0002c9 36a5      	CPI  R26,LOW(0x65)
0002ca f119      	BREQ _0x3B
                 ; 0000 00E1                     recv_data[(j-i+20)%20-1] = recv_buf[j];
0002cb a5af      	LDD  R26,Y+47
0002cc 27bb      	CLR  R27
0002cd a9e8      	LDD  R30,Y+48
0002ce e0f0      	LDI  R31,0
0002cf 940e 0f6a 	CALL __SWAPW12
0002d1 1bea      	SUB  R30,R26
0002d2 0bfb      	SBC  R31,R27
0002d3 9674      	ADIW R30,20
0002d4 01df      	MOVW R26,R30
0002d5 e1e4      	LDI  R30,LOW(20)
0002d6 e0f0      	LDI  R31,HIGH(20)
0002d7 940e 0f1e 	CALL __MODW21
0002d9 9731      	SBIW R30,1
0002da 01de      	MOVW R26,R28
0002db 965b      	ADIW R26,27
0002dc 0fae      	ADD  R26,R30
0002dd 1fbf      	ADC  R27,R31
0002de a5ef      	LDD  R30,Y+47
0002df e0f0      	LDI  R31,0
0002e0 50e0      	SUBI R30,LOW(-_recv_buf)
0002e1 4ffd      	SBCI R31,HIGH(-_recv_buf)
0002e2 81e0      	LD   R30,Z
0002e3 93ec      	ST   X,R30
                 ; 0000 00E2                     j = (j+1) % 20;
0002e4 a5ef      	LDD  R30,Y+47
0002e5 e0f0      	LDI  R31,0
0002e6 9631      	ADIW R30,1
0002e7 01df      	MOVW R26,R30
0002e8 e1e4      	LDI  R30,LOW(20)
0002e9 e0f0      	LDI  R31,HIGH(20)
0002ea 940e 0f1e 	CALL __MODW21
0002ec a7ef      	STD  Y+47,R30
                 ; 0000 00E3                 }
0002ed cfd2      	RJMP _0x39
                 _0x3B:
                 ; 0000 00E4                 if(j != i){
0002ee a9e8      	LDD  R30,Y+48
0002ef a5af      	LDD  R26,Y+47
0002f0 17ea      	CP   R30,R26
0002f1 f409      	BRNE PC+2
0002f2 c06a      	RJMP _0x3D
                 ; 0000 00E5                     i = 0;
0002f3 e0e0      	LDI  R30,LOW(0)
0002f4 abe8      	STD  Y+48,R30
                 ; 0000 00E6                     p = strrchr(recv_data, ' ');
0002f5 01fe      	MOVW R30,R28
0002f6 967b      	ADIW R30,27
0002f7 93fa      	ST   -Y,R31
0002f8 93ea      	ST   -Y,R30
0002f9 e2a0      	LDI  R26,LOW(32)
0002fa 940e 0b1f 	CALL _strrchr
0002fc 8fe8      	STD  Y+24,R30
0002fd 8ff9      	STD  Y+24+1,R31
                 ; 0000 00E7                     sscanf(p + 1, "%d", &light_threshold);
0002fe 9631      	ADIW R30,1
0002ff 93fa      	ST   -Y,R31
000300 93ea      	ST   -Y,R30
                +
000301 e8e8     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000302 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000303 93fa      	ST   -Y,R31
000304 93ea      	ST   -Y,R30
000305 01fe      	MOVW R30,R28
000306 96f5      	ADIW R30,53
000307 2766      	CLR  R22
000308 2777      	CLR  R23
000309 940e 0f5a 	CALL __PUTPARD1
00030b e084      	LDI  R24,4
00030c 940e 0ab6 	CALL _sscanf
00030e 9628      	ADIW R28,8
                 ; 0000 00E8                     *p = 0;
00030f 8da8      	LDD  R26,Y+24
000310 8db9      	LDD  R27,Y+24+1
000311 e0e0      	LDI  R30,LOW(0)
000312 93ec      	ST   X,R30
                 ; 0000 00E9                     p = strrchr(recv_data, ' ');
000313 01fe      	MOVW R30,R28
000314 967b      	ADIW R30,27
000315 93fa      	ST   -Y,R31
000316 93ea      	ST   -Y,R30
000317 e2a0      	LDI  R26,LOW(32)
000318 940e 0b1f 	CALL _strrchr
00031a 8fe8      	STD  Y+24,R30
00031b 8ff9      	STD  Y+24+1,R31
                 ; 0000 00EA                     sscanf(p + 1, "%d", &humidity_threshold);
00031c 9631      	ADIW R30,1
00031d 93fa      	ST   -Y,R31
00031e 93ea      	ST   -Y,R30
                +
00031f e8e8     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000320 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000321 93fa      	ST   -Y,R31
000322 93ea      	ST   -Y,R30
000323 01fe      	MOVW R30,R28
000324 96f7      	ADIW R30,55
000325 2766      	CLR  R22
000326 2777      	CLR  R23
000327 940e 0f5a 	CALL __PUTPARD1
000329 e084      	LDI  R24,4
00032a 940e 0ab6 	CALL _sscanf
00032c 9628      	ADIW R28,8
                 ; 0000 00EB                     *p = 0;
00032d 8da8      	LDD  R26,Y+24
00032e 8db9      	LDD  R27,Y+24+1
00032f e0e0      	LDI  R30,LOW(0)
000330 93ec      	ST   X,R30
                 ; 0000 00EC                     p = strrchr(recv_data, ' ');
000331 01fe      	MOVW R30,R28
000332 967b      	ADIW R30,27
000333 93fa      	ST   -Y,R31
000334 93ea      	ST   -Y,R30
000335 e2a0      	LDI  R26,LOW(32)
000336 940e 0b1f 	CALL _strrchr
000338 8fe8      	STD  Y+24,R30
000339 8ff9      	STD  Y+24+1,R31
                 ; 0000 00ED                     sscanf(p + 1, "%d", &temp_threshold);
00033a 9631      	ADIW R30,1
00033b 93fa      	ST   -Y,R31
00033c 93ea      	ST   -Y,R30
                +
00033d e8e8     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00033e e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00033f 93fa      	ST   -Y,R31
000340 93ea      	ST   -Y,R30
000341 01fe      	MOVW R30,R28
000342 96f9      	ADIW R30,57
000343 2766      	CLR  R22
000344 2777      	CLR  R23
000345 940e 0f5a 	CALL __PUTPARD1
000347 e084      	LDI  R24,4
000348 940e 0ab6 	CALL _sscanf
00034a 9628      	ADIW R28,8
                 ; 0000 00EE                     // eeprom  write
                 ; 0000 00EF                     eeprom_write_word(0, temp_threshold);
00034b a9ed      	LDD  R30,Y+53
00034c a9fe      	LDD  R31,Y+53+1
00034d e0a0      	LDI  R26,LOW(0)
00034e e0b0      	LDI  R27,HIGH(0)
00034f 940e 0f81 	CALL __EEPROMWRW
                 ; 0000 00F0                     eeprom_write_word(2, humidity_threshold);
000351 a9eb      	LDD  R30,Y+51
000352 a9fc      	LDD  R31,Y+51+1
000353 e0a2      	LDI  R26,LOW(2)
000354 e0b0      	LDI  R27,HIGH(2)
000355 940e 0f81 	CALL __EEPROMWRW
                 ; 0000 00F1                     eeprom_write_word(4, light_threshold);
000357 a9e9      	LDD  R30,Y+49
000358 a9fa      	LDD  R31,Y+49+1
000359 e0a4      	LDI  R26,LOW(4)
00035a e0b0      	LDI  R27,HIGH(4)
00035b 940e 0f81 	CALL __EEPROMWRW
                 ; 0000 00F2                 }
                 ; 0000 00F3             }
                 _0x3D:
                 ; 0000 00F4         }
                 _0x38:
                 ; 0000 00F5 
                 ; 0000 00F6         light = ADC_read(6);
                 _0x33:
00035d e0a6      	LDI  R26,LOW(6)
00035e dd4f      	RCALL _ADC_read
00035f abef      	STD  Y+55,R30
000360 aff8      	STD  Y+55+1,R31
                 ; 0000 00F7         if(loop_count >= 10){ // read rht11 sensor after every 1s
000361 8daa      	LDD  R26,Y+26
000362 30aa      	CPI  R26,LOW(0xA)
000363 f408      	BRSH PC+2
000364 c048      	RJMP _0x3E
                 ; 0000 00F8             loop_count = 0;
000365 e0e0      	LDI  R30,LOW(0)
000366 8fea      	STD  Y+26,R30
                 ; 0000 00F9             if((err_code = read_dht11(&temp, &humidity)) == 0){
000367 b7ed      	IN   R30,SPL
000368 b7fe      	IN   R31,SPH
000369 9731      	SBIW R30,1
00036a 93fa      	ST   -Y,R31
00036b 93ea      	ST   -Y,R30
00036c 931f      	PUSH R17
00036d 930f      	PUSH R16
00036e b7ad      	IN   R26,SPL
00036f b7be      	IN   R27,SPH
000370 9711      	SBIW R26,1
000371 933f      	PUSH R19
000372 932f      	PUSH R18
000373 de68      	RCALL _read_dht11
000374 912f      	POP  R18
000375 913f      	POP  R19
000376 910f      	POP  R16
000377 911f      	POP  R17
000378 01af      	MOVW R20,R30
000379 9730      	SBIW R30,0
00037a f501      	BRNE _0x3F
                 ; 0000 00FA                 sprintf(mss, "0 %d %d %d", temp, humidity, light);
00037b 01fe      	MOVW R30,R28
00037c 93fa      	ST   -Y,R31
00037d 93ea      	ST   -Y,R30
                +
00037e e8eb     +LDI R30 , LOW ( 2 * _0x0 + ( 3 ) )
00037f e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 3 ) )
                 	__POINTW1FN _0x0,3
000380 93fa      	ST   -Y,R31
000381 93ea      	ST   -Y,R30
000382 01f8      	MOVW R30,R16
000383 940e 0e96 	CALL __CWD1
000385 940e 0f5a 	CALL __PUTPARD1
000387 01f9      	MOVW R30,R18
000388 940e 0e96 	CALL __CWD1
00038a 940e 0f5a 	CALL __PUTPARD1
                +
00038c 01fe     +MOVW R30 , R28
00038d 5bed     +SUBI R30 , LOW ( - 67 )
00038e 4fff     +SBCI R31 , HIGH ( - 67 )
00038f 9001     +LD R0 , Z +
000390 81f0     +LD R31 , Z
000391 2de0     +MOV R30 , R0
                 	__GETW1SX 67
000392 940e 0e96 	CALL __CWD1
000394 940e 0f5a 	CALL __PUTPARD1
000396 e08c      	LDI  R24,12
000397 940e 08a2 	CALL _sprintf
000399 9660      	ADIW R28,16
                 ; 0000 00FB                 USART_put(mss);
00039a c010      	RJMP _0x49
                 ; 0000 00FC             } else{
                 _0x3F:
                 ; 0000 00FD                 sprintf(mss, "-1 %d", err_code);
00039b 01fe      	MOVW R30,R28
00039c 93fa      	ST   -Y,R31
00039d 93ea      	ST   -Y,R30
                +
00039e e9e6     +LDI R30 , LOW ( 2 * _0x0 + ( 14 ) )
00039f e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 14 ) )
                 	__POINTW1FN _0x0,14
0003a0 93fa      	ST   -Y,R31
0003a1 93ea      	ST   -Y,R30
0003a2 01fa      	MOVW R30,R20
0003a3 940e 0e96 	CALL __CWD1
0003a5 940e 0f5a 	CALL __PUTPARD1
0003a7 e084      	LDI  R24,4
0003a8 940e 08a2 	CALL _sprintf
0003aa 9628      	ADIW R28,8
                 ; 0000 00FE                 USART_put(mss);
                 _0x49:
0003ab 01de      	MOVW R26,R28
0003ac dd32      	RCALL _USART_put
                 ; 0000 00FF             }
                 ; 0000 0100         }
                 ; 0000 0101         // LCD update
                 ; 0000 0102         LCD_clear();
                 _0x3E:
0003ad ddc7      	RCALL _LCD_clear
                 ; 0000 0103         sprintf(mss, "T:%doC, H:%d%%", temp, humidity);
0003ae 01fe      	MOVW R30,R28
0003af 93fa      	ST   -Y,R31
0003b0 93ea      	ST   -Y,R30
                +
0003b1 e9ec     +LDI R30 , LOW ( 2 * _0x0 + ( 20 ) )
0003b2 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 20 ) )
                 	__POINTW1FN _0x0,20
0003b3 93fa      	ST   -Y,R31
0003b4 93ea      	ST   -Y,R30
0003b5 01f8      	MOVW R30,R16
0003b6 940e 0e96 	CALL __CWD1
0003b8 940e 0f5a 	CALL __PUTPARD1
0003ba 01f9      	MOVW R30,R18
0003bb 940e 0e96 	CALL __CWD1
0003bd 940e 0f5a 	CALL __PUTPARD1
0003bf e088      	LDI  R24,8
0003c0 940e 08a2 	CALL _sprintf
0003c2 962c      	ADIW R28,12
                 ; 0000 0104         LCD_print(mss);
0003c3 01de      	MOVW R26,R28
0003c4 ddb9      	RCALL _LCD_print
                 ; 0000 0105         sprintf(mss, "L:%4.2f%%", light*100.0/1024);
0003c5 01fe      	MOVW R30,R28
0003c6 93fa      	ST   -Y,R31
0003c7 93ea      	ST   -Y,R30
                +
0003c8 eaeb     +LDI R30 , LOW ( 2 * _0x0 + ( 35 ) )
0003c9 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 35 ) )
                 	__POINTW1FN _0x0,35
0003ca 93fa      	ST   -Y,R31
0003cb 93ea      	ST   -Y,R30
0003cc adeb      	LDD  R30,Y+59
0003cd adfc      	LDD  R31,Y+59+1
0003ce 940e 0e96 	CALL __CWD1
0003d0 940e 0d36 	CALL __CDF1
                +
0003d2 e0a0     +LDI R26 , LOW ( 0x42C80000 )
0003d3 e0b0     +LDI R27 , HIGH ( 0x42C80000 )
0003d4 ec88     +LDI R24 , BYTE3 ( 0x42C80000 )
0003d5 e492     +LDI R25 , BYTE4 ( 0x42C80000 )
                 	__GETD2N 0x42C80000
0003d6 940e 0dc0 	CALL __MULF12
0003d8 01df      	MOVW R26,R30
0003d9 01cb      	MOVW R24,R22
                +
0003da e0e0     +LDI R30 , LOW ( 0x44800000 )
0003db e0f0     +LDI R31 , HIGH ( 0x44800000 )
0003dc e860     +LDI R22 , BYTE3 ( 0x44800000 )
0003dd e474     +LDI R23 , BYTE4 ( 0x44800000 )
                 	__GETD1N 0x44800000
0003de 940e 0e0e 	CALL __DIVF21
0003e0 940e 0f5a 	CALL __PUTPARD1
0003e2 e084      	LDI  R24,4
0003e3 940e 08a2 	CALL _sprintf
0003e5 9628      	ADIW R28,8
                 ; 0000 0106         LCD_print_pos(1, 0, mss);
0003e6 e0e1      	LDI  R30,LOW(1)
0003e7 93ea      	ST   -Y,R30
0003e8 e0e0      	LDI  R30,LOW(0)
0003e9 93ea      	ST   -Y,R30
0003ea 01de      	MOVW R26,R28
0003eb 9612      	ADIW R26,2
0003ec ddd1      	RCALL _LCD_print_pos
                 ; 0000 0107 
                 ; 0000 0108         // check threshold
                 ; 0000 0109         PORTB.2 = temp_threshold < temp;
0003ed 01f8      	MOVW R30,R16
0003ee a9ad      	LDD  R26,Y+53
0003ef a9be      	LDD  R27,Y+53+1
0003f0 940e 0e9b 	CALL __LTW12
0003f2 30e0      	CPI  R30,0
0003f3 f411      	BRNE _0x41
0003f4 982a      	CBI  0x5,2
0003f5 c001      	RJMP _0x42
                 _0x41:
0003f6 9a2a      	SBI  0x5,2
                 _0x42:
                 ; 0000 010A         PORTB.3 = humidity_threshold < humidity;
0003f7 01f9      	MOVW R30,R18
0003f8 a9ab      	LDD  R26,Y+51
0003f9 a9bc      	LDD  R27,Y+51+1
0003fa 940e 0e9b 	CALL __LTW12
0003fc 30e0      	CPI  R30,0
0003fd f411      	BRNE _0x43
0003fe 982b      	CBI  0x5,3
0003ff c001      	RJMP _0x44
                 _0x43:
000400 9a2b      	SBI  0x5,3
                 _0x44:
                 ; 0000 010B         PORTB.4 = light_threshold > light;
000401 a9ef      	LDD  R30,Y+55
000402 adf8      	LDD  R31,Y+55+1
000403 a9a9      	LDD  R26,Y+49
000404 a9ba      	LDD  R27,Y+49+1
000405 940e 0ea1 	CALL __GTW12
000407 30e0      	CPI  R30,0
000408 f411      	BRNE _0x45
000409 982c      	CBI  0x5,4
00040a c001      	RJMP _0x46
                 _0x45:
00040b 9a2c      	SBI  0x5,4
                 _0x46:
                 ; 0000 010C 
                 ; 0000 010D 		delay_ms(100);
00040c e6a4      	LDI  R26,LOW(100)
00040d e0b0      	LDI  R27,0
00040e 940e 0cc0 	CALL _delay_ms
                 ; 0000 010E 	}
000410 ce81      	RJMP _0x30
                 ; 0000 010F }
                 _0x47:
000411 cfff      	RJMP _0x47
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
000412 93ba      	ST   -Y,R27
000413 93aa      	ST   -Y,R26
000414 931a      	ST   -Y,R17
000415 930a      	ST   -Y,R16
000416 81aa      	LDD  R26,Y+2
000417 81bb      	LDD  R27,Y+2+1
000418 9612      	ADIW R26,2
000419 940e 0f3c 	CALL __GETW1P
00041b 9730      	SBIW R30,0
00041c f159      	BREQ _0x2000016
00041d 81aa      	LDD  R26,Y+2
00041e 81bb      	LDD  R27,Y+2+1
00041f 9614      	ADIW R26,4
000420 940e 0f3c 	CALL __GETW1P
000422 018f      	MOVW R16,R30
000423 9730      	SBIW R30,0
000424 f061      	BREQ _0x2000018
                +
000425 3002     +CPI R16 , LOW ( 2 )
000426 e0e0     +LDI R30 , HIGH ( 2 )
000427 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000428 f098      	BRLO _0x2000019
000429 01f8      	MOVW R30,R16
00042a 9731      	SBIW R30,1
00042b 018f      	MOVW R16,R30
                +
00042c 81aa     +LDD R26 , Y + 2
00042d 81bb     +LDD R27 , Y + 2 + 1
00042e 9614     +ADIW R26 , 4
00042f 93ed     +ST X + , R30
000430 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000018:
000431 81aa      	LDD  R26,Y+2
000432 81bb      	LDD  R27,Y+2+1
000433 9612      	ADIW R26,2
000434 91ed      	LD   R30,X+
000435 91fd      	LD   R31,X+
000436 9631      	ADIW R30,1
000437 93fe      	ST   -X,R31
000438 93ee      	ST   -X,R30
000439 9731      	SBIW R30,1
00043a 81ac      	LDD  R26,Y+4
00043b 83a0      	STD  Z+0,R26
                 _0x2000019:
00043c 81aa      	LDD  R26,Y+2
00043d 81bb      	LDD  R27,Y+2+1
00043e 940e 0f3c 	CALL __GETW1P
000440 23ff      	TST  R31
000441 f02a      	BRMI _0x200001A
000442 91ed      	LD   R30,X+
000443 91fd      	LD   R31,X+
000444 9631      	ADIW R30,1
000445 93fe      	ST   -X,R31
000446 93ee      	ST   -X,R30
                 _0x200001A:
000447 c006      	RJMP _0x200001B
                 _0x2000016:
000448 81aa      	LDD  R26,Y+2
000449 81bb      	LDD  R27,Y+2+1
00044a efef      	LDI  R30,LOW(65535)
00044b efff      	LDI  R31,HIGH(65535)
00044c 93ed      	ST   X+,R30
00044d 93fc      	ST   X,R31
                 _0x200001B:
00044e 8119      	LDD  R17,Y+1
00044f 8108      	LDD  R16,Y+0
000450 940c 0af7 	JMP  _0x20C0004
                 ; .FEND
                 __ftoe_G100:
                 ; .FSTART __ftoe_G100
000452 93ba      	ST   -Y,R27
000453 93aa      	ST   -Y,R26
000454 9724      	SBIW R28,4
000455 e0e0      	LDI  R30,LOW(0)
000456 83e8      	ST   Y,R30
000457 83e9      	STD  Y+1,R30
000458 e8e0      	LDI  R30,LOW(128)
000459 83ea      	STD  Y+2,R30
00045a e3ef      	LDI  R30,LOW(63)
00045b 83eb      	STD  Y+3,R30
00045c 940e 0fa0 	CALL __SAVELOCR4
00045e 85ee      	LDD  R30,Y+14
00045f 85ff      	LDD  R31,Y+14+1
000460 3fef      	CPI  R30,LOW(0xFFFF)
000461 efaf      	LDI  R26,HIGH(0xFFFF)
000462 07fa      	CPC  R31,R26
000463 f449      	BRNE _0x200001F
000464 85e8      	LDD  R30,Y+8
000465 85f9      	LDD  R31,Y+8+1
000466 93fa      	ST   -Y,R31
000467 93ea      	ST   -Y,R30
                +
000468 eba6     +LDI R26 , LOW ( 2 * _0x2000000 + ( 0 ) )
000469 e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW2FN _0x2000000,0
00046a 940e 0af9 	CALL _strcpyf
00046c c144      	RJMP _0x20C0009
                 _0x200001F:
00046d 3fef      	CPI  R30,LOW(0x7FFF)
00046e e7af      	LDI  R26,HIGH(0x7FFF)
00046f 07fa      	CPC  R31,R26
000470 f449      	BRNE _0x200001E
000471 85e8      	LDD  R30,Y+8
000472 85f9      	LDD  R31,Y+8+1
000473 93fa      	ST   -Y,R31
000474 93ea      	ST   -Y,R30
                +
000475 eba7     +LDI R26 , LOW ( 2 * _0x2000000 + ( 1 ) )
000476 e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW2FN _0x2000000,1
000477 940e 0af9 	CALL _strcpyf
000479 c137      	RJMP _0x20C0009
                 _0x200001E:
00047a 85ab      	LDD  R26,Y+11
00047b 30a7      	CPI  R26,LOW(0x7)
00047c f010      	BRLO _0x2000021
00047d e0e6      	LDI  R30,LOW(6)
00047e 87eb      	STD  Y+11,R30
                 _0x2000021:
00047f 851b      	LDD  R17,Y+11
                 _0x2000022:
000480 2fe1      	MOV  R30,R17
000481 5011      	SUBI R17,1
000482 30e0      	CPI  R30,0
000483 f079      	BREQ _0x2000024
                +
000484 81ac     +LDD R26 , Y + 4
000485 81bd     +LDD R27 , Y + 4 + 1
000486 818e     +LDD R24 , Y + 4 + 2
000487 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000488 e0e0     +LDI R30 , LOW ( 0x41200000 )
000489 e0f0     +LDI R31 , HIGH ( 0x41200000 )
00048a e260     +LDI R22 , BYTE3 ( 0x41200000 )
00048b e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00048c 940e 0dc0 	CALL __MULF12
                +
00048e 83ec     +STD Y + 4 , R30
00048f 83fd     +STD Y + 4 + 1 , R31
000490 836e     +STD Y + 4 + 2 , R22
000491 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000492 cfed      	RJMP _0x2000022
                 _0x2000024:
                +
000493 85ec     +LDD R30 , Y + 12
000494 85fd     +LDD R31 , Y + 12 + 1
000495 856e     +LDD R22 , Y + 12 + 2
000496 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000497 940e 0f9a 	CALL __CPD10
000499 f481      	BRNE _0x2000025
00049a e030      	LDI  R19,LOW(0)
                +
00049b 81ac     +LDD R26 , Y + 4
00049c 81bd     +LDD R27 , Y + 4 + 1
00049d 818e     +LDD R24 , Y + 4 + 2
00049e 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
00049f e0e0     +LDI R30 , LOW ( 0x41200000 )
0004a0 e0f0     +LDI R31 , HIGH ( 0x41200000 )
0004a1 e260     +LDI R22 , BYTE3 ( 0x41200000 )
0004a2 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0004a3 940e 0dc0 	CALL __MULF12
                +
0004a5 83ec     +STD Y + 4 , R30
0004a6 83fd     +STD Y + 4 + 1 , R31
0004a7 836e     +STD Y + 4 + 2 , R22
0004a8 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
0004a9 c07d      	RJMP _0x2000026
                 _0x2000025:
0004aa 853b      	LDD  R19,Y+11
                +
0004ab 81ec     +LDD R30 , Y + 4
0004ac 81fd     +LDD R31 , Y + 4 + 1
0004ad 816e     +LDD R22 , Y + 4 + 2
0004ae 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
0004af 85ac     +LDD R26 , Y + 12
0004b0 85bd     +LDD R27 , Y + 12 + 1
0004b1 858e     +LDD R24 , Y + 12 + 2
0004b2 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0004b3 940e 0e53 	CALL __CMPF12
0004b5 f009      	BREQ PC+2
0004b6 f408      	BRCC PC+2
0004b7 c026      	RJMP _0x2000027
                +
0004b8 81ac     +LDD R26 , Y + 4
0004b9 81bd     +LDD R27 , Y + 4 + 1
0004ba 818e     +LDD R24 , Y + 4 + 2
0004bb 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
0004bc e0e0     +LDI R30 , LOW ( 0x41200000 )
0004bd e0f0     +LDI R31 , HIGH ( 0x41200000 )
0004be e260     +LDI R22 , BYTE3 ( 0x41200000 )
0004bf e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0004c0 940e 0dc0 	CALL __MULF12
                +
0004c2 83ec     +STD Y + 4 , R30
0004c3 83fd     +STD Y + 4 + 1 , R31
0004c4 836e     +STD Y + 4 + 2 , R22
0004c5 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                 _0x2000028:
                +
0004c6 81ec     +LDD R30 , Y + 4
0004c7 81fd     +LDD R31 , Y + 4 + 1
0004c8 816e     +LDD R22 , Y + 4 + 2
0004c9 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
0004ca 85ac     +LDD R26 , Y + 12
0004cb 85bd     +LDD R27 , Y + 12 + 1
0004cc 858e     +LDD R24 , Y + 12 + 2
0004cd 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0004ce 940e 0e53 	CALL __CMPF12
0004d0 f060      	BRLO _0x200002A
                +
0004d1 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0004d2 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0004d3 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0004d4 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0004d5 940e 0dc0 	CALL __MULF12
                +
0004d7 87ec     +STD Y + 12 , R30
0004d8 87fd     +STD Y + 12 + 1 , R31
0004d9 876e     +STD Y + 12 + 2 , R22
0004da 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0004db 5f3f      	SUBI R19,-LOW(1)
0004dc cfe9      	RJMP _0x2000028
                 _0x200002A:
0004dd c025      	RJMP _0x200002B
                 _0x2000027:
                 _0x200002C:
                +
0004de 81ec     +LDD R30 , Y + 4
0004df 81fd     +LDD R31 , Y + 4 + 1
0004e0 816e     +LDD R22 , Y + 4 + 2
0004e1 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
0004e2 85ac     +LDD R26 , Y + 12
0004e3 85bd     +LDD R27 , Y + 12 + 1
0004e4 858e     +LDD R24 , Y + 12 + 2
0004e5 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0004e6 940e 0e53 	CALL __CMPF12
0004e8 f460      	BRSH _0x200002E
                +
0004e9 e0e0     +LDI R30 , LOW ( 0x41200000 )
0004ea e0f0     +LDI R31 , HIGH ( 0x41200000 )
0004eb e260     +LDI R22 , BYTE3 ( 0x41200000 )
0004ec e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0004ed 940e 0dc0 	CALL __MULF12
                +
0004ef 87ec     +STD Y + 12 , R30
0004f0 87fd     +STD Y + 12 + 1 , R31
0004f1 876e     +STD Y + 12 + 2 , R22
0004f2 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0004f3 5031      	SUBI R19,LOW(1)
0004f4 cfe9      	RJMP _0x200002C
                 _0x200002E:
                +
0004f5 81ac     +LDD R26 , Y + 4
0004f6 81bd     +LDD R27 , Y + 4 + 1
0004f7 818e     +LDD R24 , Y + 4 + 2
0004f8 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
0004f9 e0e0     +LDI R30 , LOW ( 0x41200000 )
0004fa e0f0     +LDI R31 , HIGH ( 0x41200000 )
0004fb e260     +LDI R22 , BYTE3 ( 0x41200000 )
0004fc e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0004fd 940e 0dc0 	CALL __MULF12
                +
0004ff 83ec     +STD Y + 4 , R30
000500 83fd     +STD Y + 4 + 1 , R31
000501 836e     +STD Y + 4 + 2 , R22
000502 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                 _0x200002B:
                +
000503 85ec     +LDD R30 , Y + 12
000504 85fd     +LDD R31 , Y + 12 + 1
000505 856e     +LDD R22 , Y + 12 + 2
000506 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
                +
000507 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000508 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000509 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
00050a e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
00050b 940e 0d70 	CALL __ADDF12
                +
00050d 87ec     +STD Y + 12 , R30
00050e 87fd     +STD Y + 12 + 1 , R31
00050f 876e     +STD Y + 12 + 2 , R22
000510 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
                +
000511 81ec     +LDD R30 , Y + 4
000512 81fd     +LDD R31 , Y + 4 + 1
000513 816e     +LDD R22 , Y + 4 + 2
000514 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
000515 85ac     +LDD R26 , Y + 12
000516 85bd     +LDD R27 , Y + 12 + 1
000517 858e     +LDD R24 , Y + 12 + 2
000518 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000519 940e 0e53 	CALL __CMPF12
00051b f058      	BRLO _0x200002F
                +
00051c eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00051d ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00051e ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00051f e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000520 940e 0dc0 	CALL __MULF12
                +
000522 87ec     +STD Y + 12 , R30
000523 87fd     +STD Y + 12 + 1 , R31
000524 876e     +STD Y + 12 + 2 , R22
000525 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000526 5f3f      	SUBI R19,-LOW(1)
                 _0x200002F:
                 _0x2000026:
000527 e010      	LDI  R17,LOW(0)
                 _0x2000030:
000528 85eb      	LDD  R30,Y+11
000529 17e1      	CP   R30,R17
00052a f408      	BRSH PC+2
00052b c04f      	RJMP _0x2000032
                +
00052c 81ac     +LDD R26 , Y + 4
00052d 81bd     +LDD R27 , Y + 4 + 1
00052e 818e     +LDD R24 , Y + 4 + 2
00052f 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000530 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000531 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000532 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000533 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000534 940e 0dc0 	CALL __MULF12
                +
000536 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000537 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000538 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000539 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
00053a 940e 0d70 	CALL __ADDF12
00053c 01df      	MOVW R26,R30
00053d 01cb      	MOVW R24,R22
00053e 940e 0b81 	CALL _floor
                +
000540 83ec     +STD Y + 4 , R30
000541 83fd     +STD Y + 4 + 1 , R31
000542 836e     +STD Y + 4 + 2 , R22
000543 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                +
000544 85ac     +LDD R26 , Y + 12
000545 85bd     +LDD R27 , Y + 12 + 1
000546 858e     +LDD R24 , Y + 12 + 2
000547 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000548 940e 0e0e 	CALL __DIVF21
00054a 940e 0cfd 	CALL __CFD1U
00054c 2f0e      	MOV  R16,R30
00054d 85a8      	LDD  R26,Y+8
00054e 85b9      	LDD  R27,Y+8+1
00054f 9611      	ADIW R26,1
000550 87a8      	STD  Y+8,R26
000551 87b9      	STD  Y+8+1,R27
000552 9711      	SBIW R26,1
000553 5de0      	SUBI R30,-LOW(48)
000554 93ec      	ST   X,R30
000555 2fe0      	MOV  R30,R16
000556 27ff      	CLR  R31
000557 2766      	CLR  R22
000558 2777      	CLR  R23
000559 940e 0d36 	CALL __CDF1
                +
00055b 81ac     +LDD R26 , Y + 4
00055c 81bd     +LDD R27 , Y + 4 + 1
00055d 818e     +LDD R24 , Y + 4 + 2
00055e 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00055f 940e 0dc0 	CALL __MULF12
                +
000561 85ac     +LDD R26 , Y + 12
000562 85bd     +LDD R27 , Y + 12 + 1
000563 858e     +LDD R24 , Y + 12 + 2
000564 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000565 940e 0f64 	CALL __SWAPD12
000567 940e 0d69 	CALL __SUBF12
                +
000569 87ec     +STD Y + 12 , R30
00056a 87fd     +STD Y + 12 + 1 , R31
00056b 876e     +STD Y + 12 + 2 , R22
00056c 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00056d 2fe1      	MOV  R30,R17
00056e 5f1f      	SUBI R17,-1
00056f 30e0      	CPI  R30,0
000570 f009      	BREQ _0x2000033
000571 cfb6      	RJMP _0x2000030
                 _0x2000033:
000572 85a8      	LDD  R26,Y+8
000573 85b9      	LDD  R27,Y+8+1
000574 9611      	ADIW R26,1
000575 87a8      	STD  Y+8,R26
000576 87b9      	STD  Y+8+1,R27
000577 9711      	SBIW R26,1
000578 e2ee      	LDI  R30,LOW(46)
000579 93ec      	ST   X,R30
00057a cfad      	RJMP _0x2000030
                 _0x2000032:
00057b 85e8      	LDD  R30,Y+8
00057c 85f9      	LDD  R31,Y+8+1
00057d 9631      	ADIW R30,1
00057e 87e8      	STD  Y+8,R30
00057f 87f9      	STD  Y+8+1,R31
000580 9731      	SBIW R30,1
000581 85aa      	LDD  R26,Y+10
000582 83a0      	STD  Z+0,R26
000583 3030      	CPI  R19,0
000584 f42c      	BRGE _0x2000034
000585 9531      	NEG  R19
000586 85a8      	LDD  R26,Y+8
000587 85b9      	LDD  R27,Y+8+1
000588 e2ed      	LDI  R30,LOW(45)
000589 c003      	RJMP _0x200011C
                 _0x2000034:
00058a 85a8      	LDD  R26,Y+8
00058b 85b9      	LDD  R27,Y+8+1
00058c e2eb      	LDI  R30,LOW(43)
                 _0x200011C:
00058d 93ec      	ST   X,R30
00058e 85e8      	LDD  R30,Y+8
00058f 85f9      	LDD  R31,Y+8+1
000590 9631      	ADIW R30,1
000591 87e8      	STD  Y+8,R30
000592 87f9      	STD  Y+8+1,R31
000593 9631      	ADIW R30,1
000594 87e8      	STD  Y+8,R30
000595 87f9      	STD  Y+8+1,R31
000596 9731      	SBIW R30,1
000597 01bf      	MOVW R22,R30
000598 2fa3      	MOV  R26,R19
000599 e0ea      	LDI  R30,LOW(10)
00059a 940e 0ed5 	CALL __DIVB21
00059c 5de0      	SUBI R30,-LOW(48)
00059d 01db      	MOVW R26,R22
00059e 93ec      	ST   X,R30
00059f 85e8      	LDD  R30,Y+8
0005a0 85f9      	LDD  R31,Y+8+1
0005a1 9631      	ADIW R30,1
0005a2 87e8      	STD  Y+8,R30
0005a3 87f9      	STD  Y+8+1,R31
0005a4 9731      	SBIW R30,1
0005a5 01bf      	MOVW R22,R30
0005a6 2fa3      	MOV  R26,R19
0005a7 e0ea      	LDI  R30,LOW(10)
0005a8 940e 0f12 	CALL __MODB21
0005aa 5de0      	SUBI R30,-LOW(48)
0005ab 01db      	MOVW R26,R22
0005ac 93ec      	ST   X,R30
0005ad 85a8      	LDD  R26,Y+8
0005ae 85b9      	LDD  R27,Y+8+1
0005af e0e0      	LDI  R30,LOW(0)
0005b0 93ec      	ST   X,R30
                 _0x20C0009:
0005b1 940e 0fa7 	CALL __LOADLOCR4
0005b3 9660      	ADIW R28,16
0005b4 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
0005b5 93ba      	ST   -Y,R27
0005b6 93aa      	ST   -Y,R26
0005b7 97ef      	SBIW R28,63
0005b8 9761      	SBIW R28,17
0005b9 940e 0f9e 	CALL __SAVELOCR6
0005bb e010      	LDI  R17,0
                +
0005bc 01fe     +MOVW R30 , R28
0005bd 5ae8     +SUBI R30 , LOW ( - 88 )
0005be 4fff     +SBCI R31 , HIGH ( - 88 )
0005bf 9001     +LD R0 , Z +
0005c0 81f0     +LD R31 , Z
0005c1 2de0     +MOV R30 , R0
                 	__GETW1SX 88
0005c2 87e8      	STD  Y+8,R30
0005c3 87f9      	STD  Y+8+1,R31
                +
0005c4 01fe     +MOVW R30 , R28
0005c5 5aea     +SUBI R30 , LOW ( - 86 )
0005c6 4fff     +SBCI R31 , HIGH ( - 86 )
0005c7 9001     +LD R0 , Z +
0005c8 81f0     +LD R31 , Z
0005c9 2de0     +MOV R30 , R0
                 	__GETW1SX 86
0005ca 83ee      	STD  Y+6,R30
0005cb 83ff      	STD  Y+6+1,R31
0005cc 81ae      	LDD  R26,Y+6
0005cd 81bf      	LDD  R27,Y+6+1
0005ce e0e0      	LDI  R30,LOW(0)
0005cf e0f0      	LDI  R31,HIGH(0)
0005d0 93ed      	ST   X+,R30
0005d1 93fc      	ST   X,R31
                 _0x2000036:
0005d2 01de      	MOVW R26,R28
0005d3 5aa4      	SUBI R26,LOW(-(92))
0005d4 4fbf      	SBCI R27,HIGH(-(92))
0005d5 91ed      	LD   R30,X+
0005d6 91fd      	LD   R31,X+
0005d7 9631      	ADIW R30,1
0005d8 93fe      	ST   -X,R31
0005d9 93ee      	ST   -X,R30
0005da 9731      	SBIW R30,1
0005db 91e4      	LPM  R30,Z
0005dc 2f2e      	MOV  R18,R30
0005dd 30e0      	CPI  R30,0
0005de f409      	BRNE PC+2
0005df c2b9      	RJMP _0x2000038
0005e0 2fe1      	MOV  R30,R17
0005e1 30e0      	CPI  R30,0
0005e2 f459      	BRNE _0x200003C
0005e3 3225      	CPI  R18,37
0005e4 f411      	BRNE _0x200003D
0005e5 e011      	LDI  R17,LOW(1)
0005e6 c006      	RJMP _0x200003E
                 _0x200003D:
0005e7 932a      	ST   -Y,R18
0005e8 81af      	LDD  R26,Y+7
0005e9 85b8      	LDD  R27,Y+7+1
0005ea 85e9      	LDD  R30,Y+9
0005eb 85fa      	LDD  R31,Y+9+1
0005ec 9509      	ICALL
                 _0x200003E:
0005ed c2aa      	RJMP _0x200003B
                 _0x200003C:
0005ee 30e1      	CPI  R30,LOW(0x1)
0005ef f4e1      	BRNE _0x200003F
0005f0 3225      	CPI  R18,37
0005f1 f439      	BRNE _0x2000040
0005f2 932a      	ST   -Y,R18
0005f3 81af      	LDD  R26,Y+7
0005f4 85b8      	LDD  R27,Y+7+1
0005f5 85e9      	LDD  R30,Y+9
0005f6 85fa      	LDD  R31,Y+9+1
0005f7 9509      	ICALL
0005f8 c29e      	RJMP _0x200011D
                 _0x2000040:
0005f9 e012      	LDI  R17,LOW(2)
0005fa e0e0      	LDI  R30,LOW(0)
0005fb 8bed      	STD  Y+21,R30
0005fc e000      	LDI  R16,LOW(0)
0005fd 322d      	CPI  R18,45
0005fe f411      	BRNE _0x2000041
0005ff e001      	LDI  R16,LOW(1)
000600 c297      	RJMP _0x200003B
                 _0x2000041:
000601 322b      	CPI  R18,43
000602 f419      	BRNE _0x2000042
000603 e2eb      	LDI  R30,LOW(43)
000604 8bed      	STD  Y+21,R30
000605 c292      	RJMP _0x200003B
                 _0x2000042:
000606 3220      	CPI  R18,32
000607 f419      	BRNE _0x2000043
000608 e2e0      	LDI  R30,LOW(32)
000609 8bed      	STD  Y+21,R30
00060a c28d      	RJMP _0x200003B
                 _0x2000043:
00060b c002      	RJMP _0x2000044
                 _0x200003F:
00060c 30e2      	CPI  R30,LOW(0x2)
00060d f439      	BRNE _0x2000045
                 _0x2000044:
00060e e050      	LDI  R21,LOW(0)
00060f e013      	LDI  R17,LOW(3)
000610 3320      	CPI  R18,48
000611 f411      	BRNE _0x2000046
000612 6800      	ORI  R16,LOW(128)
000613 c284      	RJMP _0x200003B
                 _0x2000046:
000614 c002      	RJMP _0x2000047
                 _0x2000045:
000615 30e3      	CPI  R30,LOW(0x3)
000616 f491      	BRNE _0x2000048
                 _0x2000047:
000617 3320      	CPI  R18,48
000618 f010      	BRLO _0x200004A
000619 332a      	CPI  R18,58
00061a f008      	BRLO _0x200004B
                 _0x200004A:
00061b c007      	RJMP _0x2000049
                 _0x200004B:
00061c e0aa      	LDI  R26,LOW(10)
00061d 9f5a      	MUL  R21,R26
00061e 2d50      	MOV  R21,R0
00061f 2fe2      	MOV  R30,R18
000620 53e0      	SUBI R30,LOW(48)
000621 0f5e      	ADD  R21,R30
000622 c275      	RJMP _0x200003B
                 _0x2000049:
000623 e040      	LDI  R20,LOW(0)
000624 322e      	CPI  R18,46
000625 f411      	BRNE _0x200004C
000626 e014      	LDI  R17,LOW(4)
000627 c270      	RJMP _0x200003B
                 _0x200004C:
000628 c00f      	RJMP _0x200004D
                 _0x2000048:
000629 30e4      	CPI  R30,LOW(0x4)
00062a f499      	BRNE _0x200004F
00062b 3320      	CPI  R18,48
00062c f010      	BRLO _0x2000051
00062d 332a      	CPI  R18,58
00062e f008      	BRLO _0x2000052
                 _0x2000051:
00062f c008      	RJMP _0x2000050
                 _0x2000052:
000630 6200      	ORI  R16,LOW(32)
000631 e0aa      	LDI  R26,LOW(10)
000632 9f4a      	MUL  R20,R26
000633 2d40      	MOV  R20,R0
000634 2fe2      	MOV  R30,R18
000635 53e0      	SUBI R30,LOW(48)
000636 0f4e      	ADD  R20,R30
000637 c260      	RJMP _0x200003B
                 _0x2000050:
                 _0x200004D:
000638 362c      	CPI  R18,108
000639 f419      	BRNE _0x2000053
00063a 6002      	ORI  R16,LOW(2)
00063b e015      	LDI  R17,LOW(5)
00063c c25b      	RJMP _0x200003B
                 _0x2000053:
00063d c003      	RJMP _0x2000054
                 _0x200004F:
00063e 30e5      	CPI  R30,LOW(0x5)
00063f f009      	BREQ PC+2
000640 c257      	RJMP _0x200003B
                 _0x2000054:
000641 2fe2      	MOV  R30,R18
000642 36e3      	CPI  R30,LOW(0x63)
000643 f4a1      	BRNE _0x2000059
                +
000644 01fe     +MOVW R30 , R28
000645 5ae6     +SUBI R30 , LOW ( - 90 )
000646 4fff     +SBCI R31 , HIGH ( - 90 )
000647 9001     +LD R0 , Z +
000648 81f0     +LD R31 , Z
000649 2de0     +MOV R30 , R0
                 	__GETW1SX 90
00064a 9734      	SBIW R30,4
                +
00064b 01de     +MOVW R26 , R28
00064c 5aa6     +SUBI R26 , LOW ( - 90 )
00064d 4fbf     +SBCI R27 , HIGH ( - 90 )
00064e 93ed     +ST X + , R30
00064f 93fc     +ST X , R31
                 	__PUTW1SX 90
000650 81a4      	LDD  R26,Z+4
000651 93aa      	ST   -Y,R26
000652 81af      	LDD  R26,Y+7
000653 85b8      	LDD  R27,Y+7+1
000654 85e9      	LDD  R30,Y+9
000655 85fa      	LDD  R31,Y+9+1
000656 9509      	ICALL
000657 c23f      	RJMP _0x200005A
                 _0x2000059:
000658 34e5      	CPI  R30,LOW(0x45)
000659 f011      	BREQ _0x200005D
00065a 36e5      	CPI  R30,LOW(0x65)
00065b f409      	BRNE _0x200005E
                 _0x200005D:
00065c c003      	RJMP _0x200005F
                 _0x200005E:
00065d 36e6      	CPI  R30,LOW(0x66)
00065e f009      	BREQ PC+2
00065f c068      	RJMP _0x2000060
                 _0x200005F:
000660 01fe      	MOVW R30,R28
000661 9676      	ADIW R30,22
000662 87ee      	STD  Y+14,R30
000663 87ff      	STD  Y+14+1,R31
                +
000664 01de     +MOVW R26 , R28
000665 5aa6     +SUBI R26 , LOW ( - 90 )
000666 4fbf     +SBCI R27 , HIGH ( - 90 )
000667 900d     +LD R0 , X +
000668 91bc     +LD R27 , X
000669 2da0     +MOV R26 , R0
                 	__GETW2SX 90
00066a 940e 0f40 	CALL __GETD1P
                +
00066c 87ea     +STD Y + 10 , R30
00066d 87fb     +STD Y + 10 + 1 , R31
00066e 876c     +STD Y + 10 + 2 , R22
00066f 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
                +
000670 01fe     +MOVW R30 , R28
000671 5ae6     +SUBI R30 , LOW ( - 90 )
000672 4fff     +SBCI R31 , HIGH ( - 90 )
000673 9001     +LD R0 , Z +
000674 81f0     +LD R31 , Z
000675 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000676 9734      	SBIW R30,4
                +
000677 01de     +MOVW R26 , R28
000678 5aa6     +SUBI R26 , LOW ( - 90 )
000679 4fbf     +SBCI R27 , HIGH ( - 90 )
00067a 93ed     +ST X + , R30
00067b 93fc     +ST X , R31
                 	__PUTW1SX 90
00067c 85ad      	LDD  R26,Y+13
00067d 23aa      	TST  R26
00067e f032      	BRMI _0x2000061
00067f 89ad      	LDD  R26,Y+21
000680 32ab      	CPI  R26,LOW(0x2B)
000681 f079      	BREQ _0x2000063
000682 32a0      	CPI  R26,LOW(0x20)
000683 f0b9      	BREQ _0x2000065
000684 c01e      	RJMP _0x2000066
                 _0x2000061:
                +
000685 85ea     +LDD R30 , Y + 10
000686 85fb     +LDD R31 , Y + 10 + 1
000687 856c     +LDD R22 , Y + 10 + 2
000688 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000689 940e 0cca 	CALL __ANEGF1
                +
00068b 87ea     +STD Y + 10 , R30
00068c 87fb     +STD Y + 10 + 1 , R31
00068d 876c     +STD Y + 10 + 2 , R22
00068e 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00068f e2ed      	LDI  R30,LOW(45)
000690 8bed      	STD  Y+21,R30
                 _0x2000063:
000691 ff07      	SBRS R16,7
000692 c008      	RJMP _0x2000067
000693 89ed      	LDD  R30,Y+21
000694 93ea      	ST   -Y,R30
000695 81af      	LDD  R26,Y+7
000696 85b8      	LDD  R27,Y+7+1
000697 85e9      	LDD  R30,Y+9
000698 85fa      	LDD  R31,Y+9+1
000699 9509      	ICALL
00069a c008      	RJMP _0x2000068
                 _0x2000067:
                 _0x2000065:
00069b 85ee      	LDD  R30,Y+14
00069c 85ff      	LDD  R31,Y+14+1
00069d 9631      	ADIW R30,1
00069e 87ee      	STD  Y+14,R30
00069f 87ff      	STD  Y+14+1,R31
0006a0 9731      	SBIW R30,1
0006a1 89ad      	LDD  R26,Y+21
0006a2 83a0      	STD  Z+0,R26
                 _0x2000068:
                 _0x2000066:
0006a3 ff05      	SBRS R16,5
0006a4 e046      	LDI  R20,LOW(6)
0006a5 3626      	CPI  R18,102
0006a6 f461      	BRNE _0x200006A
                +
0006a7 85ea     +LDD R30 , Y + 10
0006a8 85fb     +LDD R31 , Y + 10 + 1
0006a9 856c     +LDD R22 , Y + 10 + 2
0006aa 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
0006ab 940e 0f5a 	CALL __PUTPARD1
0006ad 934a      	ST   -Y,R20
0006ae 89ab      	LDD  R26,Y+19
0006af 89bc      	LDD  R27,Y+19+1
0006b0 940e 0b98 	CALL _ftoa
0006b2 c00b      	RJMP _0x200006B
                 _0x200006A:
                +
0006b3 85ea     +LDD R30 , Y + 10
0006b4 85fb     +LDD R31 , Y + 10 + 1
0006b5 856c     +LDD R22 , Y + 10 + 2
0006b6 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
0006b7 940e 0f5a 	CALL __PUTPARD1
0006b9 934a      	ST   -Y,R20
0006ba 932a      	ST   -Y,R18
0006bb 89ac      	LDD  R26,Y+20
0006bc 89bd      	LDD  R27,Y+20+1
0006bd dd94      	RCALL __ftoe_G100
                 _0x200006B:
0006be 01fe      	MOVW R30,R28
0006bf 9676      	ADIW R30,22
0006c0 87ee      	STD  Y+14,R30
0006c1 87ff      	STD  Y+14+1,R31
0006c2 85ae      	LDD  R26,Y+14
0006c3 85bf      	LDD  R27,Y+14+1
0006c4 940e 0b06 	CALL _strlen
0006c6 2f1e      	MOV  R17,R30
0006c7 c045      	RJMP _0x200006C
                 _0x2000060:
0006c8 37e3      	CPI  R30,LOW(0x73)
0006c9 f4e9      	BRNE _0x200006E
                +
0006ca 01fe     +MOVW R30 , R28
0006cb 5ae6     +SUBI R30 , LOW ( - 90 )
0006cc 4fff     +SBCI R31 , HIGH ( - 90 )
0006cd 9001     +LD R0 , Z +
0006ce 81f0     +LD R31 , Z
0006cf 2de0     +MOV R30 , R0
                 	__GETW1SX 90
0006d0 9734      	SBIW R30,4
                +
0006d1 01de     +MOVW R26 , R28
0006d2 5aa6     +SUBI R26 , LOW ( - 90 )
0006d3 4fbf     +SBCI R27 , HIGH ( - 90 )
0006d4 93ed     +ST X + , R30
0006d5 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
0006d6 01de     +MOVW R26 , R28
0006d7 5aa6     +SUBI R26 , LOW ( - 90 )
0006d8 4fbf     +SBCI R27 , HIGH ( - 90 )
0006d9 900d     +LD R0 , X +
0006da 91bc     +LD R27 , X
0006db 2da0     +MOV R26 , R0
                 	__GETW2SX 90
0006dc 9614      	ADIW R26,4
0006dd 940e 0f3c 	CALL __GETW1P
0006df 87ee      	STD  Y+14,R30
0006e0 87ff      	STD  Y+14+1,R31
0006e1 85ae      	LDD  R26,Y+14
0006e2 85bf      	LDD  R27,Y+14+1
0006e3 940e 0b06 	CALL _strlen
0006e5 2f1e      	MOV  R17,R30
0006e6 c01f      	RJMP _0x200006F
                 _0x200006E:
0006e7 37e0      	CPI  R30,LOW(0x70)
0006e8 f549      	BRNE _0x2000071
                +
0006e9 01fe     +MOVW R30 , R28
0006ea 5ae6     +SUBI R30 , LOW ( - 90 )
0006eb 4fff     +SBCI R31 , HIGH ( - 90 )
0006ec 9001     +LD R0 , Z +
0006ed 81f0     +LD R31 , Z
0006ee 2de0     +MOV R30 , R0
                 	__GETW1SX 90
0006ef 9734      	SBIW R30,4
                +
0006f0 01de     +MOVW R26 , R28
0006f1 5aa6     +SUBI R26 , LOW ( - 90 )
0006f2 4fbf     +SBCI R27 , HIGH ( - 90 )
0006f3 93ed     +ST X + , R30
0006f4 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
0006f5 01de     +MOVW R26 , R28
0006f6 5aa6     +SUBI R26 , LOW ( - 90 )
0006f7 4fbf     +SBCI R27 , HIGH ( - 90 )
0006f8 900d     +LD R0 , X +
0006f9 91bc     +LD R27 , X
0006fa 2da0     +MOV R26 , R0
                 	__GETW2SX 90
0006fb 9614      	ADIW R26,4
0006fc 940e 0f3c 	CALL __GETW1P
0006fe 87ee      	STD  Y+14,R30
0006ff 87ff      	STD  Y+14+1,R31
000700 85ae      	LDD  R26,Y+14
000701 85bf      	LDD  R27,Y+14+1
000702 940e 0b12 	CALL _strlenf
000704 2f1e      	MOV  R17,R30
000705 6008      	ORI  R16,LOW(8)
                 _0x200006F:
000706 770f      	ANDI R16,LOW(127)
000707 3040      	CPI  R20,0
000708 f011      	BREQ _0x2000073
000709 1741      	CP   R20,R17
00070a f008      	BRLO _0x2000074
                 _0x2000073:
00070b c001      	RJMP _0x2000072
                 _0x2000074:
00070c 2f14      	MOV  R17,R20
                 _0x2000072:
                 _0x200006C:
00070d e040      	LDI  R20,LOW(0)
00070e e0e0      	LDI  R30,LOW(0)
00070f 8bec      	STD  Y+20,R30
000710 e030      	LDI  R19,LOW(0)
000711 c0a9      	RJMP _0x2000075
                 _0x2000071:
000712 36e4      	CPI  R30,LOW(0x64)
000713 f011      	BREQ _0x2000078
000714 36e9      	CPI  R30,LOW(0x69)
000715 f411      	BRNE _0x2000079
                 _0x2000078:
000716 6004      	ORI  R16,LOW(4)
000717 c002      	RJMP _0x200007A
                 _0x2000079:
000718 37e5      	CPI  R30,LOW(0x75)
000719 f4c1      	BRNE _0x200007B
                 _0x200007A:
00071a e0ea      	LDI  R30,LOW(10)
00071b 8bec      	STD  Y+20,R30
00071c ff01      	SBRS R16,1
00071d c00a      	RJMP _0x200007C
                +
00071e e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
00071f ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
000720 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
000721 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
                +
000722 8be8     +STD Y + 16 , R30
000723 8bf9     +STD Y + 16 + 1 , R31
000724 8b6a     +STD Y + 16 + 2 , R22
000725 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000726 e01a      	LDI  R17,LOW(10)
000727 c028      	RJMP _0x200007D
                 _0x200007C:
                +
000728 e1e0     +LDI R30 , LOW ( 0x2710 )
000729 e2f7     +LDI R31 , HIGH ( 0x2710 )
00072a e060     +LDI R22 , BYTE3 ( 0x2710 )
00072b e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
                +
00072c 8be8     +STD Y + 16 , R30
00072d 8bf9     +STD Y + 16 + 1 , R31
00072e 8b6a     +STD Y + 16 + 2 , R22
00072f 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000730 e015      	LDI  R17,LOW(5)
000731 c01e      	RJMP _0x200007D
                 _0x200007B:
000732 35e8      	CPI  R30,LOW(0x58)
000733 f411      	BRNE _0x200007F
000734 6008      	ORI  R16,LOW(8)
000735 c003      	RJMP _0x2000080
                 _0x200007F:
000736 37e8      	CPI  R30,LOW(0x78)
000737 f009      	BREQ PC+2
000738 c15e      	RJMP _0x20000BE
                 _0x2000080:
000739 e1e0      	LDI  R30,LOW(16)
00073a 8bec      	STD  Y+20,R30
00073b ff01      	SBRS R16,1
00073c c00a      	RJMP _0x2000082
                +
00073d e0e0     +LDI R30 , LOW ( 0x10000000 )
00073e e0f0     +LDI R31 , HIGH ( 0x10000000 )
00073f e060     +LDI R22 , BYTE3 ( 0x10000000 )
000740 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
                +
000741 8be8     +STD Y + 16 , R30
000742 8bf9     +STD Y + 16 + 1 , R31
000743 8b6a     +STD Y + 16 + 2 , R22
000744 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000745 e018      	LDI  R17,LOW(8)
000746 c009      	RJMP _0x200007D
                 _0x2000082:
                +
000747 e0e0     +LDI R30 , LOW ( 0x1000 )
000748 e1f0     +LDI R31 , HIGH ( 0x1000 )
000749 e060     +LDI R22 , BYTE3 ( 0x1000 )
00074a e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
                +
00074b 8be8     +STD Y + 16 , R30
00074c 8bf9     +STD Y + 16 + 1 , R31
00074d 8b6a     +STD Y + 16 + 2 , R22
00074e 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
00074f e014      	LDI  R17,LOW(4)
                 _0x200007D:
000750 3040      	CPI  R20,0
000751 f011      	BREQ _0x2000083
000752 770f      	ANDI R16,LOW(127)
000753 c001      	RJMP _0x2000084
                 _0x2000083:
000754 e041      	LDI  R20,LOW(1)
                 _0x2000084:
000755 ff01      	SBRS R16,1
000756 c016      	RJMP _0x2000085
                +
000757 01fe     +MOVW R30 , R28
000758 5ae6     +SUBI R30 , LOW ( - 90 )
000759 4fff     +SBCI R31 , HIGH ( - 90 )
00075a 9001     +LD R0 , Z +
00075b 81f0     +LD R31 , Z
00075c 2de0     +MOV R30 , R0
                 	__GETW1SX 90
00075d 9734      	SBIW R30,4
                +
00075e 01de     +MOVW R26 , R28
00075f 5aa6     +SUBI R26 , LOW ( - 90 )
000760 4fbf     +SBCI R27 , HIGH ( - 90 )
000761 93ed     +ST X + , R30
000762 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
000763 01de     +MOVW R26 , R28
000764 5aa6     +SUBI R26 , LOW ( - 90 )
000765 4fbf     +SBCI R27 , HIGH ( - 90 )
000766 900d     +LD R0 , X +
000767 91bc     +LD R27 , X
000768 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000769 9614      	ADIW R26,4
00076a 940e 0f40 	CALL __GETD1P
00076c c031      	RJMP _0x200011E
                 _0x2000085:
00076d ff02      	SBRS R16,2
00076e c018      	RJMP _0x2000087
                +
00076f 01fe     +MOVW R30 , R28
000770 5ae6     +SUBI R30 , LOW ( - 90 )
000771 4fff     +SBCI R31 , HIGH ( - 90 )
000772 9001     +LD R0 , Z +
000773 81f0     +LD R31 , Z
000774 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000775 9734      	SBIW R30,4
                +
000776 01de     +MOVW R26 , R28
000777 5aa6     +SUBI R26 , LOW ( - 90 )
000778 4fbf     +SBCI R27 , HIGH ( - 90 )
000779 93ed     +ST X + , R30
00077a 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
00077b 01de     +MOVW R26 , R28
00077c 5aa6     +SUBI R26 , LOW ( - 90 )
00077d 4fbf     +SBCI R27 , HIGH ( - 90 )
00077e 900d     +LD R0 , X +
00077f 91bc     +LD R27 , X
000780 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000781 9614      	ADIW R26,4
000782 940e 0f3c 	CALL __GETW1P
000784 940e 0e96 	CALL __CWD1
000786 c017      	RJMP _0x200011E
                 _0x2000087:
                +
000787 01fe     +MOVW R30 , R28
000788 5ae6     +SUBI R30 , LOW ( - 90 )
000789 4fff     +SBCI R31 , HIGH ( - 90 )
00078a 9001     +LD R0 , Z +
00078b 81f0     +LD R31 , Z
00078c 2de0     +MOV R30 , R0
                 	__GETW1SX 90
00078d 9734      	SBIW R30,4
                +
00078e 01de     +MOVW R26 , R28
00078f 5aa6     +SUBI R26 , LOW ( - 90 )
000790 4fbf     +SBCI R27 , HIGH ( - 90 )
000791 93ed     +ST X + , R30
000792 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
000793 01de     +MOVW R26 , R28
000794 5aa6     +SUBI R26 , LOW ( - 90 )
000795 4fbf     +SBCI R27 , HIGH ( - 90 )
000796 900d     +LD R0 , X +
000797 91bc     +LD R27 , X
000798 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000799 9614      	ADIW R26,4
00079a 940e 0f3c 	CALL __GETW1P
00079c 2766      	CLR  R22
00079d 2777      	CLR  R23
                 _0x200011E:
                +
00079e 87ea     +STD Y + 10 , R30
00079f 87fb     +STD Y + 10 + 1 , R31
0007a0 876c     +STD Y + 10 + 2 , R22
0007a1 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0007a2 ff02      	SBRS R16,2
0007a3 c016      	RJMP _0x2000089
0007a4 85ad      	LDD  R26,Y+13
0007a5 23aa      	TST  R26
0007a6 f462      	BRPL _0x200008A
                +
0007a7 85ea     +LDD R30 , Y + 10
0007a8 85fb     +LDD R31 , Y + 10 + 1
0007a9 856c     +LDD R22 , Y + 10 + 2
0007aa 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
0007ab 940e 0e80 	CALL __ANEGD1
                +
0007ad 87ea     +STD Y + 10 , R30
0007ae 87fb     +STD Y + 10 + 1 , R31
0007af 876c     +STD Y + 10 + 2 , R22
0007b0 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0007b1 e2ed      	LDI  R30,LOW(45)
0007b2 8bed      	STD  Y+21,R30
                 _0x200008A:
0007b3 89ed      	LDD  R30,Y+21
0007b4 30e0      	CPI  R30,0
0007b5 f019      	BREQ _0x200008B
0007b6 5f1f      	SUBI R17,-LOW(1)
0007b7 5f4f      	SUBI R20,-LOW(1)
0007b8 c001      	RJMP _0x200008C
                 _0x200008B:
0007b9 7f0b      	ANDI R16,LOW(251)
                 _0x200008C:
                 _0x2000089:
0007ba 2f34      	MOV  R19,R20
                 _0x2000075:
0007bb fd00      	SBRC R16,0
0007bc c018      	RJMP _0x200008D
                 _0x200008E:
0007bd 1715      	CP   R17,R21
0007be f410      	BRSH _0x2000091
0007bf 1735      	CP   R19,R21
0007c0 f008      	BRLO _0x2000092
                 _0x2000091:
0007c1 c013      	RJMP _0x2000090
                 _0x2000092:
0007c2 ff07      	SBRS R16,7
0007c3 c008      	RJMP _0x2000093
0007c4 ff02      	SBRS R16,2
0007c5 c004      	RJMP _0x2000094
0007c6 7f0b      	ANDI R16,LOW(251)
0007c7 892d      	LDD  R18,Y+21
0007c8 5011      	SUBI R17,LOW(1)
0007c9 c001      	RJMP _0x2000095
                 _0x2000094:
0007ca e320      	LDI  R18,LOW(48)
                 _0x2000095:
0007cb c001      	RJMP _0x2000096
                 _0x2000093:
0007cc e220      	LDI  R18,LOW(32)
                 _0x2000096:
0007cd 932a      	ST   -Y,R18
0007ce 81af      	LDD  R26,Y+7
0007cf 85b8      	LDD  R27,Y+7+1
0007d0 85e9      	LDD  R30,Y+9
0007d1 85fa      	LDD  R31,Y+9+1
0007d2 9509      	ICALL
0007d3 5051      	SUBI R21,LOW(1)
0007d4 cfe8      	RJMP _0x200008E
                 _0x2000090:
                 _0x200008D:
                 _0x2000097:
0007d5 1714      	CP   R17,R20
0007d6 f520      	BRSH _0x2000099
0007d7 6100      	ORI  R16,LOW(16)
0007d8 ff02      	SBRS R16,2
0007d9 c015      	RJMP _0x200009A
0007da 7f0b      	ANDI R16,LOW(251)
0007db 89ed      	LDD  R30,Y+21
0007dc 93ea      	ST   -Y,R30
                +
0007dd 01de     +MOVW R26 , R28
0007de 5aa9     +SUBI R26 , LOW ( - 87 )
0007df 4fbf     +SBCI R27 , HIGH ( - 87 )
0007e0 900d     +LD R0 , X +
0007e1 91bc     +LD R27 , X
0007e2 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
0007e3 01fe     +MOVW R30 , R28
0007e4 5ae7     +SUBI R30 , LOW ( - 89 )
0007e5 4fff     +SBCI R31 , HIGH ( - 89 )
0007e6 9001     +LD R0 , Z +
0007e7 81f0     +LD R31 , Z
0007e8 2de0     +MOV R30 , R0
                 	__GETW1SX 89
0007e9 9509      	ICALL
0007ea 3050      	CPI  R21,0
0007eb f009      	BREQ _0x200009B
0007ec 5051      	SUBI R21,LOW(1)
                 _0x200009B:
0007ed 5011      	SUBI R17,LOW(1)
0007ee 5041      	SUBI R20,LOW(1)
                 _0x200009A:
0007ef e3e0      	LDI  R30,LOW(48)
0007f0 93ea      	ST   -Y,R30
0007f1 81af      	LDD  R26,Y+7
0007f2 85b8      	LDD  R27,Y+7+1
0007f3 85e9      	LDD  R30,Y+9
0007f4 85fa      	LDD  R31,Y+9+1
0007f5 9509      	ICALL
0007f6 3050      	CPI  R21,0
0007f7 f009      	BREQ _0x200009C
0007f8 5051      	SUBI R21,LOW(1)
                 _0x200009C:
0007f9 5041      	SUBI R20,LOW(1)
0007fa cfda      	RJMP _0x2000097
                 _0x2000099:
0007fb 2f31      	MOV  R19,R17
0007fc 89ec      	LDD  R30,Y+20
0007fd 30e0      	CPI  R30,0
0007fe f4d9      	BRNE _0x200009D
                 _0x200009E:
0007ff 3030      	CPI  R19,0
000800 f0c1      	BREQ _0x20000A0
000801 ff03      	SBRS R16,3
000802 c006      	RJMP _0x20000A1
000803 85ee      	LDD  R30,Y+14
000804 85ff      	LDD  R31,Y+14+1
000805 9125      	LPM  R18,Z+
000806 87ee      	STD  Y+14,R30
000807 87ff      	STD  Y+14+1,R31
000808 c005      	RJMP _0x20000A2
                 _0x20000A1:
000809 85ae      	LDD  R26,Y+14
00080a 85bf      	LDD  R27,Y+14+1
00080b 912d      	LD   R18,X+
00080c 87ae      	STD  Y+14,R26
00080d 87bf      	STD  Y+14+1,R27
                 _0x20000A2:
00080e 932a      	ST   -Y,R18
00080f 81af      	LDD  R26,Y+7
000810 85b8      	LDD  R27,Y+7+1
000811 85e9      	LDD  R30,Y+9
000812 85fa      	LDD  R31,Y+9+1
000813 9509      	ICALL
000814 3050      	CPI  R21,0
000815 f009      	BREQ _0x20000A3
000816 5051      	SUBI R21,LOW(1)
                 _0x20000A3:
000817 5031      	SUBI R19,LOW(1)
000818 cfe6      	RJMP _0x200009E
                 _0x20000A0:
000819 c070      	RJMP _0x20000A4
                 _0x200009D:
                 _0x20000A6:
                +
00081a 89e8     +LDD R30 , Y + 16
00081b 89f9     +LDD R31 , Y + 16 + 1
00081c 896a     +LDD R22 , Y + 16 + 2
00081d 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
00081e 85aa     +LDD R26 , Y + 10
00081f 85bb     +LDD R27 , Y + 10 + 1
000820 858c     +LDD R24 , Y + 10 + 2
000821 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000822 940e 0eed 	CALL __DIVD21U
000824 2f2e      	MOV  R18,R30
000825 302a      	CPI  R18,10
000826 f030      	BRLO _0x20000A8
000827 ff03      	SBRS R16,3
000828 c002      	RJMP _0x20000A9
000829 5c29      	SUBI R18,-LOW(55)
00082a c001      	RJMP _0x20000AA
                 _0x20000A9:
00082b 5a29      	SUBI R18,-LOW(87)
                 _0x20000AA:
00082c c001      	RJMP _0x20000AB
                 _0x20000A8:
00082d 5d20      	SUBI R18,-LOW(48)
                 _0x20000AB:
00082e fd04      	SBRC R16,4
00082f c030      	RJMP _0x20000AD
000830 3321      	CPI  R18,49
000831 f460      	BRSH _0x20000AF
                +
000832 89a8     +LDD R26 , Y + 16
000833 89b9     +LDD R27 , Y + 16 + 1
000834 898a     +LDD R24 , Y + 16 + 2
000835 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
000836 30a1     +CPI R26 , LOW ( 0x1 )
000837 e0e0     +LDI R30 , HIGH ( 0x1 )
000838 07be     +CPC R27 , R30
000839 e0e0     +LDI R30 , BYTE3 ( 0x1 )
00083a 078e     +CPC R24 , R30
00083b e0e0     +LDI R30 , BYTE4 ( 0x1 )
00083c 079e     +CPC R25 , R30
                 	__CPD2N 0x1
00083d f409      	BRNE _0x20000AE
                 _0x20000AF:
00083e c00b      	RJMP _0x20000B1
                 _0x20000AE:
00083f 1743      	CP   R20,R19
000840 f440      	BRSH _0x200011F
000841 1753      	CP   R21,R19
000842 f010      	BRLO _0x20000B4
000843 ff00      	SBRS R16,0
000844 c001      	RJMP _0x20000B5
                 _0x20000B4:
000845 c023      	RJMP _0x20000B3
                 _0x20000B5:
000846 e220      	LDI  R18,LOW(32)
000847 ff07      	SBRS R16,7
000848 c017      	RJMP _0x20000B6
                 _0x200011F:
000849 e320      	LDI  R18,LOW(48)
                 _0x20000B1:
00084a 6100      	ORI  R16,LOW(16)
00084b ff02      	SBRS R16,2
00084c c013      	RJMP _0x20000B7
00084d 7f0b      	ANDI R16,LOW(251)
00084e 89ed      	LDD  R30,Y+21
00084f 93ea      	ST   -Y,R30
                +
000850 01de     +MOVW R26 , R28
000851 5aa9     +SUBI R26 , LOW ( - 87 )
000852 4fbf     +SBCI R27 , HIGH ( - 87 )
000853 900d     +LD R0 , X +
000854 91bc     +LD R27 , X
000855 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
000856 01fe     +MOVW R30 , R28
000857 5ae7     +SUBI R30 , LOW ( - 89 )
000858 4fff     +SBCI R31 , HIGH ( - 89 )
000859 9001     +LD R0 , Z +
00085a 81f0     +LD R31 , Z
00085b 2de0     +MOV R30 , R0
                 	__GETW1SX 89
00085c 9509      	ICALL
00085d 3050      	CPI  R21,0
00085e f009      	BREQ _0x20000B8
00085f 5051      	SUBI R21,LOW(1)
                 _0x20000B8:
                 _0x20000B7:
                 _0x20000B6:
                 _0x20000AD:
000860 932a      	ST   -Y,R18
000861 81af      	LDD  R26,Y+7
000862 85b8      	LDD  R27,Y+7+1
000863 85e9      	LDD  R30,Y+9
000864 85fa      	LDD  R31,Y+9+1
000865 9509      	ICALL
000866 3050      	CPI  R21,0
000867 f009      	BREQ _0x20000B9
000868 5051      	SUBI R21,LOW(1)
                 _0x20000B9:
                 _0x20000B3:
000869 5031      	SUBI R19,LOW(1)
                +
00086a 89e8     +LDD R30 , Y + 16
00086b 89f9     +LDD R31 , Y + 16 + 1
00086c 896a     +LDD R22 , Y + 16 + 2
00086d 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
00086e 85aa     +LDD R26 , Y + 10
00086f 85bb     +LDD R27 , Y + 10 + 1
000870 858c     +LDD R24 , Y + 10 + 2
000871 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000872 940e 0f2c 	CALL __MODD21U
                +
000874 87ea     +STD Y + 10 , R30
000875 87fb     +STD Y + 10 + 1 , R31
000876 876c     +STD Y + 10 + 2 , R22
000877 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000878 89ec      	LDD  R30,Y+20
                +
000879 89a8     +LDD R26 , Y + 16
00087a 89b9     +LDD R27 , Y + 16 + 1
00087b 898a     +LDD R24 , Y + 16 + 2
00087c 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
00087d 27ff      	CLR  R31
00087e 2766      	CLR  R22
00087f 2777      	CLR  R23
000880 940e 0eed 	CALL __DIVD21U
                +
000882 8be8     +STD Y + 16 , R30
000883 8bf9     +STD Y + 16 + 1 , R31
000884 8b6a     +STD Y + 16 + 2 , R22
000885 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000886 940e 0f9a 	CALL __CPD10
000888 f009      	BREQ _0x20000A7
000889 cf90      	RJMP _0x20000A6
                 _0x20000A7:
                 _0x20000A4:
00088a ff00      	SBRS R16,0
00088b c00b      	RJMP _0x20000BA
                 _0x20000BB:
00088c 3050      	CPI  R21,0
00088d f049      	BREQ _0x20000BD
00088e 5051      	SUBI R21,LOW(1)
00088f e2e0      	LDI  R30,LOW(32)
000890 93ea      	ST   -Y,R30
000891 81af      	LDD  R26,Y+7
000892 85b8      	LDD  R27,Y+7+1
000893 85e9      	LDD  R30,Y+9
000894 85fa      	LDD  R31,Y+9+1
000895 9509      	ICALL
000896 cff5      	RJMP _0x20000BB
                 _0x20000BD:
                 _0x20000BA:
                 _0x20000BE:
                 _0x200005A:
                 _0x200011D:
000897 e010      	LDI  R17,LOW(0)
                 _0x200003B:
000898 cd39      	RJMP _0x2000036
                 _0x2000038:
000899 81ae      	LDD  R26,Y+6
00089a 81bf      	LDD  R27,Y+6+1
00089b 940e 0f3c 	CALL __GETW1P
00089d 940e 0fa5 	CALL __LOADLOCR6
00089f 96ef      	ADIW R28,63
0008a0 966f      	ADIW R28,31
0008a1 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0008a2 92ff      	PUSH R15
0008a3 2ef8      	MOV  R15,R24
0008a4 9726      	SBIW R28,6
0008a5 940e 0fa0 	CALL __SAVELOCR4
0008a7 01de      	MOVW R26,R28
0008a8 961c      	ADIW R26,12
0008a9 940e 0e73 	CALL __ADDW2R15
0008ab 940e 0f3c 	CALL __GETW1P
0008ad 9730      	SBIW R30,0
0008ae f419      	BRNE _0x20000BF
0008af efef      	LDI  R30,LOW(65535)
0008b0 efff      	LDI  R31,HIGH(65535)
0008b1 c027      	RJMP _0x20C0008
                 _0x20000BF:
0008b2 01de      	MOVW R26,R28
0008b3 9616      	ADIW R26,6
0008b4 940e 0e73 	CALL __ADDW2R15
0008b6 018d      	MOVW R16,R26
0008b7 01de      	MOVW R26,R28
0008b8 961c      	ADIW R26,12
0008b9 940e 0e73 	CALL __ADDW2R15
0008bb 940e 0f3c 	CALL __GETW1P
0008bd 83ee      	STD  Y+6,R30
0008be 83ff      	STD  Y+6+1,R31
0008bf e0e0      	LDI  R30,LOW(0)
0008c0 87e8      	STD  Y+8,R30
0008c1 87e9      	STD  Y+8+1,R30
0008c2 01de      	MOVW R26,R28
0008c3 961a      	ADIW R26,10
0008c4 940e 0e73 	CALL __ADDW2R15
0008c6 940e 0f3c 	CALL __GETW1P
0008c8 93fa      	ST   -Y,R31
0008c9 93ea      	ST   -Y,R30
0008ca 931a      	ST   -Y,R17
0008cb 930a      	ST   -Y,R16
0008cc e1e2      	LDI  R30,LOW(_put_buff_G100)
0008cd e0f4      	LDI  R31,HIGH(_put_buff_G100)
0008ce 93fa      	ST   -Y,R31
0008cf 93ea      	ST   -Y,R30
0008d0 01de      	MOVW R26,R28
0008d1 961a      	ADIW R26,10
0008d2 dce2      	RCALL __print_G100
0008d3 019f      	MOVW R18,R30
0008d4 81ae      	LDD  R26,Y+6
0008d5 81bf      	LDD  R27,Y+6+1
0008d6 e0e0      	LDI  R30,LOW(0)
0008d7 93ec      	ST   X,R30
0008d8 01f9      	MOVW R30,R18
                 _0x20C0008:
0008d9 940e 0fa7 	CALL __LOADLOCR4
0008db 962a      	ADIW R28,10
0008dc 90ff      	POP  R15
0008dd 9508      	RET
                 ; .FEND
                 _get_buff_G100:
                 ; .FSTART _get_buff_G100
0008de 93ba      	ST   -Y,R27
0008df 93aa      	ST   -Y,R26
0008e0 931a      	ST   -Y,R17
0008e1 81a9      	LDD  R26,Y+1
0008e2 81ba      	LDD  R27,Y+1+1
0008e3 e0e0      	LDI  R30,LOW(0)
0008e4 93ec      	ST   X,R30
0008e5 81ab      	LDD  R26,Y+3
0008e6 81bc      	LDD  R27,Y+3+1
0008e7 91ec      	LD   R30,X
0008e8 2f1e      	MOV  R17,R30
0008e9 30e0      	CPI  R30,0
0008ea f019      	BREQ _0x20000C7
0008eb e0e0      	LDI  R30,LOW(0)
0008ec 93ec      	ST   X,R30
0008ed c019      	RJMP _0x20000C8
                 _0x20000C7:
0008ee 81a9      	LDD  R26,Y+1
0008ef 81ba      	LDD  R27,Y+1+1
0008f0 9611      	ADIW R26,1
0008f1 940e 0f3c 	CALL __GETW1P
0008f3 9730      	SBIW R30,0
0008f4 f089      	BREQ _0x20000C9
0008f5 81e9      	LDD  R30,Y+1
0008f6 81fa      	LDD  R31,Y+1+1
0008f7 81a1      	LDD  R26,Z+1
0008f8 81b2      	LDD  R27,Z+2
0008f9 91ec      	LD   R30,X
0008fa 2f1e      	MOV  R17,R30
0008fb 30e0      	CPI  R30,0
0008fc f041      	BREQ _0x20000CA
0008fd 81a9      	LDD  R26,Y+1
0008fe 81ba      	LDD  R27,Y+1+1
0008ff 9611      	ADIW R26,1
000900 91ed      	LD   R30,X+
000901 91fd      	LD   R31,X+
000902 9631      	ADIW R30,1
000903 93fe      	ST   -X,R31
000904 93ee      	ST   -X,R30
                 _0x20000CA:
000905 c001      	RJMP _0x20000CB
                 _0x20000C9:
000906 e010      	LDI  R17,LOW(0)
                 _0x20000CB:
                 _0x20000C8:
000907 2fe1      	MOV  R30,R17
000908 8118      	LDD  R17,Y+0
000909 c1ed      	RJMP _0x20C0004
                 ; .FEND
                 __scanf_G100:
                 ; .FSTART __scanf_G100
00090a 92ff      	PUSH R15
00090b 93ba      	ST   -Y,R27
00090c 93aa      	ST   -Y,R26
00090d 9726      	SBIW R28,6
00090e 940e 0f9e 	CALL __SAVELOCR6
000910 e0e0      	LDI  R30,LOW(0)
000911 e0f0      	LDI  R31,HIGH(0)
000912 87ea      	STD  Y+10,R30
000913 87fb      	STD  Y+10+1,R31
000914 2f4e      	MOV  R20,R30
                 _0x20000CC:
000915 89ea      	LDD  R30,Y+18
000916 89fb      	LDD  R31,Y+18+1
000917 9631      	ADIW R30,1
000918 8bea      	STD  Y+18,R30
000919 8bfb      	STD  Y+18+1,R31
00091a 9731      	SBIW R30,1
00091b 91e4      	LPM  R30,Z
00091c 2f3e      	MOV  R19,R30
00091d 30e0      	CPI  R30,0
00091e f409      	BRNE PC+2
00091f c18f      	RJMP _0x20000CE
000920 2fa3      	MOV  R26,R19
000921 940e 0b36 	CALL _isspace
000923 30e0      	CPI  R30,0
000924 f0f9      	BREQ _0x20000CF
                 _0x20000D0:
000925 b7ed      	IN   R30,SPL
000926 b7fe      	IN   R31,SPH
000927 93fa      	ST   -Y,R31
000928 93ea      	ST   -Y,R30
000929 934f      	PUSH R20
00092a 85ae      	LDD  R26,Y+14
00092b 85bf      	LDD  R27,Y+14+1
00092c 89e8      	LDD  R30,Y+16
00092d 89f9      	LDD  R31,Y+16+1
00092e 9509      	ICALL
00092f 914f      	POP  R20
000930 2f3e      	MOV  R19,R30
000931 30e0      	CPI  R30,0
000932 f029      	BREQ _0x20000D3
000933 2fa3      	MOV  R26,R19
000934 940e 0b36 	CALL _isspace
000936 30e0      	CPI  R30,0
000937 f409      	BRNE _0x20000D4
                 _0x20000D3:
000938 c009      	RJMP _0x20000D2
                 _0x20000D4:
000939 85ac      	LDD  R26,Y+12
00093a 85bd      	LDD  R27,Y+12+1
00093b 91ac      	LD   R26,X
00093c 30a0      	CPI  R26,0
00093d f41c      	BRGE _0x20000D5
00093e efef      	LDI  R30,LOW(65535)
00093f efff      	LDI  R31,HIGH(65535)
000940 c170      	RJMP _0x20C0006
                 _0x20000D5:
000941 cfe3      	RJMP _0x20000D0
                 _0x20000D2:
000942 2f43      	MOV  R20,R19
000943 c16a      	RJMP _0x20000D6
                 _0x20000CF:
000944 3235      	CPI  R19,37
000945 f009      	BREQ PC+2
000946 c14a      	RJMP _0x20000D7
000947 e050      	LDI  R21,LOW(0)
                 _0x20000D8:
000948 89ea      	LDD  R30,Y+18
000949 89fb      	LDD  R31,Y+18+1
00094a 9135      	LPM  R19,Z+
00094b 8bea      	STD  Y+18,R30
00094c 8bfb      	STD  Y+18+1,R31
00094d 3330      	CPI  R19,48
00094e f010      	BRLO _0x20000DC
00094f 333a      	CPI  R19,58
000950 f008      	BRLO _0x20000DB
                 _0x20000DC:
000951 c007      	RJMP _0x20000DA
                 _0x20000DB:
000952 e0aa      	LDI  R26,LOW(10)
000953 9f5a      	MUL  R21,R26
000954 2d50      	MOV  R21,R0
000955 2fe3      	MOV  R30,R19
000956 53e0      	SUBI R30,LOW(48)
000957 0f5e      	ADD  R21,R30
000958 cfef      	RJMP _0x20000D8
                 _0x20000DA:
000959 3030      	CPI  R19,0
00095a f409      	BRNE _0x20000DE
00095b c153      	RJMP _0x20000CE
                 _0x20000DE:
                 _0x20000DF:
00095c b7ed      	IN   R30,SPL
00095d b7fe      	IN   R31,SPH
00095e 93fa      	ST   -Y,R31
00095f 93ea      	ST   -Y,R30
000960 934f      	PUSH R20
000961 85ae      	LDD  R26,Y+14
000962 85bf      	LDD  R27,Y+14+1
000963 89e8      	LDD  R30,Y+16
000964 89f9      	LDD  R31,Y+16+1
000965 9509      	ICALL
000966 914f      	POP  R20
000967 2f2e      	MOV  R18,R30
000968 2fae      	MOV  R26,R30
000969 940e 0b36 	CALL _isspace
00096b 30e0      	CPI  R30,0
00096c f049      	BREQ _0x20000E1
00096d 85ac      	LDD  R26,Y+12
00096e 85bd      	LDD  R27,Y+12+1
00096f 91ac      	LD   R26,X
000970 30a0      	CPI  R26,0
000971 f41c      	BRGE _0x20000E2
000972 efef      	LDI  R30,LOW(65535)
000973 efff      	LDI  R31,HIGH(65535)
000974 c13c      	RJMP _0x20C0006
                 _0x20000E2:
000975 cfe6      	RJMP _0x20000DF
                 _0x20000E1:
000976 3020      	CPI  R18,0
000977 f409      	BRNE _0x20000E3
000978 c12d      	RJMP _0x20000E4
                 _0x20000E3:
000979 2f42      	MOV  R20,R18
00097a 3050      	CPI  R21,0
00097b f409      	BRNE _0x20000E5
00097c ef5f      	LDI  R21,LOW(255)
                 _0x20000E5:
00097d 94e8      	CLT
00097e f8f3      	BLD  R15,3
00097f 2fe3      	MOV  R30,R19
000980 36e3      	CPI  R30,LOW(0x63)
000981 f501      	BRNE _0x20000E9
000982 89e8      	LDD  R30,Y+16
000983 89f9      	LDD  R31,Y+16+1
000984 9734      	SBIW R30,4
000985 8be8      	STD  Y+16,R30
000986 8bf9      	STD  Y+16+1,R31
000987 89a8      	LDD  R26,Y+16
000988 89b9      	LDD  R27,Y+16+1
000989 9614      	ADIW R26,4
00098a 910d      	LD   R16,X+
00098b 911c      	LD   R17,X
00098c b7ed      	IN   R30,SPL
00098d b7fe      	IN   R31,SPH
00098e 93fa      	ST   -Y,R31
00098f 93ea      	ST   -Y,R30
000990 934f      	PUSH R20
000991 85ae      	LDD  R26,Y+14
000992 85bf      	LDD  R27,Y+14+1
000993 89e8      	LDD  R30,Y+16
000994 89f9      	LDD  R31,Y+16+1
000995 9509      	ICALL
000996 914f      	POP  R20
000997 01d8      	MOVW R26,R16
000998 93ec      	ST   X,R30
000999 85ac      	LDD  R26,Y+12
00099a 85bd      	LDD  R27,Y+12+1
00099b 91ac      	LD   R26,X
00099c 30a0      	CPI  R26,0
00099d f41c      	BRGE _0x20000EA
00099e efef      	LDI  R30,LOW(65535)
00099f efff      	LDI  R31,HIGH(65535)
0009a0 c110      	RJMP _0x20C0006
                 _0x20000EA:
0009a1 c0e9      	RJMP _0x20000E8
                 _0x20000E9:
0009a2 37e3      	CPI  R30,LOW(0x73)
0009a3 f5b9      	BRNE _0x20000EB
0009a4 89e8      	LDD  R30,Y+16
0009a5 89f9      	LDD  R31,Y+16+1
0009a6 9734      	SBIW R30,4
0009a7 8be8      	STD  Y+16,R30
0009a8 8bf9      	STD  Y+16+1,R31
0009a9 89a8      	LDD  R26,Y+16
0009aa 89b9      	LDD  R27,Y+16+1
0009ab 9614      	ADIW R26,4
0009ac 910d      	LD   R16,X+
0009ad 911c      	LD   R17,X
                 _0x20000EC:
0009ae 2fe5      	MOV  R30,R21
0009af 5051      	SUBI R21,1
0009b0 30e0      	CPI  R30,0
0009b1 f129      	BREQ _0x20000EE
0009b2 b7ed      	IN   R30,SPL
0009b3 b7fe      	IN   R31,SPH
0009b4 93fa      	ST   -Y,R31
0009b5 93ea      	ST   -Y,R30
0009b6 934f      	PUSH R20
0009b7 85ae      	LDD  R26,Y+14
0009b8 85bf      	LDD  R27,Y+14+1
0009b9 89e8      	LDD  R30,Y+16
0009ba 89f9      	LDD  R31,Y+16+1
0009bb 9509      	ICALL
0009bc 914f      	POP  R20
0009bd 2f3e      	MOV  R19,R30
0009be 30e0      	CPI  R30,0
0009bf f029      	BREQ _0x20000F0
0009c0 2fa3      	MOV  R26,R19
0009c1 940e 0b36 	CALL _isspace
0009c3 30e0      	CPI  R30,0
0009c4 f049      	BREQ _0x20000EF
                 _0x20000F0:
0009c5 85ac      	LDD  R26,Y+12
0009c6 85bd      	LDD  R27,Y+12+1
0009c7 91ac      	LD   R26,X
0009c8 30a0      	CPI  R26,0
0009c9 f41c      	BRGE _0x20000F2
0009ca efef      	LDI  R30,LOW(65535)
0009cb efff      	LDI  R31,HIGH(65535)
0009cc c0e4      	RJMP _0x20C0006
                 _0x20000F2:
0009cd c009      	RJMP _0x20000EE
                 _0x20000EF:
0009ce 931f      	PUSH R17
0009cf 930f      	PUSH R16
                +
0009d0 5f0f     +SUBI R16 , LOW ( - 1 )
0009d1 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0009d2 2fe3      	MOV  R30,R19
0009d3 91af      	POP  R26
0009d4 91bf      	POP  R27
0009d5 93ec      	ST   X,R30
0009d6 cfd7      	RJMP _0x20000EC
                 _0x20000EE:
0009d7 01d8      	MOVW R26,R16
0009d8 e0e0      	LDI  R30,LOW(0)
0009d9 93ec      	ST   X,R30
0009da c0b0      	RJMP _0x20000E8
                 _0x20000EB:
0009db 36ec      	CPI  R30,LOW(0x6C)
0009dc f439      	BRNE _0x20000F4
0009dd 9468      	SET
0009de f8f3      	BLD  R15,3
0009df 89ea      	LDD  R30,Y+18
0009e0 89fb      	LDD  R31,Y+18+1
0009e1 9135      	LPM  R19,Z+
0009e2 8bea      	STD  Y+18,R30
0009e3 8bfb      	STD  Y+18+1,R31
                 _0x20000F4:
0009e4 9468      	SET
0009e5 f8f1      	BLD  R15,1
0009e6 94e8      	CLT
0009e7 f8f2      	BLD  R15,2
0009e8 2fe3      	MOV  R30,R19
0009e9 36e4      	CPI  R30,LOW(0x64)
0009ea f011      	BREQ _0x20000F9
0009eb 36e9      	CPI  R30,LOW(0x69)
0009ec f419      	BRNE _0x20000FA
                 _0x20000F9:
0009ed 94e8      	CLT
0009ee f8f1      	BLD  R15,1
0009ef c002      	RJMP _0x20000FB
                 _0x20000FA:
0009f0 37e5      	CPI  R30,LOW(0x75)
0009f1 f411      	BRNE _0x20000FC
                 _0x20000FB:
0009f2 e02a      	LDI  R18,LOW(10)
0009f3 c008      	RJMP _0x20000F7
                 _0x20000FC:
0009f4 37e8      	CPI  R30,LOW(0x78)
0009f5 f411      	BRNE _0x20000FD
0009f6 e120      	LDI  R18,LOW(16)
0009f7 c004      	RJMP _0x20000F7
                 _0x20000FD:
0009f8 32e5      	CPI  R30,LOW(0x25)
0009f9 f409      	BRNE _0x2000100
0009fa c096      	RJMP _0x20000FF
                 _0x2000100:
0009fb c0b3      	RJMP _0x20C0007
                 _0x20000F7:
0009fc e0e0      	LDI  R30,LOW(0)
                +
0009fd 83ee     +STD Y + 6 , R30
0009fe 83ef     +STD Y + 6 + 1 , R30
0009ff 87e8     +STD Y + 6 + 2 , R30
000a00 87e9     +STD Y + 6 + 3 , R30
                 	__CLRD1S 6
000a01 9468      	SET
000a02 f8f0      	BLD  R15,0
                 _0x2000101:
000a03 2fe5      	MOV  R30,R21
000a04 5051      	SUBI R21,1
000a05 30e0      	CPI  R30,0
000a06 f409      	BRNE PC+2
000a07 c054      	RJMP _0x2000103
000a08 b7ed      	IN   R30,SPL
000a09 b7fe      	IN   R31,SPH
000a0a 93fa      	ST   -Y,R31
000a0b 93ea      	ST   -Y,R30
000a0c 934f      	PUSH R20
000a0d 85ae      	LDD  R26,Y+14
000a0e 85bf      	LDD  R27,Y+14+1
000a0f 89e8      	LDD  R30,Y+16
000a10 89f9      	LDD  R31,Y+16+1
000a11 9509      	ICALL
000a12 914f      	POP  R20
000a13 2f3e      	MOV  R19,R30
000a14 32e1      	CPI  R30,LOW(0x21)
000a15 f448      	BRSH _0x2000104
000a16 85ac      	LDD  R26,Y+12
000a17 85bd      	LDD  R27,Y+12+1
000a18 91ac      	LD   R26,X
000a19 30a0      	CPI  R26,0
000a1a f41c      	BRGE _0x2000105
000a1b efef      	LDI  R30,LOW(65535)
000a1c efff      	LDI  R31,HIGH(65535)
000a1d c093      	RJMP _0x20C0006
                 _0x2000105:
000a1e c017      	RJMP _0x2000106
                 _0x2000104:
000a1f fcf1      	SBRC R15,1
000a20 c008      	RJMP _0x2000107
000a21 9468      	SET
000a22 f8f1      	BLD  R15,1
000a23 323d      	CPI  R19,45
000a24 f411      	BRNE _0x2000108
000a25 f8f2      	BLD  R15,2
000a26 cfdc      	RJMP _0x2000101
                 _0x2000108:
000a27 323b      	CPI  R19,43
000a28 f2d1      	BREQ _0x2000101
                 _0x2000107:
000a29 3120      	CPI  R18,16
000a2a f431      	BRNE _0x200010A
000a2b 2fa3      	MOV  R26,R19
000a2c 940e 0b41 	CALL _isxdigit
000a2e 30e0      	CPI  R30,0
000a2f f031      	BREQ _0x2000106
000a30 c009      	RJMP _0x200010C
                 _0x200010A:
000a31 2fa3      	MOV  R26,R19
000a32 940e 0b2d 	CALL _isdigit
000a34 30e0      	CPI  R30,0
000a35 f421      	BRNE _0x200010D
                 _0x2000106:
000a36 fcf0      	SBRC R15,0
000a37 c077      	RJMP _0x200010F
000a38 2f43      	MOV  R20,R19
000a39 c022      	RJMP _0x2000103
                 _0x200010D:
                 _0x200010C:
000a3a 3631      	CPI  R19,97
000a3b f010      	BRLO _0x2000110
000a3c 5537      	SUBI R19,LOW(87)
000a3d c005      	RJMP _0x2000111
                 _0x2000110:
000a3e 3431      	CPI  R19,65
000a3f f010      	BRLO _0x2000112
000a40 5337      	SUBI R19,LOW(55)
000a41 c001      	RJMP _0x2000113
                 _0x2000112:
000a42 5330      	SUBI R19,LOW(48)
                 _0x2000113:
                 _0x2000111:
000a43 2fe2      	MOV  R30,R18
                +
000a44 81ae     +LDD R26 , Y + 6
000a45 81bf     +LDD R27 , Y + 6 + 1
000a46 8588     +LDD R24 , Y + 6 + 2
000a47 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
000a48 27ff      	CLR  R31
000a49 2766      	CLR  R22
000a4a 2777      	CLR  R23
000a4b 940e 0ea7 	CALL __MULD12U
000a4d 01df      	MOVW R26,R30
000a4e 01cb      	MOVW R24,R22
000a4f 2fe3      	MOV  R30,R19
000a50 27ff      	CLR  R31
000a51 2766      	CLR  R22
000a52 2777      	CLR  R23
000a53 940e 0e77 	CALL __ADDD12
                +
000a55 83ee     +STD Y + 6 , R30
000a56 83ff     +STD Y + 6 + 1 , R31
000a57 8768     +STD Y + 6 + 2 , R22
000a58 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
000a59 94e8      	CLT
000a5a f8f0      	BLD  R15,0
000a5b cfa7      	RJMP _0x2000101
                 _0x2000103:
000a5c fef2      	SBRS R15,2
000a5d c00a      	RJMP _0x2000114
                +
000a5e 81ee     +LDD R30 , Y + 6
000a5f 81ff     +LDD R31 , Y + 6 + 1
000a60 8568     +LDD R22 , Y + 6 + 2
000a61 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
000a62 940e 0e80 	CALL __ANEGD1
                +
000a64 83ee     +STD Y + 6 , R30
000a65 83ff     +STD Y + 6 + 1 , R31
000a66 8768     +STD Y + 6 + 2 , R22
000a67 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
                 _0x2000114:
000a68 fef3      	SBRS R15,3
000a69 c012      	RJMP _0x2000115
000a6a 89e8      	LDD  R30,Y+16
000a6b 89f9      	LDD  R31,Y+16+1
000a6c 9734      	SBIW R30,4
000a6d 8be8      	STD  Y+16,R30
000a6e 8bf9      	STD  Y+16+1,R31
000a6f 89a8      	LDD  R26,Y+16
000a70 89b9      	LDD  R27,Y+16+1
000a71 9614      	ADIW R26,4
000a72 910d      	LD   R16,X+
000a73 911c      	LD   R17,X
                +
000a74 81ee     +LDD R30 , Y + 6
000a75 81ff     +LDD R31 , Y + 6 + 1
000a76 8568     +LDD R22 , Y + 6 + 2
000a77 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
000a78 01d8      	MOVW R26,R16
000a79 940e 0f46 	CALL __PUTDP1
000a7b c00f      	RJMP _0x2000116
                 _0x2000115:
000a7c 89e8      	LDD  R30,Y+16
000a7d 89f9      	LDD  R31,Y+16+1
000a7e 9734      	SBIW R30,4
000a7f 8be8      	STD  Y+16,R30
000a80 8bf9      	STD  Y+16+1,R31
000a81 89a8      	LDD  R26,Y+16
000a82 89b9      	LDD  R27,Y+16+1
000a83 9614      	ADIW R26,4
000a84 910d      	LD   R16,X+
000a85 911c      	LD   R17,X
000a86 81ee      	LDD  R30,Y+6
000a87 81ff      	LDD  R31,Y+6+1
000a88 01d8      	MOVW R26,R16
000a89 93ed      	ST   X+,R30
000a8a 93fc      	ST   X,R31
                 _0x2000116:
                 _0x20000E8:
000a8b 85ea      	LDD  R30,Y+10
000a8c 85fb      	LDD  R31,Y+10+1
000a8d 9631      	ADIW R30,1
000a8e 87ea      	STD  Y+10,R30
000a8f 87fb      	STD  Y+10+1,R31
000a90 c01d      	RJMP _0x2000117
                 _0x20000D7:
                 _0x20000FF:
000a91 b7ed      	IN   R30,SPL
000a92 b7fe      	IN   R31,SPH
000a93 93fa      	ST   -Y,R31
000a94 93ea      	ST   -Y,R30
000a95 934f      	PUSH R20
000a96 85ae      	LDD  R26,Y+14
000a97 85bf      	LDD  R27,Y+14+1
000a98 89e8      	LDD  R30,Y+16
000a99 89f9      	LDD  R31,Y+16+1
000a9a 9509      	ICALL
000a9b 914f      	POP  R20
000a9c 17e3      	CP   R30,R19
000a9d f081      	BREQ _0x2000118
000a9e 85ac      	LDD  R26,Y+12
000a9f 85bd      	LDD  R27,Y+12+1
000aa0 91ac      	LD   R26,X
000aa1 30a0      	CPI  R26,0
000aa2 f41c      	BRGE _0x2000119
000aa3 efef      	LDI  R30,LOW(65535)
000aa4 efff      	LDI  R31,HIGH(65535)
000aa5 c00b      	RJMP _0x20C0006
                 _0x2000119:
                 _0x20000E4:
000aa6 85ea      	LDD  R30,Y+10
000aa7 85fb      	LDD  R31,Y+10+1
000aa8 9730      	SBIW R30,0
000aa9 f419      	BRNE _0x200011A
000aaa efef      	LDI  R30,LOW(65535)
000aab efff      	LDI  R31,HIGH(65535)
000aac c004      	RJMP _0x20C0006
                 _0x200011A:
000aad c001      	RJMP _0x20000CE
                 _0x2000118:
                 _0x2000117:
                 _0x20000D6:
000aae ce66      	RJMP _0x20000CC
                 _0x20000CE:
                 _0x200010F:
                 _0x20C0007:
000aaf 85ea      	LDD  R30,Y+10
000ab0 85fb      	LDD  R31,Y+10+1
                 _0x20C0006:
000ab1 940e 0fa5 	CALL __LOADLOCR6
000ab3 9664      	ADIW R28,20
000ab4 90ff      	POP  R15
000ab5 9508      	RET
                 ; .FEND
                 _sscanf:
                 ; .FSTART _sscanf
000ab6 92ff      	PUSH R15
000ab7 2ef8      	MOV  R15,R24
000ab8 9723      	SBIW R28,3
000ab9 931a      	ST   -Y,R17
000aba 930a      	ST   -Y,R16
000abb 01de      	MOVW R26,R28
000abc 9617      	ADIW R26,7
000abd 940e 0e73 	CALL __ADDW2R15
000abf 940e 0f3c 	CALL __GETW1P
000ac1 9730      	SBIW R30,0
000ac2 f419      	BRNE _0x200011B
000ac3 efef      	LDI  R30,LOW(65535)
000ac4 efff      	LDI  R31,HIGH(65535)
000ac5 c01e      	RJMP _0x20C0005
                 _0x200011B:
000ac6 01de      	MOVW R26,R28
000ac7 9611      	ADIW R26,1
000ac8 940e 0e73 	CALL __ADDW2R15
000aca 018d      	MOVW R16,R26
000acb 01de      	MOVW R26,R28
000acc 9617      	ADIW R26,7
000acd 940e 0e73 	CALL __ADDW2R15
000acf 940e 0f3c 	CALL __GETW1P
000ad1 83eb      	STD  Y+3,R30
000ad2 83fc      	STD  Y+3+1,R31
000ad3 01de      	MOVW R26,R28
000ad4 9615      	ADIW R26,5
000ad5 940e 0e73 	CALL __ADDW2R15
000ad7 940e 0f3c 	CALL __GETW1P
000ad9 93fa      	ST   -Y,R31
000ada 93ea      	ST   -Y,R30
000adb 931a      	ST   -Y,R17
000adc 930a      	ST   -Y,R16
000add edee      	LDI  R30,LOW(_get_buff_G100)
000ade e0f8      	LDI  R31,HIGH(_get_buff_G100)
000adf 93fa      	ST   -Y,R31
000ae0 93ea      	ST   -Y,R30
000ae1 01de      	MOVW R26,R28
000ae2 9618      	ADIW R26,8
000ae3 de26      	RCALL __scanf_G100
                 _0x20C0005:
000ae4 8119      	LDD  R17,Y+1
000ae5 8108      	LDD  R16,Y+0
000ae6 9625      	ADIW R28,5
000ae7 90ff      	POP  R15
000ae8 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
000ae9 93ba      	ST   -Y,R27
000aea 93aa      	ST   -Y,R26
000aeb 81b9          ldd  r27,y+1
000aec 81a8          ld   r26,y
000aed 9610          adiw r26,0
000aee f031          breq memset1
000aef 81fc          ldd  r31,y+4
000af0 81eb          ldd  r30,y+3
000af1 816a          ldd  r22,y+2
                 memset0:
000af2 9361          st   z+,r22
000af3 9711          sbiw r26,1
000af4 f7e9          brne memset0
                 memset1:
000af5 81eb          ldd  r30,y+3
000af6 81fc          ldd  r31,y+4
                 _0x20C0004:
000af7 9625      	ADIW R28,5
000af8 9508      	RET
                 ; .FEND
                 _strcpyf:
                 ; .FSTART _strcpyf
000af9 93ba      	ST   -Y,R27
000afa 93aa      	ST   -Y,R26
000afb 91e9          ld   r30,y+
000afc 91f9          ld   r31,y+
000afd 91a9          ld   r26,y+
000afe 91b9          ld   r27,y+
000aff 01cd          movw r24,r26
                 strcpyf0:
000b00 9005      	lpm  r0,z+
000b01 920d          st   x+,r0
000b02 2000          tst  r0
000b03 f7e1          brne strcpyf0
000b04 01fc          movw r30,r24
000b05 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
000b06 93ba      	ST   -Y,R27
000b07 93aa      	ST   -Y,R26
000b08 91a9          ld   r26,y+
000b09 91b9          ld   r27,y+
000b0a 27ee          clr  r30
000b0b 27ff          clr  r31
                 strlen0:
000b0c 916d          ld   r22,x+
000b0d 2366          tst  r22
000b0e f011          breq strlen1
000b0f 9631          adiw r30,1
000b10 cffb          rjmp strlen0
                 strlen1:
000b11 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000b12 93ba      	ST   -Y,R27
000b13 93aa      	ST   -Y,R26
000b14 27aa          clr  r26
000b15 27bb          clr  r27
000b16 91e9          ld   r30,y+
000b17 91f9          ld   r31,y+
                 strlenf0:
000b18 9005      	lpm  r0,z+
000b19 2000          tst  r0
000b1a f011          breq strlenf1
000b1b 9611          adiw r26,1
000b1c cffb          rjmp strlenf0
                 strlenf1:
000b1d 01fd          movw r30,r26
000b1e 9508          ret
                 ; .FEND
                 _strrchr:
                 ; .FSTART _strrchr
000b1f 93aa      	ST   -Y,R26
000b20 9169          ld   r22,y+
000b21 91a9          ld   r26,y+
000b22 91b9          ld   r27,y+
000b23 27ee          clr  r30
000b24 27ff          clr  r31
                 strrchr0:
000b25 917c          ld   r23,x
000b26 1767          cp   r22,r23
000b27 f409          brne strrchr1
000b28 01fd          movw r30,r26
                 strrchr1:
000b29 9611          adiw r26,1
000b2a 2377          tst  r23
000b2b f7c9          brne strrchr0
000b2c 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _isdigit:
                 ; .FSTART _isdigit
000b2d 93aa      	ST   -Y,R26
000b2e e0e1          ldi  r30,1
000b2f 91f9          ld   r31,y+
000b30 33f0          cpi  r31,'0'
000b31 f010          brlo isdigit0
000b32 33fa          cpi  r31,'9'+1
000b33 f008          brlo isdigit1
                 isdigit0:
000b34 27ee          clr  r30
                 isdigit1:
000b35 9508          ret
                 ; .FEND
                 _isspace:
                 ; .FSTART _isspace
000b36 93aa      	ST   -Y,R26
000b37 e0e1          ldi  r30,1
000b38 91f9          ld   r31,y+
000b39 32f0          cpi  r31,' '
000b3a f029          breq isspace1
000b3b 30f9          cpi  r31,9
000b3c f010          brlo isspace0
000b3d 30fe          cpi  r31,13+1
000b3e f008          brlo isspace1
                 isspace0:
000b3f 27ee          clr  r30
                 isspace1:
000b40 9508          ret
                 ; .FEND
                 _isxdigit:
                 ; .FSTART _isxdigit
000b41 93aa      	ST   -Y,R26
000b42 e0e1          ldi  r30,1
000b43 91f9          ld   r31,y+
000b44 53f0          subi r31,0x30
000b45 f040          brcs isxdigit0
000b46 30fa          cpi  r31,10
000b47 f038          brcs isxdigit1
000b48 75ff          andi r31,0x5f
000b49 50f7          subi r31,7
000b4a 30fa          cpi  r31,10
000b4b f010          brcs isxdigit0
000b4c 31f0          cpi  r31,16
000b4d f008          brcs isxdigit1
                 isxdigit0:
000b4e 27ee          clr  r30
                 isxdigit1:
000b4f 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
000b50 940e 0f5f 	CALL __PUTPARD2
000b52 817b         ldd  r23,y+3
000b53 816a         ldd  r22,y+2
000b54 81f9         ldd  r31,y+1
000b55 81e8         ld   r30,y
000b56 fb77         bst  r23,7
000b57 0f77         lsl  r23
000b58 fd67         sbrc r22,7
000b59 6071         sbr  r23,1
000b5a 2f97         mov  r25,r23
000b5b 579e         subi r25,0x7e
000b5c f081         breq __ftrunc0
000b5d f078         brcs __ftrunc0
000b5e 3198         cpi  r25,24
000b5f f490         brsh __ftrunc1
000b60 27aa         clr  r26
000b61 27bb         clr  r27
000b62 2788         clr  r24
                 __ftrunc2:
000b63 9408         sec
000b64 9587         ror  r24
000b65 95b7         ror  r27
000b66 95a7         ror  r26
000b67 959a         dec  r25
000b68 f7d1         brne __ftrunc2
000b69 23ea         and  r30,r26
000b6a 23fb         and  r31,r27
000b6b 2368         and  r22,r24
000b6c c005         rjmp __ftrunc1
                 __ftrunc0:
000b6d 94e8         clt
000b6e 2777         clr  r23
000b6f 27ee         clr  r30
000b70 27ff         clr  r31
000b71 2766         clr  r22
                 __ftrunc1:
000b72 776f         cbr  r22,0x80
000b73 9576         lsr  r23
000b74 f408         brcc __ftrunc3
000b75 6860         sbr  r22,0x80
                 __ftrunc3:
000b76 f977         bld  r23,7
000b77 91a9         ld   r26,y+
000b78 91b9         ld   r27,y+
000b79 9189         ld   r24,y+
000b7a 9199         ld   r25,y+
000b7b 17ea         cp   r30,r26
000b7c 07fb         cpc  r31,r27
000b7d 0768         cpc  r22,r24
000b7e 0779         cpc  r23,r25
000b7f fb97         bst  r25,7
000b80 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
000b81 940e 0f5f 	CALL __PUTPARD2
000b83 940e 0f50 	CALL __GETD2S0
000b85 940e 0b50 	CALL _ftrunc
000b87 940e 0f55 	CALL __PUTD1S0
000b89 f419          brne __floor1
                 __floor0:
000b8a 940e 0f4b 	CALL __GETD1S0
000b8c c009      	RJMP _0x20C0003
                 __floor1:
000b8d f7e6          brtc __floor0
000b8e 940e 0f4b 	CALL __GETD1S0
                +
000b90 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000b91 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000b92 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000b93 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000b94 940e 0d69 	CALL __SUBF12
                 _0x20C0003:
000b96 9624      	ADIW R28,4
000b97 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
000b98 93ba      	ST   -Y,R27
000b99 93aa      	ST   -Y,R26
000b9a 9724      	SBIW R28,4
000b9b e0e0      	LDI  R30,LOW(0)
000b9c 83e8      	ST   Y,R30
000b9d 83e9      	STD  Y+1,R30
000b9e 83ea      	STD  Y+2,R30
000b9f e3ef      	LDI  R30,LOW(63)
000ba0 83eb      	STD  Y+3,R30
000ba1 931a      	ST   -Y,R17
000ba2 930a      	ST   -Y,R16
000ba3 85eb      	LDD  R30,Y+11
000ba4 85fc      	LDD  R31,Y+11+1
000ba5 3fef      	CPI  R30,LOW(0xFFFF)
000ba6 efaf      	LDI  R26,HIGH(0xFFFF)
000ba7 07fa      	CPC  R31,R26
000ba8 f449      	BRNE _0x20A000D
000ba9 81ee      	LDD  R30,Y+6
000baa 81ff      	LDD  R31,Y+6+1
000bab 93fa      	ST   -Y,R31
000bac 93ea      	ST   -Y,R30
                +
000bad ebae     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 0 ) )
000bae e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 0 ) )
                 	__POINTW2FN _0x20A0000,0
000baf 940e 0af9 	CALL _strcpyf
000bb1 c10a      	RJMP _0x20C0002
                 _0x20A000D:
000bb2 3fef      	CPI  R30,LOW(0x7FFF)
000bb3 e7af      	LDI  R26,HIGH(0x7FFF)
000bb4 07fa      	CPC  R31,R26
000bb5 f449      	BRNE _0x20A000C
000bb6 81ee      	LDD  R30,Y+6
000bb7 81ff      	LDD  R31,Y+6+1
000bb8 93fa      	ST   -Y,R31
000bb9 93ea      	ST   -Y,R30
                +
000bba ebaf     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 1 ) )
000bbb e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 1 ) )
                 	__POINTW2FN _0x20A0000,1
000bbc 940e 0af9 	CALL _strcpyf
000bbe c0fd      	RJMP _0x20C0002
                 _0x20A000C:
000bbf 85ac      	LDD  R26,Y+12
000bc0 23aa      	TST  R26
000bc1 f492      	BRPL _0x20A000F
                +
000bc2 85e9     +LDD R30 , Y + 9
000bc3 85fa     +LDD R31 , Y + 9 + 1
000bc4 856b     +LDD R22 , Y + 9 + 2
000bc5 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000bc6 940e 0cca 	CALL __ANEGF1
                +
000bc8 87e9     +STD Y + 9 , R30
000bc9 87fa     +STD Y + 9 + 1 , R31
000bca 876b     +STD Y + 9 + 2 , R22
000bcb 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000bcc 81ae      	LDD  R26,Y+6
000bcd 81bf      	LDD  R27,Y+6+1
000bce 9611      	ADIW R26,1
000bcf 83ae      	STD  Y+6,R26
000bd0 83bf      	STD  Y+6+1,R27
000bd1 9711      	SBIW R26,1
000bd2 e2ed      	LDI  R30,LOW(45)
000bd3 93ec      	ST   X,R30
                 _0x20A000F:
000bd4 85a8      	LDD  R26,Y+8
000bd5 30a7      	CPI  R26,LOW(0x7)
000bd6 f010      	BRLO _0x20A0010
000bd7 e0e6      	LDI  R30,LOW(6)
000bd8 87e8      	STD  Y+8,R30
                 _0x20A0010:
000bd9 8518      	LDD  R17,Y+8
                 _0x20A0011:
000bda 2fe1      	MOV  R30,R17
000bdb 5011      	SUBI R17,1
000bdc 30e0      	CPI  R30,0
000bdd f079      	BREQ _0x20A0013
                +
000bde 81aa     +LDD R26 , Y + 2
000bdf 81bb     +LDD R27 , Y + 2 + 1
000be0 818c     +LDD R24 , Y + 2 + 2
000be1 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
                +
000be2 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000be3 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000be4 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000be5 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000be6 940e 0dc0 	CALL __MULF12
                +
000be8 83ea     +STD Y + 2 , R30
000be9 83fb     +STD Y + 2 + 1 , R31
000bea 836c     +STD Y + 2 + 2 , R22
000beb 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000bec cfed      	RJMP _0x20A0011
                 _0x20A0013:
                +
000bed 81ea     +LDD R30 , Y + 2
000bee 81fb     +LDD R31 , Y + 2 + 1
000bef 816c     +LDD R22 , Y + 2 + 2
000bf0 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000bf1 85a9     +LDD R26 , Y + 9
000bf2 85ba     +LDD R27 , Y + 9 + 1
000bf3 858b     +LDD R24 , Y + 9 + 2
000bf4 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000bf5 940e 0d70 	CALL __ADDF12
                +
000bf7 87e9     +STD Y + 9 , R30
000bf8 87fa     +STD Y + 9 + 1 , R31
000bf9 876b     +STD Y + 9 + 2 , R22
000bfa 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000bfb e010      	LDI  R17,LOW(0)
                +
000bfc e0e0     +LDI R30 , LOW ( 0x3F800000 )
000bfd e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000bfe e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000bff e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
                +
000c00 83ea     +STD Y + 2 , R30
000c01 83fb     +STD Y + 2 + 1 , R31
000c02 836c     +STD Y + 2 + 2 , R22
000c03 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
                 _0x20A0014:
                +
000c04 81ea     +LDD R30 , Y + 2
000c05 81fb     +LDD R31 , Y + 2 + 1
000c06 816c     +LDD R22 , Y + 2 + 2
000c07 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000c08 85a9     +LDD R26 , Y + 9
000c09 85ba     +LDD R27 , Y + 9 + 1
000c0a 858b     +LDD R24 , Y + 9 + 2
000c0b 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000c0c 940e 0e53 	CALL __CMPF12
000c0e f0d8      	BRLO _0x20A0016
                +
000c0f 81aa     +LDD R26 , Y + 2
000c10 81bb     +LDD R27 , Y + 2 + 1
000c11 818c     +LDD R24 , Y + 2 + 2
000c12 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
                +
000c13 e0e0     +LDI R30 , LOW ( 0x41200000 )
000c14 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000c15 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000c16 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000c17 940e 0dc0 	CALL __MULF12
                +
000c19 83ea     +STD Y + 2 , R30
000c1a 83fb     +STD Y + 2 + 1 , R31
000c1b 836c     +STD Y + 2 + 2 , R22
000c1c 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000c1d 5f1f      	SUBI R17,-LOW(1)
000c1e 3217      	CPI  R17,39
000c1f f048      	BRLO _0x20A0017
000c20 81ee      	LDD  R30,Y+6
000c21 81ff      	LDD  R31,Y+6+1
000c22 93fa      	ST   -Y,R31
000c23 93ea      	ST   -Y,R30
                +
000c24 eca3     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 5 ) )
000c25 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 5 ) )
                 	__POINTW2FN _0x20A0000,5
000c26 940e 0af9 	CALL _strcpyf
000c28 c093      	RJMP _0x20C0002
                 _0x20A0017:
000c29 cfda      	RJMP _0x20A0014
                 _0x20A0016:
000c2a 3010      	CPI  R17,0
000c2b f449      	BRNE _0x20A0018
000c2c 81ae      	LDD  R26,Y+6
000c2d 81bf      	LDD  R27,Y+6+1
000c2e 9611      	ADIW R26,1
000c2f 83ae      	STD  Y+6,R26
000c30 83bf      	STD  Y+6+1,R27
000c31 9711      	SBIW R26,1
000c32 e3e0      	LDI  R30,LOW(48)
000c33 93ec      	ST   X,R30
000c34 c047      	RJMP _0x20A0019
                 _0x20A0018:
                 _0x20A001A:
000c35 2fe1      	MOV  R30,R17
000c36 5011      	SUBI R17,1
000c37 30e0      	CPI  R30,0
000c38 f409      	BRNE PC+2
000c39 c042      	RJMP _0x20A001C
                +
000c3a 81aa     +LDD R26 , Y + 2
000c3b 81bb     +LDD R27 , Y + 2 + 1
000c3c 818c     +LDD R24 , Y + 2 + 2
000c3d 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
                +
000c3e eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000c3f ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000c40 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000c41 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000c42 940e 0dc0 	CALL __MULF12
                +
000c44 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000c45 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000c46 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000c47 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000c48 940e 0d70 	CALL __ADDF12
000c4a 01df      	MOVW R26,R30
000c4b 01cb      	MOVW R24,R22
000c4c 940e 0b81 	CALL _floor
                +
000c4e 83ea     +STD Y + 2 , R30
000c4f 83fb     +STD Y + 2 + 1 , R31
000c50 836c     +STD Y + 2 + 2 , R22
000c51 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
                +
000c52 85a9     +LDD R26 , Y + 9
000c53 85ba     +LDD R27 , Y + 9 + 1
000c54 858b     +LDD R24 , Y + 9 + 2
000c55 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000c56 940e 0e0e 	CALL __DIVF21
000c58 940e 0cfd 	CALL __CFD1U
000c5a 2f0e      	MOV  R16,R30
000c5b 81ae      	LDD  R26,Y+6
000c5c 81bf      	LDD  R27,Y+6+1
000c5d 9611      	ADIW R26,1
000c5e 83ae      	STD  Y+6,R26
000c5f 83bf      	STD  Y+6+1,R27
000c60 9711      	SBIW R26,1
000c61 5de0      	SUBI R30,-LOW(48)
000c62 93ec      	ST   X,R30
000c63 2fe0      	MOV  R30,R16
000c64 e0f0      	LDI  R31,0
                +
000c65 81aa     +LDD R26 , Y + 2
000c66 81bb     +LDD R27 , Y + 2 + 1
000c67 818c     +LDD R24 , Y + 2 + 2
000c68 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000c69 940e 0e96 	CALL __CWD1
000c6b 940e 0d36 	CALL __CDF1
000c6d 940e 0dc0 	CALL __MULF12
                +
000c6f 85a9     +LDD R26 , Y + 9
000c70 85ba     +LDD R27 , Y + 9 + 1
000c71 858b     +LDD R24 , Y + 9 + 2
000c72 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000c73 940e 0f64 	CALL __SWAPD12
000c75 940e 0d69 	CALL __SUBF12
                +
000c77 87e9     +STD Y + 9 , R30
000c78 87fa     +STD Y + 9 + 1 , R31
000c79 876b     +STD Y + 9 + 2 , R22
000c7a 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000c7b cfb9      	RJMP _0x20A001A
                 _0x20A001C:
                 _0x20A0019:
000c7c 85e8      	LDD  R30,Y+8
000c7d 30e0      	CPI  R30,0
000c7e f1c9      	BREQ _0x20C0001
000c7f 81ae      	LDD  R26,Y+6
000c80 81bf      	LDD  R27,Y+6+1
000c81 9611      	ADIW R26,1
000c82 83ae      	STD  Y+6,R26
000c83 83bf      	STD  Y+6+1,R27
000c84 9711      	SBIW R26,1
000c85 e2ee      	LDI  R30,LOW(46)
000c86 93ec      	ST   X,R30
                 _0x20A001E:
000c87 85e8      	LDD  R30,Y+8
000c88 50e1      	SUBI R30,LOW(1)
000c89 87e8      	STD  Y+8,R30
000c8a 5fef      	SUBI R30,-LOW(1)
000c8b f161      	BREQ _0x20A0020
                +
000c8c 85a9     +LDD R26 , Y + 9
000c8d 85ba     +LDD R27 , Y + 9 + 1
000c8e 858b     +LDD R24 , Y + 9 + 2
000c8f 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
                +
000c90 e0e0     +LDI R30 , LOW ( 0x41200000 )
000c91 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000c92 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000c93 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000c94 940e 0dc0 	CALL __MULF12
                +
000c96 87e9     +STD Y + 9 , R30
000c97 87fa     +STD Y + 9 + 1 , R31
000c98 876b     +STD Y + 9 + 2 , R22
000c99 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000c9a 940e 0cfd 	CALL __CFD1U
000c9c 2f0e      	MOV  R16,R30
000c9d 81ae      	LDD  R26,Y+6
000c9e 81bf      	LDD  R27,Y+6+1
000c9f 9611      	ADIW R26,1
000ca0 83ae      	STD  Y+6,R26
000ca1 83bf      	STD  Y+6+1,R27
000ca2 9711      	SBIW R26,1
000ca3 5de0      	SUBI R30,-LOW(48)
000ca4 93ec      	ST   X,R30
000ca5 2fe0      	MOV  R30,R16
000ca6 e0f0      	LDI  R31,0
                +
000ca7 85a9     +LDD R26 , Y + 9
000ca8 85ba     +LDD R27 , Y + 9 + 1
000ca9 858b     +LDD R24 , Y + 9 + 2
000caa 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000cab 940e 0e96 	CALL __CWD1
000cad 940e 0d36 	CALL __CDF1
000caf 940e 0f64 	CALL __SWAPD12
000cb1 940e 0d69 	CALL __SUBF12
                +
000cb3 87e9     +STD Y + 9 , R30
000cb4 87fa     +STD Y + 9 + 1 , R31
000cb5 876b     +STD Y + 9 + 2 , R22
000cb6 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000cb7 cfcf      	RJMP _0x20A001E
                 _0x20A0020:
                 _0x20C0001:
000cb8 81ae      	LDD  R26,Y+6
000cb9 81bf      	LDD  R27,Y+6+1
000cba e0e0      	LDI  R30,LOW(0)
000cbb 93ec      	ST   X,R30
                 _0x20C0002:
000cbc 8119      	LDD  R17,Y+1
000cbd 8108      	LDD  R16,Y+0
000cbe 962d      	ADIW R28,13
000cbf 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _recv_buf:
000300           	.BYTE 0x14
                 __seed_G105:
000314           	.BYTE 0x4
                 
                 	.CSEG
                 
                 	.CSEG
                 _delay_ms:
000cc0 9610      	adiw r26,0
000cc1 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000cc2 ec8d     +LDI R24 , LOW ( 0xACD )
000cc3 e09a     +LDI R25 , HIGH ( 0xACD )
                +__DELAY_USW_LOOP :
000cc4 9701     +SBIW R24 , 1
000cc5 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xACD
000cc6 95a8      	wdr
000cc7 9711      	sbiw r26,1
000cc8 f7c9      	brne __delay_ms0
                 __delay_ms1:
000cc9 9508      	ret
                 
                 __ANEGF1:
000cca 9730      	SBIW R30,0
000ccb 4060      	SBCI R22,0
000ccc 4070      	SBCI R23,0
000ccd f009      	BREQ __ANEGF10
000cce 5870      	SUBI R23,0x80
                 __ANEGF10:
000ccf 9508      	RET
                 
                 __ROUND_REPACK:
000cd0 2355      	TST  R21
000cd1 f442      	BRPL __REPACK
000cd2 3850      	CPI  R21,0x80
000cd3 f411      	BRNE __ROUND_REPACK0
000cd4 ffe0      	SBRS R30,0
000cd5 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000cd6 9631      	ADIW R30,1
000cd7 1f69      	ADC  R22,R25
000cd8 1f79      	ADC  R23,R25
000cd9 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000cda e850      	LDI  R21,0x80
000cdb 2757      	EOR  R21,R23
000cdc f411      	BRNE __REPACK0
000cdd 935f      	PUSH R21
000cde c0cf      	RJMP __ZERORES
                 __REPACK0:
000cdf 3f5f      	CPI  R21,0xFF
000ce0 f031      	BREQ __REPACK1
000ce1 0f66      	LSL  R22
000ce2 0c00      	LSL  R0
000ce3 9557      	ROR  R21
000ce4 9567      	ROR  R22
000ce5 2f75      	MOV  R23,R21
000ce6 9508      	RET
                 __REPACK1:
000ce7 935f      	PUSH R21
000ce8 2000      	TST  R0
000ce9 f00a      	BRMI __REPACK2
000cea c0cf      	RJMP __MAXRES
                 __REPACK2:
000ceb c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000cec e850      	LDI  R21,0x80
000ced 2e19      	MOV  R1,R25
000cee 2215      	AND  R1,R21
000cef 0f88      	LSL  R24
000cf0 1f99      	ROL  R25
000cf1 2795      	EOR  R25,R21
000cf2 0f55      	LSL  R21
000cf3 9587      	ROR  R24
                 
                 __UNPACK1:
000cf4 e850      	LDI  R21,0x80
000cf5 2e07      	MOV  R0,R23
000cf6 2205      	AND  R0,R21
000cf7 0f66      	LSL  R22
000cf8 1f77      	ROL  R23
000cf9 2775      	EOR  R23,R21
000cfa 0f55      	LSL  R21
000cfb 9567      	ROR  R22
000cfc 9508      	RET
                 
                 __CFD1U:
000cfd 9468      	SET
000cfe c001      	RJMP __CFD1U0
                 __CFD1:
000cff 94e8      	CLT
                 __CFD1U0:
000d00 935f      	PUSH R21
000d01 dff2      	RCALL __UNPACK1
000d02 3870      	CPI  R23,0x80
000d03 f018      	BRLO __CFD10
000d04 3f7f      	CPI  R23,0xFF
000d05 f408      	BRCC __CFD10
000d06 c0a7      	RJMP __ZERORES
                 __CFD10:
000d07 e156      	LDI  R21,22
000d08 1b57      	SUB  R21,R23
000d09 f4aa      	BRPL __CFD11
000d0a 9551      	NEG  R21
000d0b 3058      	CPI  R21,8
000d0c f40e      	BRTC __CFD19
000d0d 3059      	CPI  R21,9
                 __CFD19:
000d0e f030      	BRLO __CFD17
000d0f efef      	SER  R30
000d10 efff      	SER  R31
000d11 ef6f      	SER  R22
000d12 e77f      	LDI  R23,0x7F
000d13 f977      	BLD  R23,7
000d14 c01a      	RJMP __CFD15
                 __CFD17:
000d15 2777      	CLR  R23
000d16 2355      	TST  R21
000d17 f0b9      	BREQ __CFD15
                 __CFD18:
000d18 0fee      	LSL  R30
000d19 1fff      	ROL  R31
000d1a 1f66      	ROL  R22
000d1b 1f77      	ROL  R23
000d1c 955a      	DEC  R21
000d1d f7d1      	BRNE __CFD18
000d1e c010      	RJMP __CFD15
                 __CFD11:
000d1f 2777      	CLR  R23
                 __CFD12:
000d20 3058      	CPI  R21,8
000d21 f028      	BRLO __CFD13
000d22 2fef      	MOV  R30,R31
000d23 2ff6      	MOV  R31,R22
000d24 2f67      	MOV  R22,R23
000d25 5058      	SUBI R21,8
000d26 cff9      	RJMP __CFD12
                 __CFD13:
000d27 2355      	TST  R21
000d28 f031      	BREQ __CFD15
                 __CFD14:
000d29 9576      	LSR  R23
000d2a 9567      	ROR  R22
000d2b 95f7      	ROR  R31
000d2c 95e7      	ROR  R30
000d2d 955a      	DEC  R21
000d2e f7d1      	BRNE __CFD14
                 __CFD15:
000d2f 2000      	TST  R0
000d30 f40a      	BRPL __CFD16
000d31 d14e      	RCALL __ANEGD1
                 __CFD16:
000d32 915f      	POP  R21
000d33 9508      	RET
                 
                 __CDF1U:
000d34 9468      	SET
000d35 c001      	RJMP __CDF1U0
                 __CDF1:
000d36 94e8      	CLT
                 __CDF1U0:
000d37 9730      	SBIW R30,0
000d38 4060      	SBCI R22,0
000d39 4070      	SBCI R23,0
000d3a f0b1      	BREQ __CDF10
000d3b 2400      	CLR  R0
000d3c f026      	BRTS __CDF11
000d3d 2377      	TST  R23
000d3e f412      	BRPL __CDF11
000d3f 9400      	COM  R0
000d40 d13f      	RCALL __ANEGD1
                 __CDF11:
000d41 2e17      	MOV  R1,R23
000d42 e17e      	LDI  R23,30
000d43 2011      	TST  R1
                 __CDF12:
000d44 f032      	BRMI __CDF13
000d45 957a      	DEC  R23
000d46 0fee      	LSL  R30
000d47 1fff      	ROL  R31
000d48 1f66      	ROL  R22
000d49 1c11      	ROL  R1
000d4a cff9      	RJMP __CDF12
                 __CDF13:
000d4b 2fef      	MOV  R30,R31
000d4c 2ff6      	MOV  R31,R22
000d4d 2d61      	MOV  R22,R1
000d4e 935f      	PUSH R21
000d4f df8a      	RCALL __REPACK
000d50 915f      	POP  R21
                 __CDF10:
000d51 9508      	RET
                 
                 __SWAPACC:
000d52 934f      	PUSH R20
000d53 01af      	MOVW R20,R30
000d54 01fd      	MOVW R30,R26
000d55 01da      	MOVW R26,R20
000d56 01ab      	MOVW R20,R22
000d57 01bc      	MOVW R22,R24
000d58 01ca      	MOVW R24,R20
000d59 2d40      	MOV  R20,R0
000d5a 2c01      	MOV  R0,R1
000d5b 2e14      	MOV  R1,R20
000d5c 914f      	POP  R20
000d5d 9508      	RET
                 
                 __UADD12:
000d5e 0fea      	ADD  R30,R26
000d5f 1ffb      	ADC  R31,R27
000d60 1f68      	ADC  R22,R24
000d61 9508      	RET
                 
                 __NEGMAN1:
000d62 95e0      	COM  R30
000d63 95f0      	COM  R31
000d64 9560      	COM  R22
000d65 5fef      	SUBI R30,-1
000d66 4fff      	SBCI R31,-1
000d67 4f6f      	SBCI R22,-1
000d68 9508      	RET
                 
                 __SUBF12:
000d69 935f      	PUSH R21
000d6a df81      	RCALL __UNPACK
000d6b 3890      	CPI  R25,0x80
000d6c f171      	BREQ __ADDF129
000d6d e850      	LDI  R21,0x80
000d6e 2615      	EOR  R1,R21
                 
000d6f c004      	RJMP __ADDF120
                 
                 __ADDF12:
000d70 935f      	PUSH R21
000d71 df7a      	RCALL __UNPACK
000d72 3890      	CPI  R25,0x80
000d73 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000d74 3870      	CPI  R23,0x80
000d75 f121      	BREQ __ADDF128
                 __ADDF121:
000d76 2f57      	MOV  R21,R23
000d77 1b59      	SUB  R21,R25
000d78 f12b      	BRVS __ADDF1211
000d79 f412      	BRPL __ADDF122
000d7a dfd7      	RCALL __SWAPACC
000d7b cffa      	RJMP __ADDF121
                 __ADDF122:
000d7c 3158      	CPI  R21,24
000d7d f018      	BRLO __ADDF123
000d7e 27aa      	CLR  R26
000d7f 27bb      	CLR  R27
000d80 2788      	CLR  R24
                 __ADDF123:
000d81 3058      	CPI  R21,8
000d82 f028      	BRLO __ADDF124
000d83 2fab      	MOV  R26,R27
000d84 2fb8      	MOV  R27,R24
000d85 2788      	CLR  R24
000d86 5058      	SUBI R21,8
000d87 cff9      	RJMP __ADDF123
                 __ADDF124:
000d88 2355      	TST  R21
000d89 f029      	BREQ __ADDF126
                 __ADDF125:
000d8a 9586      	LSR  R24
000d8b 95b7      	ROR  R27
000d8c 95a7      	ROR  R26
000d8d 955a      	DEC  R21
000d8e f7d9      	BRNE __ADDF125
                 __ADDF126:
000d8f 2d50      	MOV  R21,R0
000d90 2551      	EOR  R21,R1
000d91 f072      	BRMI __ADDF127
000d92 dfcb      	RCALL __UADD12
000d93 f438      	BRCC __ADDF129
000d94 9567      	ROR  R22
000d95 95f7      	ROR  R31
000d96 95e7      	ROR  R30
000d97 9573      	INC  R23
000d98 f413      	BRVC __ADDF129
000d99 c020      	RJMP __MAXRES
                 __ADDF128:
000d9a dfb7      	RCALL __SWAPACC
                 __ADDF129:
000d9b df3e      	RCALL __REPACK
000d9c 915f      	POP  R21
000d9d 9508      	RET
                 __ADDF1211:
000d9e f7d8      	BRCC __ADDF128
000d9f cffb      	RJMP __ADDF129
                 __ADDF127:
000da0 1bea      	SUB  R30,R26
000da1 0bfb      	SBC  R31,R27
000da2 0b68      	SBC  R22,R24
000da3 f051      	BREQ __ZERORES
000da4 f410      	BRCC __ADDF1210
000da5 9400      	COM  R0
000da6 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000da7 2366      	TST  R22
000da8 f392      	BRMI __ADDF129
000da9 0fee      	LSL  R30
000daa 1fff      	ROL  R31
000dab 1f66      	ROL  R22
000dac 957a      	DEC  R23
000dad f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000dae 27ee      	CLR  R30
000daf 27ff      	CLR  R31
000db0 2766      	CLR  R22
000db1 2777      	CLR  R23
000db2 915f      	POP  R21
000db3 9508      	RET
                 
                 __MINRES:
000db4 efef      	SER  R30
000db5 efff      	SER  R31
000db6 e76f      	LDI  R22,0x7F
000db7 ef7f      	SER  R23
000db8 915f      	POP  R21
000db9 9508      	RET
                 
                 __MAXRES:
000dba efef      	SER  R30
000dbb efff      	SER  R31
000dbc e76f      	LDI  R22,0x7F
000dbd e77f      	LDI  R23,0x7F
000dbe 915f      	POP  R21
000dbf 9508      	RET
                 
                 __MULF12:
000dc0 935f      	PUSH R21
000dc1 df2a      	RCALL __UNPACK
000dc2 3870      	CPI  R23,0x80
000dc3 f351      	BREQ __ZERORES
000dc4 3890      	CPI  R25,0x80
000dc5 f341      	BREQ __ZERORES
000dc6 2401      	EOR  R0,R1
000dc7 9408      	SEC
000dc8 1f79      	ADC  R23,R25
000dc9 f423      	BRVC __MULF124
000dca f31c      	BRLT __ZERORES
                 __MULF125:
000dcb 2000      	TST  R0
000dcc f33a      	BRMI __MINRES
000dcd cfec      	RJMP __MAXRES
                 __MULF124:
000dce 920f      	PUSH R0
000dcf 931f      	PUSH R17
000dd0 932f      	PUSH R18
000dd1 933f      	PUSH R19
000dd2 934f      	PUSH R20
000dd3 2711      	CLR  R17
000dd4 2722      	CLR  R18
000dd5 2799      	CLR  R25
000dd6 9f68      	MUL  R22,R24
000dd7 01a0      	MOVW R20,R0
000dd8 9f8f      	MUL  R24,R31
000dd9 2d30      	MOV  R19,R0
000dda 0d41      	ADD  R20,R1
000ddb 1f59      	ADC  R21,R25
000ddc 9f6b      	MUL  R22,R27
000ddd 0d30      	ADD  R19,R0
000dde 1d41      	ADC  R20,R1
000ddf 1f59      	ADC  R21,R25
000de0 9f8e      	MUL  R24,R30
000de1 d027      	RCALL __MULF126
000de2 9fbf      	MUL  R27,R31
000de3 d025      	RCALL __MULF126
000de4 9f6a      	MUL  R22,R26
000de5 d023      	RCALL __MULF126
000de6 9fbe      	MUL  R27,R30
000de7 d01d      	RCALL __MULF127
000de8 9faf      	MUL  R26,R31
000de9 d01b      	RCALL __MULF127
000dea 9fae      	MUL  R26,R30
000deb 0d11      	ADD  R17,R1
000dec 1f29      	ADC  R18,R25
000ded 1f39      	ADC  R19,R25
000dee 1f49      	ADC  R20,R25
000def 1f59      	ADC  R21,R25
000df0 2fe3      	MOV  R30,R19
000df1 2ff4      	MOV  R31,R20
000df2 2f65      	MOV  R22,R21
000df3 2f52      	MOV  R21,R18
000df4 914f      	POP  R20
000df5 913f      	POP  R19
000df6 912f      	POP  R18
000df7 911f      	POP  R17
000df8 900f      	POP  R0
000df9 2366      	TST  R22
000dfa f02a      	BRMI __MULF122
000dfb 0f55      	LSL  R21
000dfc 1fee      	ROL  R30
000dfd 1fff      	ROL  R31
000dfe 1f66      	ROL  R22
000dff c002      	RJMP __MULF123
                 __MULF122:
000e00 9573      	INC  R23
000e01 f24b      	BRVS __MULF125
                 __MULF123:
000e02 decd      	RCALL __ROUND_REPACK
000e03 915f      	POP  R21
000e04 9508      	RET
                 
                 __MULF127:
000e05 0d10      	ADD  R17,R0
000e06 1d21      	ADC  R18,R1
000e07 1f39      	ADC  R19,R25
000e08 c002      	RJMP __MULF128
                 __MULF126:
000e09 0d20      	ADD  R18,R0
000e0a 1d31      	ADC  R19,R1
                 __MULF128:
000e0b 1f49      	ADC  R20,R25
000e0c 1f59      	ADC  R21,R25
000e0d 9508      	RET
                 
                 __DIVF21:
000e0e 935f      	PUSH R21
000e0f dedc      	RCALL __UNPACK
000e10 3870      	CPI  R23,0x80
000e11 f421      	BRNE __DIVF210
000e12 2011      	TST  R1
                 __DIVF211:
000e13 f40a      	BRPL __DIVF219
000e14 cf9f      	RJMP __MINRES
                 __DIVF219:
000e15 cfa4      	RJMP __MAXRES
                 __DIVF210:
000e16 3890      	CPI  R25,0x80
000e17 f409      	BRNE __DIVF218
                 __DIVF217:
000e18 cf95      	RJMP __ZERORES
                 __DIVF218:
000e19 2401      	EOR  R0,R1
000e1a 9408      	SEC
000e1b 0b97      	SBC  R25,R23
000e1c f41b      	BRVC __DIVF216
000e1d f3d4      	BRLT __DIVF217
000e1e 2000      	TST  R0
000e1f cff3      	RJMP __DIVF211
                 __DIVF216:
000e20 2f79      	MOV  R23,R25
000e21 931f      	PUSH R17
000e22 932f      	PUSH R18
000e23 933f      	PUSH R19
000e24 934f      	PUSH R20
000e25 2411      	CLR  R1
000e26 2711      	CLR  R17
000e27 2722      	CLR  R18
000e28 2733      	CLR  R19
000e29 2744      	CLR  R20
000e2a 2755      	CLR  R21
000e2b e290      	LDI  R25,32
                 __DIVF212:
000e2c 17ae      	CP   R26,R30
000e2d 07bf      	CPC  R27,R31
000e2e 0786      	CPC  R24,R22
000e2f 0741      	CPC  R20,R17
000e30 f030      	BRLO __DIVF213
000e31 1bae      	SUB  R26,R30
000e32 0bbf      	SBC  R27,R31
000e33 0b86      	SBC  R24,R22
000e34 0b41      	SBC  R20,R17
000e35 9408      	SEC
000e36 c001      	RJMP __DIVF214
                 __DIVF213:
000e37 9488      	CLC
                 __DIVF214:
000e38 1f55      	ROL  R21
000e39 1f22      	ROL  R18
000e3a 1f33      	ROL  R19
000e3b 1c11      	ROL  R1
000e3c 1faa      	ROL  R26
000e3d 1fbb      	ROL  R27
000e3e 1f88      	ROL  R24
000e3f 1f44      	ROL  R20
000e40 959a      	DEC  R25
000e41 f751      	BRNE __DIVF212
000e42 01f9      	MOVW R30,R18
000e43 2d61      	MOV  R22,R1
000e44 914f      	POP  R20
000e45 913f      	POP  R19
000e46 912f      	POP  R18
000e47 911f      	POP  R17
000e48 2366      	TST  R22
000e49 f032      	BRMI __DIVF215
000e4a 0f55      	LSL  R21
000e4b 1fee      	ROL  R30
000e4c 1fff      	ROL  R31
000e4d 1f66      	ROL  R22
000e4e 957a      	DEC  R23
000e4f f243      	BRVS __DIVF217
                 __DIVF215:
000e50 de7f      	RCALL __ROUND_REPACK
000e51 915f      	POP  R21
000e52 9508      	RET
                 
                 __CMPF12:
000e53 2399      	TST  R25
000e54 f09a      	BRMI __CMPF120
000e55 2377      	TST  R23
000e56 f042      	BRMI __CMPF121
000e57 1797      	CP   R25,R23
000e58 f048      	BRLO __CMPF122
000e59 f429      	BRNE __CMPF121
000e5a 17ae      	CP   R26,R30
000e5b 07bf      	CPC  R27,R31
000e5c 0786      	CPC  R24,R22
000e5d f020      	BRLO __CMPF122
000e5e f031      	BREQ __CMPF123
                 __CMPF121:
000e5f 9498      	CLZ
000e60 9488      	CLC
000e61 9508      	RET
                 __CMPF122:
000e62 9498      	CLZ
000e63 9408      	SEC
000e64 9508      	RET
                 __CMPF123:
000e65 9418      	SEZ
000e66 9488      	CLC
000e67 9508      	RET
                 __CMPF120:
000e68 2377      	TST  R23
000e69 f7c2      	BRPL __CMPF122
000e6a 1797      	CP   R25,R23
000e6b f398      	BRLO __CMPF121
000e6c f7a9      	BRNE __CMPF122
000e6d 17ea      	CP   R30,R26
000e6e 07fb      	CPC  R31,R27
000e6f 0768      	CPC  R22,R24
000e70 f388      	BRLO __CMPF122
000e71 f399      	BREQ __CMPF123
000e72 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
000e73 2400      	CLR  R0
000e74 0daf      	ADD  R26,R15
000e75 1db0      	ADC  R27,R0
000e76 9508      	RET
                 
                 __ADDD12:
000e77 0fea      	ADD  R30,R26
000e78 1ffb      	ADC  R31,R27
000e79 1f68      	ADC  R22,R24
000e7a 1f79      	ADC  R23,R25
000e7b 9508      	RET
                 
                 __ANEGW1:
000e7c 95f1      	NEG  R31
000e7d 95e1      	NEG  R30
000e7e 40f0      	SBCI R31,0
000e7f 9508      	RET
                 
                 __ANEGD1:
000e80 95f0      	COM  R31
000e81 9560      	COM  R22
000e82 9570      	COM  R23
000e83 95e1      	NEG  R30
000e84 4fff      	SBCI R31,-1
000e85 4f6f      	SBCI R22,-1
000e86 4f7f      	SBCI R23,-1
000e87 9508      	RET
                 
                 __LSLB12:
000e88 23ee      	TST  R30
000e89 2e0e      	MOV  R0,R30
000e8a 2fea      	MOV  R30,R26
000e8b f019      	BREQ __LSLB12R
                 __LSLB12L:
000e8c 0fee      	LSL  R30
000e8d 940a      	DEC  R0
000e8e f7e9      	BRNE __LSLB12L
                 __LSLB12R:
000e8f 9508      	RET
                 
                 __CBD1:
000e90 2ffe      	MOV  R31,R30
000e91 0fff      	ADD  R31,R31
000e92 0bff      	SBC  R31,R31
000e93 2f6f      	MOV  R22,R31
000e94 2f7f      	MOV  R23,R31
000e95 9508      	RET
                 
                 __CWD1:
000e96 2f6f      	MOV  R22,R31
000e97 0f66      	ADD  R22,R22
000e98 0b66      	SBC  R22,R22
000e99 2f76      	MOV  R23,R22
000e9a 9508      	RET
                 
                 __LTW12:
000e9b 17ae      	CP   R26,R30
000e9c 07bf      	CPC  R27,R31
000e9d e0e1      	LDI  R30,1
000e9e f00c      	BRLT __LTW12T
000e9f 27ee      	CLR  R30
                 __LTW12T:
000ea0 9508      	RET
                 
                 __GTW12:
000ea1 17ea      	CP   R30,R26
000ea2 07fb      	CPC  R31,R27
000ea3 e0e1      	LDI  R30,1
000ea4 f00c      	BRLT __GTW12T
000ea5 27ee      	CLR  R30
                 __GTW12T:
000ea6 9508      	RET
                 
                 __MULD12U:
000ea7 9f7a      	MUL  R23,R26
000ea8 2d70      	MOV  R23,R0
000ea9 9f6b      	MUL  R22,R27
000eaa 0d70      	ADD  R23,R0
000eab 9ff8      	MUL  R31,R24
000eac 0d70      	ADD  R23,R0
000ead 9fe9      	MUL  R30,R25
000eae 0d70      	ADD  R23,R0
000eaf 9f6a      	MUL  R22,R26
000eb0 2d60      	MOV  R22,R0
000eb1 0d71      	ADD  R23,R1
000eb2 9ffb      	MUL  R31,R27
000eb3 0d60      	ADD  R22,R0
000eb4 1d71      	ADC  R23,R1
000eb5 9fe8      	MUL  R30,R24
000eb6 0d60      	ADD  R22,R0
000eb7 1d71      	ADC  R23,R1
000eb8 2788      	CLR  R24
000eb9 9ffa      	MUL  R31,R26
000eba 2df0      	MOV  R31,R0
000ebb 0d61      	ADD  R22,R1
000ebc 1f78      	ADC  R23,R24
000ebd 9feb      	MUL  R30,R27
000ebe 0df0      	ADD  R31,R0
000ebf 1d61      	ADC  R22,R1
000ec0 1f78      	ADC  R23,R24
000ec1 9fea      	MUL  R30,R26
000ec2 2de0      	MOV  R30,R0
000ec3 0df1      	ADD  R31,R1
000ec4 1f68      	ADC  R22,R24
000ec5 1f78      	ADC  R23,R24
000ec6 9508      	RET
                 
                 __DIVB21U:
000ec7 2400      	CLR  R0
000ec8 e098      	LDI  R25,8
                 __DIVB21U1:
000ec9 0faa      	LSL  R26
000eca 1c00      	ROL  R0
000ecb 1a0e      	SUB  R0,R30
000ecc f410      	BRCC __DIVB21U2
000ecd 0e0e      	ADD  R0,R30
000ece c001      	RJMP __DIVB21U3
                 __DIVB21U2:
000ecf 60a1      	SBR  R26,1
                 __DIVB21U3:
000ed0 959a      	DEC  R25
000ed1 f7b9      	BRNE __DIVB21U1
000ed2 2fea      	MOV  R30,R26
000ed3 2da0      	MOV  R26,R0
000ed4 9508      	RET
                 
                 __DIVB21:
000ed5 d05a      	RCALL __CHKSIGNB
000ed6 dff0      	RCALL __DIVB21U
000ed7 f40e      	BRTC __DIVB211
000ed8 95e1      	NEG  R30
                 __DIVB211:
000ed9 9508      	RET
                 
                 __DIVW21U:
000eda 2400      	CLR  R0
000edb 2411      	CLR  R1
000edc e190      	LDI  R25,16
                 __DIVW21U1:
000edd 0faa      	LSL  R26
000ede 1fbb      	ROL  R27
000edf 1c00      	ROL  R0
000ee0 1c11      	ROL  R1
000ee1 1a0e      	SUB  R0,R30
000ee2 0a1f      	SBC  R1,R31
000ee3 f418      	BRCC __DIVW21U2
000ee4 0e0e      	ADD  R0,R30
000ee5 1e1f      	ADC  R1,R31
000ee6 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000ee7 60a1      	SBR  R26,1
                 __DIVW21U3:
000ee8 959a      	DEC  R25
000ee9 f799      	BRNE __DIVW21U1
000eea 01fd      	MOVW R30,R26
000eeb 01d0      	MOVW R26,R0
000eec 9508      	RET
                 
                 __DIVD21U:
000eed 933f      	PUSH R19
000eee 934f      	PUSH R20
000eef 935f      	PUSH R21
000ef0 2400      	CLR  R0
000ef1 2411      	CLR  R1
000ef2 2744      	CLR  R20
000ef3 2755      	CLR  R21
000ef4 e230      	LDI  R19,32
                 __DIVD21U1:
000ef5 0faa      	LSL  R26
000ef6 1fbb      	ROL  R27
000ef7 1f88      	ROL  R24
000ef8 1f99      	ROL  R25
000ef9 1c00      	ROL  R0
000efa 1c11      	ROL  R1
000efb 1f44      	ROL  R20
000efc 1f55      	ROL  R21
000efd 1a0e      	SUB  R0,R30
000efe 0a1f      	SBC  R1,R31
000eff 0b46      	SBC  R20,R22
000f00 0b57      	SBC  R21,R23
000f01 f428      	BRCC __DIVD21U2
000f02 0e0e      	ADD  R0,R30
000f03 1e1f      	ADC  R1,R31
000f04 1f46      	ADC  R20,R22
000f05 1f57      	ADC  R21,R23
000f06 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000f07 60a1      	SBR  R26,1
                 __DIVD21U3:
000f08 953a      	DEC  R19
000f09 f759      	BRNE __DIVD21U1
000f0a 01fd      	MOVW R30,R26
000f0b 01bc      	MOVW R22,R24
000f0c 01d0      	MOVW R26,R0
000f0d 01ca      	MOVW R24,R20
000f0e 915f      	POP  R21
000f0f 914f      	POP  R20
000f10 913f      	POP  R19
000f11 9508      	RET
                 
                 __MODB21:
000f12 94e8      	CLT
000f13 ffa7      	SBRS R26,7
000f14 c002      	RJMP __MODB211
000f15 95a1      	NEG  R26
000f16 9468      	SET
                 __MODB211:
000f17 fde7      	SBRC R30,7
000f18 95e1      	NEG  R30
000f19 dfad      	RCALL __DIVB21U
000f1a 2fea      	MOV  R30,R26
000f1b f40e      	BRTC __MODB212
000f1c 95e1      	NEG  R30
                 __MODB212:
000f1d 9508      	RET
                 
                 __MODW21:
000f1e 94e8      	CLT
000f1f ffb7      	SBRS R27,7
000f20 c004      	RJMP __MODW211
000f21 95a0      	COM  R26
000f22 95b0      	COM  R27
000f23 9611      	ADIW R26,1
000f24 9468      	SET
                 __MODW211:
000f25 fdf7      	SBRC R31,7
000f26 df55      	RCALL __ANEGW1
000f27 dfb2      	RCALL __DIVW21U
000f28 01fd      	MOVW R30,R26
000f29 f40e      	BRTC __MODW212
000f2a df51      	RCALL __ANEGW1
                 __MODW212:
000f2b 9508      	RET
                 
                 __MODD21U:
000f2c dfc0      	RCALL __DIVD21U
000f2d 01fd      	MOVW R30,R26
000f2e 01bc      	MOVW R22,R24
000f2f 9508      	RET
                 
                 __CHKSIGNB:
000f30 94e8      	CLT
000f31 ffe7      	SBRS R30,7
000f32 c002      	RJMP __CHKSB1
000f33 95e1      	NEG  R30
000f34 9468      	SET
                 __CHKSB1:
000f35 ffa7      	SBRS R26,7
000f36 c004      	RJMP __CHKSB2
000f37 95a1      	NEG  R26
000f38 f800      	BLD  R0,0
000f39 9403      	INC  R0
000f3a fa00      	BST  R0,0
                 __CHKSB2:
000f3b 9508      	RET
                 
                 __GETW1P:
000f3c 91ed      	LD   R30,X+
000f3d 91fc      	LD   R31,X
000f3e 9711      	SBIW R26,1
000f3f 9508      	RET
                 
                 __GETD1P:
000f40 91ed      	LD   R30,X+
000f41 91fd      	LD   R31,X+
000f42 916d      	LD   R22,X+
000f43 917c      	LD   R23,X
000f44 9713      	SBIW R26,3
000f45 9508      	RET
                 
                 __PUTDP1:
000f46 93ed      	ST   X+,R30
000f47 93fd      	ST   X+,R31
000f48 936d      	ST   X+,R22
000f49 937c      	ST   X,R23
000f4a 9508      	RET
                 
                 __GETD1S0:
000f4b 81e8      	LD   R30,Y
000f4c 81f9      	LDD  R31,Y+1
000f4d 816a      	LDD  R22,Y+2
000f4e 817b      	LDD  R23,Y+3
000f4f 9508      	RET
                 
                 __GETD2S0:
000f50 81a8      	LD   R26,Y
000f51 81b9      	LDD  R27,Y+1
000f52 818a      	LDD  R24,Y+2
000f53 819b      	LDD  R25,Y+3
000f54 9508      	RET
                 
                 __PUTD1S0:
000f55 83e8      	ST   Y,R30
000f56 83f9      	STD  Y+1,R31
000f57 836a      	STD  Y+2,R22
000f58 837b      	STD  Y+3,R23
000f59 9508      	RET
                 
                 __PUTPARD1:
000f5a 937a      	ST   -Y,R23
000f5b 936a      	ST   -Y,R22
000f5c 93fa      	ST   -Y,R31
000f5d 93ea      	ST   -Y,R30
000f5e 9508      	RET
                 
                 __PUTPARD2:
000f5f 939a      	ST   -Y,R25
000f60 938a      	ST   -Y,R24
000f61 93ba      	ST   -Y,R27
000f62 93aa      	ST   -Y,R26
000f63 9508      	RET
                 
                 __SWAPD12:
000f64 2e18      	MOV  R1,R24
000f65 2f86      	MOV  R24,R22
000f66 2d61      	MOV  R22,R1
000f67 2e19      	MOV  R1,R25
000f68 2f97      	MOV  R25,R23
000f69 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000f6a 2e1b      	MOV  R1,R27
000f6b 2fbf      	MOV  R27,R31
000f6c 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000f6d 2e1a      	MOV  R1,R26
000f6e 2fae      	MOV  R26,R30
000f6f 2de1      	MOV  R30,R1
000f70 9508      	RET
                 
                 __EEPROMRDW:
000f71 9611      	ADIW R26,1
000f72 d002      	RCALL __EEPROMRDB
000f73 2ffe      	MOV  R31,R30
000f74 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
000f75 99f9      	SBIC EECR,EEWE
000f76 cffe      	RJMP __EEPROMRDB
000f77 93ff      	PUSH R31
000f78 b7ff      	IN   R31,SREG
000f79 94f8      	CLI
000f7a bda1      	OUT  EEARL,R26
000f7b bdb2      	OUT  EEARH,R27
000f7c 9af8      	SBI  EECR,EERE
000f7d b5e0      	IN   R30,EEDR
000f7e bfff      	OUT  SREG,R31
000f7f 91ff      	POP  R31
000f80 9508      	RET
                 
                 __EEPROMWRW:
000f81 d007      	RCALL __EEPROMWRB
000f82 9611      	ADIW R26,1
000f83 93ef      	PUSH R30
000f84 2fef      	MOV  R30,R31
000f85 d003      	RCALL __EEPROMWRB
000f86 91ef      	POP  R30
000f87 9711      	SBIW R26,1
000f88 9508      	RET
                 
                 __EEPROMWRB:
000f89 9bf9      	SBIS EECR,EEWE
000f8a c002      	RJMP __EEPROMWRB1
000f8b 95a8      	WDR
000f8c cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
000f8d b79f      	IN   R25,SREG
000f8e 94f8      	CLI
000f8f bda1      	OUT  EEARL,R26
000f90 bdb2      	OUT  EEARH,R27
000f91 9af8      	SBI  EECR,EERE
000f92 b580      	IN   R24,EEDR
000f93 17e8      	CP   R30,R24
000f94 f019      	BREQ __EEPROMWRB0
000f95 bde0      	OUT  EEDR,R30
000f96 9afa      	SBI  EECR,EEMWE
000f97 9af9      	SBI  EECR,EEWE
                 __EEPROMWRB0:
000f98 bf9f      	OUT  SREG,R25
000f99 9508      	RET
                 
                 __CPD10:
000f9a 9730      	SBIW R30,0
000f9b 4060      	SBCI R22,0
000f9c 4070      	SBCI R23,0
000f9d 9508      	RET
                 
                 __SAVELOCR6:
000f9e 935a      	ST   -Y,R21
                 __SAVELOCR5:
000f9f 934a      	ST   -Y,R20
                 __SAVELOCR4:
000fa0 933a      	ST   -Y,R19
                 __SAVELOCR3:
000fa1 932a      	ST   -Y,R18
                 __SAVELOCR2:
000fa2 931a      	ST   -Y,R17
000fa3 930a      	ST   -Y,R16
000fa4 9508      	RET
                 
                 __LOADLOCR6:
000fa5 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000fa6 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000fa7 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000fa8 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000fa9 8119      	LDD  R17,Y+1
000faa 8108      	LD   R16,Y
000fab 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
000fac 0fac      	ADD  R26,R28
000fad 1fbd      	ADC  R27,R29
                 __INITLOC0:
000fae 9005      	LPM  R0,Z+
000faf 920d      	ST   X+,R0
000fb0 958a      	DEC  R24
000fb1 f7e1      	BRNE __INITLOC0
000fb2 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega328P register use summary:
r0 : 114 r1 :  46 r2 :   0 r3 :   0 r4 :   3 r5 :   4 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:  22 
r16:  88 r17:  86 r18:  64 r19:  74 r20:  68 r21: 101 r22: 167 r23: 153 
r24: 124 r25:  90 r26: 477 r27: 237 r28:  91 r29:   2 r30: 865 r31: 401 
x  : 119 y  : 916 z  :  51 
Registers used: 24 out of 35 (68.6%)

ATmega328P instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  44 add   :  37 
adiw  :  94 and   :   5 andi  :  25 asr   :   0 bclr  :   0 bld   :  12 
brbc  :   0 brbs  :   0 brcc  :   9 brcs  :   5 break :   0 breq  :  71 
brge  :   7 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  37 
brlt  :   4 brmi  :  11 brne  : 100 brpl  :   9 brsh  :  12 brtc  :   5 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 call  : 172 
cbi   :  10 cbr   :   2 clc   :   3 clh   :   0 cli   :   3 cln   :   0 
clr   :  72 cls   :   0 clt   :  10 clv   :   0 clz   :   2 com   :  10 
cp    :  21 cpc   :  20 cpi   : 145 cpse  :   0 dec   :  22 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :  17 ijmp  :   0 
in    :  27 inc   :   3 jmp   :  28 ld    : 120 ldd   : 485 ldi   : 394 
lds   :  11 lpm   :  17 lsl   :  16 lsr   :   3 mov   : 142 movw  : 121 
mul   :  22 muls  :   0 mulsu :   0 neg   :  11 nop   :   0 or    :   6 
ori   :  14 out   :  21 pop   :  38 push  :  38 rcall :  52 ret   :  76 
reti  :   1 rjmp  : 214 rol   :  35 ror   :  15 sbc   :  13 sbci  :  48 
sbi   :  17 sbic  :   3 sbis  :   4 sbiw  :  63 sbr   :   5 sbrc  :   7 
sbrs  :  23 sec   :   5 seh   :   0 sei   :   1 sen   :   0 ser   :   8 
ses   :   0 set   :   9 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    : 229 std   : 237 sts   :  13 sub   :   9 subi  :  90 swap  :   2 
tst   :  27 wdr   :   3 
Instructions used: 83 out of 116 (71.6%)

ATmega328P memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001f66   7928    110   8038   32768  24.5%
[.dseg] 0x000100 0x000318      0     24     24    2048   1.2%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 7 warnings
