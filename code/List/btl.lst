
AVRASM ver. 2.1.30  D:\OneDrive - student.hust.edu.vn\HUST\Learn in Hust\20192 Ky thuat ghep noi may tinh\BTL\BTL_Kythuatghepnoi\code\List\btl.asm Mon Jun 15 07:11:19 2020

D:\OneDrive - student.hust.edu.vn\HUST\Learn in Hust\20192 Ky thuat ghep noi may tinh\BTL\BTL_Kythuatghepnoi\code\List\btl.asm(1090): warning: Register r5 already defined by the .DEF directive
D:\OneDrive - student.hust.edu.vn\HUST\Learn in Hust\20192 Ky thuat ghep noi may tinh\BTL\BTL_Kythuatghepnoi\code\List\btl.asm(1091): warning: Register r4 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Release
                 ;Chip type              : ATmega328P
                 ;Program type           : Application
                 ;Clock frequency        : 11.059200 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Speed
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : long, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega328P
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x08FF
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _recv_buf_ind=R5
                 	.DEF _recv_done=R4
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 006b 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 010d 	JMP  _USART_receive_isr
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000034 0000      	.DB  0x0,0x0
                 
                 _0x2F:
000035 0000
000036 0000
000037 0000
000038 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000039 0000
00003a 0000
00003b 0000
00003c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00003d 0000
00003e 0000
00003f 0000
000040 ff00      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xFF
000041 ffff
000042 ffff
D:\OneDrive - student.hust.edu.vn\HUST\Learn in Hust\20192 Ky thuat ghep noi may tinh\BTL\BTL_Kythuatghepnoi\code\List\btl.asm(1138): warning: .cseg .db misalignment - padding zero byte
000043 00ff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x0:
000044 6425
000045 3000
000046 2520
000047 2064      	.DB  0x25,0x64,0x0,0x30,0x20,0x25,0x64,0x20
000048 6425
000049 2520
00004a 0064
00004b 3a54      	.DB  0x25,0x64,0x20,0x25,0x64,0x0,0x54,0x3A
00004c 6425
00004d 436f
00004e 202c
00004f 3a48      	.DB  0x25,0x64,0x6F,0x43,0x2C,0x20,0x48,0x3A
000050 6425
000051 2525
000052 4c00
000053 253a      	.DB  0x25,0x64,0x25,0x25,0x0,0x4C,0x3A,0x25
000054 2e34
000055 6632
000056 2525
000057 2d00      	.DB  0x34,0x2E,0x32,0x66,0x25,0x25,0x0,0x2D
000058 2031
000059 6425
D:\OneDrive - student.hust.edu.vn\HUST\Learn in Hust\20192 Ky thuat ghep noi may tinh\BTL\BTL_Kythuatghepnoi\code\List\btl.asm(1145): warning: .cseg .db misalignment - padding zero byte
00005a 0000      	.DB  0x31,0x20,0x25,0x64,0x0
                 _0x2000000:
00005b 4e2d
00005c 4e41
D:\OneDrive - student.hust.edu.vn\HUST\Learn in Hust\20192 Ky thuat ghep noi may tinh\BTL\BTL_Kythuatghepnoi\code\List\btl.asm(1147): warning: .cseg .db misalignment - padding zero byte
00005d 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x20A0060:
D:\OneDrive - student.hust.edu.vn\HUST\Learn in Hust\20192 Ky thuat ghep noi may tinh\BTL\BTL_Kythuatghepnoi\code\List\btl.asm(1149): warning: .cseg .db misalignment - padding zero byte
00005e 0001      	.DB  0x1
                 _0x20A0000:
00005f 4e2d
000060 4e41
000061 4900
000062 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\OneDrive - student.hust.edu.vn\HUST\Learn in Hust\20192 Ky thuat ghep noi may tinh\BTL\BTL_Kythuatghepnoi\code\List\btl.asm(1152): warning: .cseg .db misalignment - padding zero byte
000063 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000064 0002      	.DW  0x02
000065 0004      	.DW  0x04
000066 0068      	.DW  __REG_VARS*2
                 
000067 0001      	.DW  0x01
000068 0314      	.DW  __seed_G105
000069 00bc      	.DW  _0x20A0060*2
                 
                 _0xFFFFFFFF:
00006a 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00006b 94f8      	CLI
00006c 27ee      	CLR  R30
00006d bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00006e e0f1      	LDI  R31,1
00006f bff5      	OUT  MCUCR,R31
000070 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000071 e1f8      	LDI  R31,0x18
000072 95a8      	WDR
000073 b7a4      	IN   R26,MCUSR
000074 7fa7      	CBR  R26,8
000075 bfa4      	OUT  MCUSR,R26
000076 93f0 0060 	STS  WDTCSR,R31
000078 93e0 0060 	STS  WDTCSR,R30
                 
                 ;CLEAR R2-R14
00007a e08d      	LDI  R24,(14-2)+1
00007b e0a2      	LDI  R26,2
00007c 27bb      	CLR  R27
                 __CLEAR_REG:
00007d 93ed      	ST   X+,R30
00007e 958a      	DEC  R24
00007f f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000080 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000081 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000082 e0a0      	LDI  R26,LOW(__SRAM_START)
000083 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000084 93ed      	ST   X+,R30
000085 9701      	SBIW R24,1
000086 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000087 ece8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000088 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000089 9185      	LPM  R24,Z+
00008a 9195      	LPM  R25,Z+
00008b 9700      	SBIW R24,0
00008c f061      	BREQ __GLOBAL_INI_END
00008d 91a5      	LPM  R26,Z+
00008e 91b5      	LPM  R27,Z+
00008f 9005      	LPM  R0,Z+
000090 9015      	LPM  R1,Z+
000091 01bf      	MOVW R22,R30
000092 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000093 9005      	LPM  R0,Z+
000094 920d      	ST   X+,R0
000095 9701      	SBIW R24,1
000096 f7e1      	BRNE __GLOBAL_INI_LOOP
000097 01fb      	MOVW R30,R22
000098 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
000099 e0e0      	LDI  R30,__GPIOR0_INIT
00009a bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00009b efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00009c bfed      	OUT  SPL,R30
00009d e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00009e bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00009f e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000a0 e0d3      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000a1 940c 026f 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x300
                 
                 	.CSEG
                 ;#include <mega328p.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <eeprom.h>
                 ;#include <string.h>
                 ;#define BAUD 9600
                 ;#define SYS_CLOCK 11059200
                 ;#define DHT11_PORT PORTB
                 ;#define DHT11_DDR DDRB
                 ;#define DHT11_PIN PINB
                 ;#define DHT11_INPUTPIN 1
                 ;#define DHT11_TIMEOUT 200
                 ;#define V_REF 5.0
                 ;#define LCD_PORT PORTD
                 ;#define LCD_DPIN DDRD
                 ;#define LCD_RSPIN 2
                 ;#define LCD_ENPIN 3
                 ;
                 ;char recv_buf[20];
                 ;char recv_buf_ind = 0;
                 ;char recv_done = 0;
                 ;
                 ;void ADC_init(){
                 ; 0000 0017 void ADC_init(){
                 
                 	.CSEG
                 _ADC_init:
                 ; .FSTART _ADC_init
                 ; 0000 0018     // select Vref = AVcc
                 ; 0000 0019     ADMUX |= (1<<REFS0);
0000a3 91e0 007c 	LDS  R30,124
0000a5 64e0      	ORI  R30,0x40
0000a6 93e0 007c 	STS  124,R30
                 ; 0000 001A //    // Left adjust ADC result to allow easy 8 bit reading
                 ; 0000 001B //    ADMUX |= (1 << ADLAR);
                 ; 0000 001C     // set prescaler to 64 and enable ADC
                 ; 0000 001D     ADCSRA |= (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0)| (1 << ADEN);
0000a8 91e0 007a 	LDS  R30,122
0000aa 68e7      	ORI  R30,LOW(0x87)
0000ab 93e0 007a 	STS  122,R30
                 ; 0000 001E }
0000ad 9508      	RET
                 ; .FEND
                 ;
                 ;unsigned int ADC_read(unsigned char ADCchannel){
                 ; 0000 0020 unsigned int ADC_read(unsigned char ADCchannel){
                 _ADC_read:
                 ; .FSTART _ADC_read
                 ; 0000 0021     //select ADC channel with safety mask
                 ; 0000 0022     ADMUX = (ADMUX & 0xF0) | (ADCchannel & 0x0F);
0000ae 93aa      	ST   -Y,R26
                 ;	ADCchannel -> Y+0
0000af 91e0 007c 	LDS  R30,124
0000b1 7fe0      	ANDI R30,LOW(0xF0)
0000b2 2fae      	MOV  R26,R30
0000b3 81e8      	LD   R30,Y
0000b4 70ef      	ANDI R30,LOW(0xF)
0000b5 2bea      	OR   R30,R26
0000b6 93e0 007c 	STS  124,R30
                 ; 0000 0023     //single conversion mode
                 ; 0000 0024     ADCSRA |= (1<<ADSC);
0000b8 91e0 007a 	LDS  R30,122
0000ba 64e0      	ORI  R30,0x40
0000bb 93e0 007a 	STS  122,R30
                 ; 0000 0025     // wait until ADC conversion is complete
                 ; 0000 0026     while( ADCSRA & (1<<ADSC));
                 _0x3:
0000bd 91e0 007a 	LDS  R30,122
0000bf 74e0      	ANDI R30,LOW(0x40)
0000c0 f7e1      	BRNE _0x3
                 ; 0000 0027     return ADCL + (ADCH & 0x03) * 256;
0000c1 91e0 0078 	LDS  R30,120
0000c3 e0f0      	LDI  R31,0
0000c4 01df      	MOVW R26,R30
0000c5 91e0 0079 	LDS  R30,121
0000c7 e0f0      	LDI  R31,0
0000c8 70e3      	ANDI R30,LOW(0x3)
0000c9 70f0      	ANDI R31,HIGH(0x3)
0000ca 2ffe      	MOV  R31,R30
0000cb e0e0      	LDI  R30,0
0000cc 0fea      	ADD  R30,R26
0000cd 1ffb      	ADC  R31,R27
0000ce c08d      	RJMP _0x20C000C
                 ; 0000 0028 }
                 ; .FEND
                 ;
                 ;void USART_init(unsigned int ubrr){
                 ; 0000 002A void USART_init(unsigned int ubrr){
                 _USART_init:
                 ; .FSTART _USART_init
                 ; 0000 002B 	// set baud rate
                 ; 0000 002C 	UBRR0H = (unsigned char)(ubrr >> 8);
0000cf 93ba      	ST   -Y,R27
0000d0 93aa      	ST   -Y,R26
                 ;	ubrr -> Y+0
0000d1 81e9      	LDD  R30,Y+1
0000d2 93e0 00c5 	STS  197,R30
                 ; 0000 002D 	UBRR0L = (unsigned char)ubrr;
0000d4 81e8      	LD   R30,Y
0000d5 93e0 00c4 	STS  196,R30
                 ; 0000 002E 	// enable receiver and transmitter, receive interrupt
                 ; 0000 002F 	UCSR0B = 0x98;
0000d7 e9e8      	LDI  R30,LOW(152)
0000d8 93e0 00c1 	STS  193,R30
                 ; 0000 0030 	// set frame format: 8 bit data, 1 stop bit
                 ; 0000 0031 	UCSR0C = 0x06;
0000da e0e6      	LDI  R30,LOW(6)
0000db 93e0 00c2 	STS  194,R30
                 ; 0000 0032 }
0000dd 9622      	ADIW R28,2
0000de 9508      	RET
                 ; .FEND
                 ;
                 ;void USART_put(unsigned char * buf){
                 ; 0000 0034 void USART_put(unsigned char * buf){
                 _USART_put:
                 ; .FSTART _USART_put
                 ; 0000 0035     int i = 0;
                 ; 0000 0036     while(buf[i] != 0){
0000df 93ba      	ST   -Y,R27
0000e0 93aa      	ST   -Y,R26
0000e1 931a      	ST   -Y,R17
0000e2 930a      	ST   -Y,R16
                 ;	*buf -> Y+2
                 ;	i -> R16,R17
                +
0000e3 e000     +LDI R16 , LOW ( 0 )
0000e4 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x6:
0000e5 01f8      	MOVW R30,R16
0000e6 81aa      	LDD  R26,Y+2
0000e7 81bb      	LDD  R27,Y+2+1
0000e8 0fae      	ADD  R26,R30
0000e9 1fbf      	ADC  R27,R31
0000ea 91ec      	LD   R30,X
0000eb 30e0      	CPI  R30,0
0000ec f079      	BREQ _0x8
                 ; 0000 0037         while(!(UCSR0A & (1 << UDRE0))); // wait for empty transmit buffer
                 _0x9:
0000ed 91e0 00c0 	LDS  R30,192
0000ef 72e0      	ANDI R30,LOW(0x20)
0000f0 f3e1      	BREQ _0x9
                 ; 0000 0038         UDR0 = buf[i];
0000f1 01f8      	MOVW R30,R16
0000f2 81aa      	LDD  R26,Y+2
0000f3 81bb      	LDD  R27,Y+2+1
0000f4 0fae      	ADD  R26,R30
0000f5 1fbf      	ADC  R27,R31
0000f6 91ec      	LD   R30,X
0000f7 93e0 00c6 	STS  198,R30
                 ; 0000 0039         i++;
                +
0000f9 5f0f     +SUBI R16 , LOW ( - 1 )
0000fa 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 003A     }
0000fb cfe9      	RJMP _0x6
                 _0x8:
                 ; 0000 003B     // sending '\n' '\r'
                 ; 0000 003C     while(!(UCSR0A & (1 << UDRE0)));
                 _0xC:
0000fc 91e0 00c0 	LDS  R30,192
0000fe 72e0      	ANDI R30,LOW(0x20)
0000ff f3e1      	BREQ _0xC
                 ; 0000 003D     UDR0 = '\n';
000100 e0ea      	LDI  R30,LOW(10)
000101 93e0 00c6 	STS  198,R30
                 ; 0000 003E     while(!(UCSR0A & (1 << UDRE0)));
                 _0xF:
000103 91e0 00c0 	LDS  R30,192
000105 72e0      	ANDI R30,LOW(0x20)
000106 f3e1      	BREQ _0xF
                 ; 0000 003F     UDR0 = '\r';
000107 e0ed      	LDI  R30,LOW(13)
000108 93e0 00c6 	STS  198,R30
                 ; 0000 0040 }
00010a 8119      	LDD  R17,Y+1
00010b 8108      	LDD  R16,Y+0
00010c c0cd      	RJMP _0x20C000B
                 ; .FEND
                 ;
                 ;interrupt [USART_RXC] void USART_receive_isr (void){
                 ; 0000 0042 interrupt [19] void USART_receive_isr (void){
                 _USART_receive_isr:
                 ; .FSTART _USART_receive_isr
00010d 920a      	ST   -Y,R0
00010e 921a      	ST   -Y,R1
00010f 939a      	ST   -Y,R25
000110 93aa      	ST   -Y,R26
000111 93ba      	ST   -Y,R27
000112 93ea      	ST   -Y,R30
000113 93fa      	ST   -Y,R31
000114 b7ef      	IN   R30,SREG
000115 93ea      	ST   -Y,R30
                 ; 0000 0043     recv_buf_ind = (recv_buf_ind + 1) % 20;
000116 2de5      	MOV  R30,R5
000117 e0f0      	LDI  R31,0
000118 9631      	ADIW R30,1
000119 01df      	MOVW R26,R30
00011a e1e4      	LDI  R30,LOW(20)
00011b e0f0      	LDI  R31,HIGH(20)
00011c 940e 0f21 	CALL __MODW21
00011e 2e5e      	MOV  R5,R30
                 ; 0000 0044     recv_buf[recv_buf_ind] = UDR0;
00011f 2da5      	MOV  R26,R5
000120 e0b0      	LDI  R27,0
000121 50a0      	SUBI R26,LOW(-_recv_buf)
000122 4fbd      	SBCI R27,HIGH(-_recv_buf)
000123 91e0 00c6 	LDS  R30,198
000125 93ec      	ST   X,R30
                 ; 0000 0045     if(recv_buf[recv_buf_ind] == 'e') recv_done = 1;
000126 2de5      	MOV  R30,R5
000127 e0f0      	LDI  R31,0
000128 50e0      	SUBI R30,LOW(-_recv_buf)
000129 4ffd      	SBCI R31,HIGH(-_recv_buf)
00012a 81a0      	LD   R26,Z
00012b 36a5      	CPI  R26,LOW(0x65)
00012c f411      	BRNE _0x12
00012d e0e1      	LDI  R30,LOW(1)
00012e 2e4e      	MOV  R4,R30
                 ; 0000 0046 }
                 _0x12:
00012f 91e9      	LD   R30,Y+
000130 bfef      	OUT  SREG,R30
000131 91f9      	LD   R31,Y+
000132 91e9      	LD   R30,Y+
000133 91b9      	LD   R27,Y+
000134 91a9      	LD   R26,Y+
000135 9199      	LD   R25,Y+
000136 9019      	LD   R1,Y+
000137 9009      	LD   R0,Y+
000138 9518      	RETI
                 ; .FEND
                 ;
                 ;void LCD_action(unsigned char cmnd){
                 ; 0000 0048 void LCD_action(unsigned char cmnd){
                 _LCD_action:
                 ; .FSTART _LCD_action
                 ; 0000 0049     // 4 bit mode
                 ; 0000 004A     LCD_PORT = (LCD_PORT & 0x0F) | (cmnd & 0xF0); // send upper nibble
000139 93aa      	ST   -Y,R26
                 ;	cmnd -> Y+0
00013a b1eb      	IN   R30,0xB
00013b 70ef      	ANDI R30,LOW(0xF)
00013c 2fae      	MOV  R26,R30
00013d 81e8      	LD   R30,Y
00013e 7fe0      	ANDI R30,LOW(0xF0)
00013f 2bea      	OR   R30,R26
000140 b9eb      	OUT  0xB,R30
                 ; 0000 004B     LCD_PORT &= ~(1 << LCD_RSPIN); // RS = 0
000141 985a      	CBI  0xB,2
                 ; 0000 004C     LCD_PORT |= (1 << LCD_ENPIN); // EN = 1
000142 9a5b      	SBI  0xB,3
                 ; 0000 004D     delay_us(1);
                +
000143 e084     +LDI R24 , LOW ( 4 )
                +__DELAY_USB_LOOP :
000144 958a     +DEC R24
000145 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 4
                 ; 0000 004E     LCD_PORT &= ~(1 << LCD_ENPIN); // EN = 0
000146 985b      	CBI  0xB,3
                 ; 0000 004F     delay_us(200);
                +
000147 e289     +LDI R24 , LOW ( 553 )
000148 e092     +LDI R25 , HIGH ( 553 )
                +__DELAY_USW_LOOP :
000149 9701     +SBIW R24 , 1
00014a f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 553
                 ; 0000 0050     LCD_PORT = (LCD_PORT & 0x0F) | (cmnd << 4); // send lower nibble
00014b b1eb      	IN   R30,0xB
00014c 70ef      	ANDI R30,LOW(0xF)
00014d 2fae      	MOV  R26,R30
00014e 81e8      	LD   R30,Y
00014f 95e2      	SWAP R30
000150 7fe0      	ANDI R30,0xF0
000151 2bea      	OR   R30,R26
000152 b9eb      	OUT  0xB,R30
                 ; 0000 0051     LCD_PORT |= (1 << LCD_ENPIN); // EN = 1
000153 9a5b      	SBI  0xB,3
                 ; 0000 0052     delay_us(1);
                +
000154 e084     +LDI R24 , LOW ( 4 )
                +__DELAY_USB_LOOP :
000155 958a     +DEC R24
000156 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 4
                 ; 0000 0053     LCD_PORT &= ~(1 << LCD_ENPIN); // EN = 0
000157 985b      	CBI  0xB,3
                 ; 0000 0054     delay_ms(2);
000158 e0a2      	LDI  R26,LOW(2)
000159 e0b0      	LDI  R27,0
00015a 940e 0cc3 	CALL _delay_ms
                 ; 0000 0055 }
                 _0x20C000C:
00015c 9621      	ADIW R28,1
00015d 9508      	RET
                 ; .FEND
                 ;
                 ;void LCD_init(void){
                 ; 0000 0057 void LCD_init(void){
                 _LCD_init:
                 ; .FSTART _LCD_init
                 ; 0000 0058     LCD_DPIN = 0xFF;
00015e efef      	LDI  R30,LOW(255)
00015f b9ea      	OUT  0xA,R30
                 ; 0000 0059     delay_ms(20); // wait before LCD activation
000160 e1a4      	LDI  R26,LOW(20)
000161 e0b0      	LDI  R27,0
000162 940e 0cc3 	CALL _delay_ms
                 ; 0000 005A     LCD_action(0x02); // 4 bit control
000164 e0a2      	LDI  R26,LOW(2)
000165 dfd3      	RCALL _LCD_action
                 ; 0000 005B     LCD_action(0x28); // initialization of 16X2 LCD in 4bit mode
000166 e2a8      	LDI  R26,LOW(40)
000167 dfd1      	RCALL _LCD_action
                 ; 0000 005C     LCD_action(0x0C); // disable cursor
000168 e0ac      	LDI  R26,LOW(12)
000169 dfcf      	RCALL _LCD_action
                 ; 0000 005D     LCD_action(0x06); // auto increment cursor
00016a e0a6      	LDI  R26,LOW(6)
00016b dfcd      	RCALL _LCD_action
                 ; 0000 005E     LCD_action(0x01); // clear LCD
00016c e0a1      	LDI  R26,LOW(1)
00016d dfcb      	RCALL _LCD_action
                 ; 0000 005F     LCD_action(0x80); // cursor at home position
00016e e8a0      	LDI  R26,LOW(128)
00016f dfc9      	RCALL _LCD_action
                 ; 0000 0060     delay_ms(2);
000170 e0a2      	LDI  R26,LOW(2)
000171 e0b0      	LDI  R27,0
000172 940e 0cc3 	CALL _delay_ms
                 ; 0000 0061 }
000174 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;void LCD_clear(void){
                 ; 0000 0064 void LCD_clear(void){
                 _LCD_clear:
                 ; .FSTART _LCD_clear
                 ; 0000 0065     LCD_action(0x01); // clear LCD
000175 e0a1      	LDI  R26,LOW(1)
000176 dfc2      	RCALL _LCD_action
                 ; 0000 0066     delay_ms(2);
000177 e0a2      	LDI  R26,LOW(2)
000178 e0b0      	LDI  R27,0
000179 940e 0cc3 	CALL _delay_ms
                 ; 0000 0067     LCD_action(0x80); // move to line 1, position 1
00017b e8a0      	LDI  R26,LOW(128)
00017c dfbc      	RCALL _LCD_action
                 ; 0000 0068 }
00017d 9508      	RET
                 ; .FEND
                 ;
                 ;void LCD_print(char *str){
                 ; 0000 006A void LCD_print(char *str){
                 _LCD_print:
                 ; .FSTART _LCD_print
                 ; 0000 006B     int i;
                 ; 0000 006C 	for(i=0; str[i]!=0; i++)
00017e 93ba      	ST   -Y,R27
00017f 93aa      	ST   -Y,R26
000180 931a      	ST   -Y,R17
000181 930a      	ST   -Y,R16
                 ;	*str -> Y+2
                 ;	i -> R16,R17
                +
000182 e000     +LDI R16 , LOW ( 0 )
000183 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x14:
000184 01f8      	MOVW R30,R16
000185 81aa      	LDD  R26,Y+2
000186 81bb      	LDD  R27,Y+2+1
000187 0fae      	ADD  R26,R30
000188 1fbf      	ADC  R27,R31
000189 91ec      	LD   R30,X
00018a 30e0      	CPI  R30,0
00018b f179      	BREQ _0x15
                 ; 0000 006D 	{
                 ; 0000 006E 		LCD_PORT = (LCD_PORT & 0x0F) | (str[i] & 0xF0);
00018c b1eb      	IN   R30,0xB
00018d 70ef      	ANDI R30,LOW(0xF)
00018e 2e0e      	MOV  R0,R30
00018f 01f8      	MOVW R30,R16
000190 81aa      	LDD  R26,Y+2
000191 81bb      	LDD  R27,Y+2+1
000192 0fae      	ADD  R26,R30
000193 1fbf      	ADC  R27,R31
000194 91ec      	LD   R30,X
000195 7fe0      	ANDI R30,LOW(0xF0)
000196 29e0      	OR   R30,R0
000197 b9eb      	OUT  0xB,R30
                 ; 0000 006F 		LCD_PORT |= (1<<LCD_RSPIN); // RS = 1, data reg
000198 9a5a      	SBI  0xB,2
                 ; 0000 0070 		LCD_PORT |= (1<<LCD_ENPIN); // EN = 1
000199 9a5b      	SBI  0xB,3
                 ; 0000 0071 		delay_us(1);
                +
00019a e084     +LDI R24 , LOW ( 4 )
                +__DELAY_USB_LOOP :
00019b 958a     +DEC R24
00019c f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 4
                 ; 0000 0072 		LCD_PORT &= ~ (1<<LCD_ENPIN); // EN = 0
00019d 985b      	CBI  0xB,3
                 ; 0000 0073 		delay_us(200);
                +
00019e e289     +LDI R24 , LOW ( 553 )
00019f e092     +LDI R25 , HIGH ( 553 )
                +__DELAY_USW_LOOP :
0001a0 9701     +SBIW R24 , 1
0001a1 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 553
                 ; 0000 0074 		LCD_PORT = (LCD_PORT & 0x0F) | (str[i] << 4);
0001a2 b1eb      	IN   R30,0xB
0001a3 70ef      	ANDI R30,LOW(0xF)
0001a4 2e0e      	MOV  R0,R30
0001a5 01f8      	MOVW R30,R16
0001a6 81aa      	LDD  R26,Y+2
0001a7 81bb      	LDD  R27,Y+2+1
0001a8 0fae      	ADD  R26,R30
0001a9 1fbf      	ADC  R27,R31
0001aa 91ec      	LD   R30,X
0001ab 95e2      	SWAP R30
0001ac 7fe0      	ANDI R30,0xF0
0001ad 29e0      	OR   R30,R0
0001ae b9eb      	OUT  0xB,R30
                 ; 0000 0075 		LCD_PORT |= (1<<LCD_ENPIN);
0001af 9a5b      	SBI  0xB,3
                 ; 0000 0076 		delay_us(1);
                +
0001b0 e084     +LDI R24 , LOW ( 4 )
                +__DELAY_USB_LOOP :
0001b1 958a     +DEC R24
0001b2 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 4
                 ; 0000 0077 		LCD_PORT &= ~ (1<<LCD_ENPIN);
0001b3 985b      	CBI  0xB,3
                 ; 0000 0078 		delay_ms(2);
0001b4 e0a2      	LDI  R26,LOW(2)
0001b5 e0b0      	LDI  R27,0
0001b6 940e 0cc3 	CALL _delay_ms
                 ; 0000 0079 	}
                +
0001b8 5f0f     +SUBI R16 , LOW ( - 1 )
0001b9 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0001ba cfc9      	RJMP _0x14
                 _0x15:
                 ; 0000 007A }
0001bb 8119      	LDD  R17,Y+1
0001bc 8108      	LDD  R16,Y+0
0001bd c01c      	RJMP _0x20C000B
                 ; .FEND
                 ;
                 ;void LCD_print_pos(char row, char pos, char *str){
                 ; 0000 007C void LCD_print_pos(char row, char pos, char *str){
                 _LCD_print_pos:
                 ; .FSTART _LCD_print_pos
                 ; 0000 007D     if(row == 0 && pos < 16) // line 1
0001be 93ba      	ST   -Y,R27
0001bf 93aa      	ST   -Y,R26
                 ;	row -> Y+3
                 ;	pos -> Y+2
                 ;	*str -> Y+0
0001c0 81ab      	LDD  R26,Y+3
0001c1 30a0      	CPI  R26,LOW(0x0)
0001c2 f419      	BRNE _0x17
0001c3 81aa      	LDD  R26,Y+2
0001c4 31a0      	CPI  R26,LOW(0x10)
0001c5 f008      	BRLO _0x18
                 _0x17:
0001c6 c004      	RJMP _0x16
                 _0x18:
                 ; 0000 007E         LCD_action((pos & 0x0F)|0x80);
0001c7 81ea      	LDD  R30,Y+2
0001c8 70ef      	ANDI R30,LOW(0xF)
0001c9 68e0      	ORI  R30,0x80
0001ca c00a      	RJMP _0x48
                 ; 0000 007F     else if(row == 1 && pos < 16) // line 2
                 _0x16:
0001cb 81ab      	LDD  R26,Y+3
0001cc 30a1      	CPI  R26,LOW(0x1)
0001cd f419      	BRNE _0x1B
0001ce 81aa      	LDD  R26,Y+2
0001cf 31a0      	CPI  R26,LOW(0x10)
0001d0 f008      	BRLO _0x1C
                 _0x1B:
0001d1 c005      	RJMP _0x1A
                 _0x1C:
                 ; 0000 0080         LCD_action((pos & 0x0F)|0xC0);
0001d2 81ea      	LDD  R30,Y+2
0001d3 70ef      	ANDI R30,LOW(0xF)
0001d4 6ce0      	ORI  R30,LOW(0xC0)
                 _0x48:
0001d5 2fae      	MOV  R26,R30
0001d6 df62      	RCALL _LCD_action
                 ; 0000 0081     LCD_print(str);
                 _0x1A:
0001d7 81a8      	LD   R26,Y
0001d8 81b9      	LDD  R27,Y+1
0001d9 dfa4      	RCALL _LCD_print
                 ; 0000 0082 }
                 _0x20C000B:
0001da 9624      	ADIW R28,4
0001db 9508      	RET
                 ; .FEND
                 ;
                 ;int read_dht11(int* temp, int* humidity){
                 ; 0000 0084 int read_dht11(int* temp, int* humidity){
                 _read_dht11:
                 ; .FSTART _read_dht11
                 ; 0000 0085     unsigned char i, j, bytes[5], time_count;
                 ; 0000 0086     //reset port
                 ; 0000 0087     DHT11_DDR |= (1<<DHT11_INPUTPIN); //output mode
0001dc 93ba      	ST   -Y,R27
0001dd 93aa      	ST   -Y,R26
0001de 9725      	SBIW R28,5
0001df 940e 0fa3 	CALL __SAVELOCR4
                 ;	*temp -> Y+11
                 ;	*humidity -> Y+9
                 ;	i -> R17
                 ;	j -> R16
                 ;	bytes -> Y+4
                 ;	time_count -> R19
0001e1 9a21      	SBI  0x4,1
                 ; 0000 0088     DHT11_PORT |= (1<<DHT11_INPUTPIN); // high
0001e2 9a29      	SBI  0x5,1
                 ; 0000 0089     delay_ms(100);
0001e3 e6a4      	LDI  R26,LOW(100)
0001e4 e0b0      	LDI  R27,0
0001e5 940e 0cc3 	CALL _delay_ms
                 ; 0000 008A 	// send start signal
                 ; 0000 008B 	DHT11_PORT &= ~(1<<DHT11_INPUTPIN); // low
0001e7 9829      	CBI  0x5,1
                 ; 0000 008C 	delay_ms(18);
0001e8 e1a2      	LDI  R26,LOW(18)
0001e9 e0b0      	LDI  R27,0
0001ea 940e 0cc3 	CALL _delay_ms
                 ; 0000 008D 	DHT11_PORT |= (1<<DHT11_INPUTPIN); // high
0001ec 9a29      	SBI  0x5,1
                 ; 0000 008E 	DHT11_DDR &= ~(1<<DHT11_INPUTPIN); //input mode
0001ed 9821      	CBI  0x4,1
                 ; 0000 008F 	delay_us(40);
                +
0001ee e983     +LDI R24 , LOW ( 147 )
                +__DELAY_USB_LOOP :
0001ef 958a     +DEC R24
0001f0 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 147
                 ; 0000 0090     // check DHT response signal
                 ; 0000 0091     if((DHT11_PIN & (1 << DHT11_INPUTPIN))){
0001f1 9b19      	SBIS 0x3,1
0001f2 c003      	RJMP _0x1D
                 ; 0000 0092         // error
                 ; 0000 0093         return -1;
0001f3 efef      	LDI  R30,LOW(65535)
0001f4 efff      	LDI  R31,HIGH(65535)
0001f5 c075      	RJMP _0x20C000A
                 ; 0000 0094     }
                 ; 0000 0095     delay_us(80);
                 _0x1D:
                +
0001f6 ed8d     +LDI R24 , LOW ( 221 )
0001f7 e090     +LDI R25 , HIGH ( 221 )
                +__DELAY_USW_LOOP :
0001f8 9701     +SBIW R24 , 1
0001f9 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 221
                 ; 0000 0096     // check DHT pulls up
                 ; 0000 0097     if(!(DHT11_PIN & (1 << DHT11_INPUTPIN))){
0001fa 9919      	SBIC 0x3,1
0001fb c003      	RJMP _0x1E
                 ; 0000 0098         // error
                 ; 0000 0099         return -2;
0001fc efee      	LDI  R30,LOW(65534)
0001fd efff      	LDI  R31,HIGH(65534)
0001fe c06c      	RJMP _0x20C000A
                 ; 0000 009A     }
                 ; 0000 009B     delay_us(80);
                 _0x1E:
                +
0001ff ed8d     +LDI R24 , LOW ( 221 )
000200 e090     +LDI R25 , HIGH ( 221 )
                +__DELAY_USW_LOOP :
000201 9701     +SBIW R24 , 1
000202 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 221
                 ; 0000 009C     // read 5 bytes
                 ; 0000 009D     for(i = 0; i < 5; i++){
000203 e010      	LDI  R17,LOW(0)
                 _0x20:
000204 3015      	CPI  R17,5
000205 f5e0      	BRSH _0x21
                 ; 0000 009E         unsigned char result = 0;
                 ; 0000 009F         for(j = 0; j < 8; j++){
000206 9721      	SBIW R28,1
000207 e0e0      	LDI  R30,LOW(0)
000208 83e8      	ST   Y,R30
                 ;	*temp -> Y+12
                 ;	*humidity -> Y+10
                 ;	bytes -> Y+5
                 ;	result -> Y+0
000209 e000      	LDI  R16,LOW(0)
                 _0x23:
00020a 3008      	CPI  R16,8
00020b f558      	BRSH _0x24
                 ; 0000 00A0             time_count = 0;
00020c e030      	LDI  R19,LOW(0)
                 ; 0000 00A1             // wait for a high voltage
                 ; 0000 00A2             while(!(DHT11_PIN & (1 << DHT11_INPUTPIN))){
                 _0x25:
00020d 9919      	SBIC 0x3,1
00020e c00b      	RJMP _0x27
                 ; 0000 00A3                 time_count++;
00020f 5f3f      	SUBI R19,-1
                 ; 0000 00A4                 if(time_count > DHT11_TIMEOUT) return -3; // timeout error
000210 3c39      	CPI  R19,201
000211 f020      	BRLO _0x28
000212 efed      	LDI  R30,LOW(65533)
000213 efff      	LDI  R31,HIGH(65533)
000214 9621      	ADIW R28,1
000215 c055      	RJMP _0x20C000A
                 ; 0000 00A5                 delay_us(1);
                 _0x28:
                +
000216 e084     +LDI R24 , LOW ( 4 )
                +__DELAY_USB_LOOP :
000217 958a     +DEC R24
000218 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 4
                 ; 0000 00A6             }
000219 cff3      	RJMP _0x25
                 _0x27:
                 ; 0000 00A7             delay_us(30);
                +
00021a e68f     +LDI R24 , LOW ( 111 )
                +__DELAY_USB_LOOP :
00021b 958a     +DEC R24
00021c f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 111
                 ; 0000 00A8             if(DHT11_PIN & (1 << DHT11_INPUTPIN)) // high after 30 us -> bit 1
00021d 9b19      	SBIS 0x3,1
00021e c008      	RJMP _0x29
                 ; 0000 00A9                 result |= (1<<(7-j));
00021f e0e7      	LDI  R30,LOW(7)
000220 1be0      	SUB  R30,R16
000221 e0a1      	LDI  R26,LOW(1)
000222 940e 0e8b 	CALL __LSLB12
000224 81a8      	LD   R26,Y
000225 2bea      	OR   R30,R26
000226 83e8      	ST   Y,R30
                 ; 0000 00AA             time_count = 0;
                 _0x29:
000227 e030      	LDI  R19,LOW(0)
                 ; 0000 00AB             // wait until get low
                 ; 0000 00AC             while(DHT11_PIN & (1 << DHT11_INPUTPIN)){
                 _0x2A:
000228 9b19      	SBIS 0x3,1
000229 c00b      	RJMP _0x2C
                 ; 0000 00AD                 time_count++;
00022a 5f3f      	SUBI R19,-1
                 ; 0000 00AE                 if(time_count > DHT11_TIMEOUT) return -3; // timeout error
00022b 3c39      	CPI  R19,201
00022c f020      	BRLO _0x2D
00022d efed      	LDI  R30,LOW(65533)
00022e efff      	LDI  R31,HIGH(65533)
00022f 9621      	ADIW R28,1
000230 c03a      	RJMP _0x20C000A
                 ; 0000 00AF                 delay_us(1);
                 _0x2D:
                +
000231 e084     +LDI R24 , LOW ( 4 )
                +__DELAY_USB_LOOP :
000232 958a     +DEC R24
000233 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 4
                 ; 0000 00B0             }
000234 cff3      	RJMP _0x2A
                 _0x2C:
                 ; 0000 00B1         }
000235 5f0f      	SUBI R16,-1
000236 cfd3      	RJMP _0x23
                 _0x24:
                 ; 0000 00B2         bytes[i] = result;
000237 2fe1      	MOV  R30,R17
000238 e0f0      	LDI  R31,0
000239 01de      	MOVW R26,R28
00023a 9615      	ADIW R26,5
00023b 0fea      	ADD  R30,R26
00023c 1ffb      	ADC  R31,R27
00023d 81a8      	LD   R26,Y
00023e 83a0      	STD  Z+0,R26
                 ; 0000 00B3     }
00023f 9621      	ADIW R28,1
000240 5f1f      	SUBI R17,-1
000241 cfc2      	RJMP _0x20
                 _0x21:
                 ; 0000 00B4     // reset port
                 ; 0000 00B5     DHT11_DDR |= (1<<DHT11_INPUTPIN); //output mode
000242 9a21      	SBI  0x4,1
                 ; 0000 00B6     DHT11_PORT |= (1<<DHT11_INPUTPIN); // high
000243 9a29      	SBI  0x5,1
                 ; 0000 00B7     delay_ms(100);
000244 e6a4      	LDI  R26,LOW(100)
000245 e0b0      	LDI  R27,0
000246 940e 0cc3 	CALL _delay_ms
                 ; 0000 00B8     // checksum
                 ; 0000 00B9     if((unsigned char)(bytes[0] + bytes[1] + bytes[2] + bytes[3]) == bytes[4]){
000248 81ac      	LDD  R26,Y+4
000249 27bb      	CLR  R27
00024a 81ed      	LDD  R30,Y+5
00024b e0f0      	LDI  R31,0
00024c 0fae      	ADD  R26,R30
00024d 1fbf      	ADC  R27,R31
00024e 81ee      	LDD  R30,Y+6
00024f e0f0      	LDI  R31,0
000250 0fae      	ADD  R26,R30
000251 1fbf      	ADC  R27,R31
000252 81ef      	LDD  R30,Y+7
000253 e0f0      	LDI  R31,0
000254 0fea      	ADD  R30,R26
000255 1ffb      	ADC  R31,R27
000256 2fae      	MOV  R26,R30
000257 85e8      	LDD  R30,Y+8
000258 17ea      	CP   R30,R26
000259 f479      	BRNE _0x2E
                 ; 0000 00BA         *temp = bytes[2];
00025a 81ee      	LDD  R30,Y+6
00025b 85ab      	LDD  R26,Y+11
00025c 85bc      	LDD  R27,Y+11+1
00025d e0f0      	LDI  R31,0
00025e 93ed      	ST   X+,R30
00025f 93fc      	ST   X,R31
                 ; 0000 00BB //        *temp = *temp << 8;
                 ; 0000 00BC //        *temp = *temp | bytes[3];
                 ; 0000 00BD         *humidity = bytes[0];
000260 81ec      	LDD  R30,Y+4
000261 85a9      	LDD  R26,Y+9
000262 85ba      	LDD  R27,Y+9+1
000263 e0f0      	LDI  R31,0
000264 93ed      	ST   X+,R30
000265 93fc      	ST   X,R31
                 ; 0000 00BE //        *humidity = *humidity << 8;
                 ; 0000 00BF //        *humidity = *humidity | bytes[1];
                 ; 0000 00C0         return 0;
000266 e0e0      	LDI  R30,LOW(0)
000267 e0f0      	LDI  R31,HIGH(0)
000268 c002      	RJMP _0x20C000A
                 ; 0000 00C1     }
                 ; 0000 00C2     // checksum error
                 ; 0000 00C3     return -4;
                 _0x2E:
000269 efec      	LDI  R30,LOW(65532)
00026a efff      	LDI  R31,HIGH(65532)
                 _0x20C000A:
00026b 940e 0faa 	CALL __LOADLOCR4
00026d 962d      	ADIW R28,13
00026e 9508      	RET
                 ; 0000 00C4 }
                 ; .FEND
                 ;
                 ;void main(void){
                 ; 0000 00C6 void main(void){
                 _main:
                 ; .FSTART _main
                 ; 0000 00C7     int temp, humidity, err_code, light, temp_threshold = -1, humidity_threshold = -1, light_threshold = -1;
                 ; 0000 00C8     char i, j, recv_data[20], loop_count = 0, *p;
                 ; 0000 00C9     char mss[24];
                 ; 0000 00CA     #asm("sei ");
00026f 97e9      	SBIW R28,57
000270 e18d      	LDI  R24,29
000271 e1aa      	LDI  R26,LOW(26)
000272 e0b0      	LDI  R27,HIGH(26)
000273 e6ea      	LDI  R30,LOW(_0x2F*2)
000274 e0f0      	LDI  R31,HIGH(_0x2F*2)
000275 940e 0faf 	CALL __INITLOCB
                 ;	temp -> R16,R17
                 ;	humidity -> R18,R19
                 ;	err_code -> R20,R21
                 ;	light -> Y+55
                 ;	temp_threshold -> Y+53
                 ;	humidity_threshold -> Y+51
                 ;	light_threshold -> Y+49
                 ;	i -> Y+48
                 ;	j -> Y+47
                 ;	recv_data -> Y+27
                 ;	loop_count -> Y+26
                 ;	*p -> Y+24
                 ;	mss -> Y+0
000277 9478      	sei 
                 ; 0000 00CB     // ADC init - ADC6
                 ; 0000 00CC     ADC_init();
000278 de2a      	RCALL _ADC_init
                 ; 0000 00CD 	USART_init(SYS_CLOCK/16/BAUD - 1);
000279 e4a7      	LDI  R26,LOW(71)
00027a e0b0      	LDI  R27,0
00027b de53      	RCALL _USART_init
                 ; 0000 00CE     LCD_init();
00027c dee1      	RCALL _LCD_init
                 ; 0000 00CF     // init led pin
                 ; 0000 00D0     DDRB |= 0x1C; // 2,3,4
00027d b1e4      	IN   R30,0x4
00027e 61ec      	ORI  R30,LOW(0x1C)
00027f b9e4      	OUT  0x4,R30
                 ; 0000 00D1     temp_threshold = eeprom_read_word(0);
000280 e0a0      	LDI  R26,LOW(0)
000281 e0b0      	LDI  R27,HIGH(0)
000282 940e 0f74 	CALL __EEPROMRDW
000284 abed      	STD  Y+53,R30
000285 abfe      	STD  Y+53+1,R31
                 ; 0000 00D2     humidity_threshold = eeprom_read_word(2);
000286 e0a2      	LDI  R26,LOW(2)
000287 e0b0      	LDI  R27,HIGH(2)
000288 940e 0f74 	CALL __EEPROMRDW
00028a abeb      	STD  Y+51,R30
00028b abfc      	STD  Y+51+1,R31
                 ; 0000 00D3     light_threshold = eeprom_read_word(4);
00028c e0a4      	LDI  R26,LOW(4)
00028d e0b0      	LDI  R27,HIGH(4)
00028e 940e 0f74 	CALL __EEPROMRDW
000290 abe9      	STD  Y+49,R30
000291 abfa      	STD  Y+49+1,R31
                 ; 0000 00D4     //USART_put("Hello from ATmega328p");
                 ; 0000 00D5 	while(1){
                 _0x30:
                 ; 0000 00D6         // check uart data received
                 ; 0000 00D7         loop_count++;
000292 8dea      	LDD  R30,Y+26
000293 5fef      	SUBI R30,-LOW(1)
000294 8fea      	STD  Y+26,R30
                 ; 0000 00D8         if(recv_done){
000295 2044      	TST  R4
000296 f409      	BRNE PC+2
000297 c0c5      	RJMP _0x33
                 ; 0000 00D9             recv_done = 0;
000298 2444      	CLR  R4
                 ; 0000 00DA             for(i = 0; i < 20; i++) // find 's';
000299 e0e0      	LDI  R30,LOW(0)
00029a abe8      	STD  Y+48,R30
                 _0x35:
00029b a9a8      	LDD  R26,Y+48
00029c 31a4      	CPI  R26,LOW(0x14)
00029d f458      	BRSH _0x36
                 ; 0000 00DB                 if(recv_buf[i] == 's') break;
00029e a9e8      	LDD  R30,Y+48
00029f e0f0      	LDI  R31,0
0002a0 50e0      	SUBI R30,LOW(-_recv_buf)
0002a1 4ffd      	SBCI R31,HIGH(-_recv_buf)
0002a2 81a0      	LD   R26,Z
0002a3 37a3      	CPI  R26,LOW(0x73)
0002a4 f021      	BREQ _0x36
                 ; 0000 00DC             if(i != 20){
0002a5 a9e8      	LDD  R30,Y+48
0002a6 5fef      	SUBI R30,-LOW(1)
0002a7 abe8      	STD  Y+48,R30
0002a8 cff2      	RJMP _0x35
                 _0x36:
0002a9 a9a8      	LDD  R26,Y+48
0002aa 31a4      	CPI  R26,LOW(0x14)
0002ab f409      	BRNE PC+2
0002ac c0b0      	RJMP _0x38
                 ; 0000 00DD                 j = (i + 1) % 20;
0002ad a9e8      	LDD  R30,Y+48
0002ae e0f0      	LDI  R31,0
0002af 9631      	ADIW R30,1
0002b0 01df      	MOVW R26,R30
0002b1 e1e4      	LDI  R30,LOW(20)
0002b2 e0f0      	LDI  R31,HIGH(20)
0002b3 940e 0f21 	CALL __MODW21
0002b5 a7ef      	STD  Y+47,R30
                 ; 0000 00DE                 memset(recv_data, 0, 20);
0002b6 01fe      	MOVW R30,R28
0002b7 967b      	ADIW R30,27
0002b8 93fa      	ST   -Y,R31
0002b9 93ea      	ST   -Y,R30
0002ba e0e0      	LDI  R30,LOW(0)
0002bb 93ea      	ST   -Y,R30
0002bc e1a4      	LDI  R26,LOW(20)
0002bd e0b0      	LDI  R27,0
0002be 940e 0aec 	CALL _memset
                 ; 0000 00DF                 while(j != i){
                 _0x39:
0002c0 a9e8      	LDD  R30,Y+48
0002c1 a5af      	LDD  R26,Y+47
0002c2 17ea      	CP   R30,R26
0002c3 f151      	BREQ _0x3B
                 ; 0000 00E0                     if(recv_buf[j] == 'e') break;
0002c4 a5ef      	LDD  R30,Y+47
0002c5 e0f0      	LDI  R31,0
0002c6 50e0      	SUBI R30,LOW(-_recv_buf)
0002c7 4ffd      	SBCI R31,HIGH(-_recv_buf)
0002c8 81a0      	LD   R26,Z
0002c9 36a5      	CPI  R26,LOW(0x65)
0002ca f119      	BREQ _0x3B
                 ; 0000 00E1                     recv_data[(j-i+20)%20-1] = recv_buf[j];
0002cb a5af      	LDD  R26,Y+47
0002cc 27bb      	CLR  R27
0002cd a9e8      	LDD  R30,Y+48
0002ce e0f0      	LDI  R31,0
0002cf 940e 0f6d 	CALL __SWAPW12
0002d1 1bea      	SUB  R30,R26
0002d2 0bfb      	SBC  R31,R27
0002d3 9674      	ADIW R30,20
0002d4 01df      	MOVW R26,R30
0002d5 e1e4      	LDI  R30,LOW(20)
0002d6 e0f0      	LDI  R31,HIGH(20)
0002d7 940e 0f21 	CALL __MODW21
0002d9 9731      	SBIW R30,1
0002da 01de      	MOVW R26,R28
0002db 965b      	ADIW R26,27
0002dc 0fae      	ADD  R26,R30
0002dd 1fbf      	ADC  R27,R31
0002de a5ef      	LDD  R30,Y+47
0002df e0f0      	LDI  R31,0
0002e0 50e0      	SUBI R30,LOW(-_recv_buf)
0002e1 4ffd      	SBCI R31,HIGH(-_recv_buf)
0002e2 81e0      	LD   R30,Z
0002e3 93ec      	ST   X,R30
                 ; 0000 00E2                     j = (j+1) % 20;
0002e4 a5ef      	LDD  R30,Y+47
0002e5 e0f0      	LDI  R31,0
0002e6 9631      	ADIW R30,1
0002e7 01df      	MOVW R26,R30
0002e8 e1e4      	LDI  R30,LOW(20)
0002e9 e0f0      	LDI  R31,HIGH(20)
0002ea 940e 0f21 	CALL __MODW21
0002ec a7ef      	STD  Y+47,R30
                 ; 0000 00E3                 }
0002ed cfd2      	RJMP _0x39
                 _0x3B:
                 ; 0000 00E4                 if(j != i){
0002ee a9e8      	LDD  R30,Y+48
0002ef a5af      	LDD  R26,Y+47
0002f0 17ea      	CP   R30,R26
0002f1 f409      	BRNE PC+2
0002f2 c06a      	RJMP _0x3D
                 ; 0000 00E5                     i = 0;
0002f3 e0e0      	LDI  R30,LOW(0)
0002f4 abe8      	STD  Y+48,R30
                 ; 0000 00E6                     p = strrchr(recv_data, ' ');
0002f5 01fe      	MOVW R30,R28
0002f6 967b      	ADIW R30,27
0002f7 93fa      	ST   -Y,R31
0002f8 93ea      	ST   -Y,R30
0002f9 e2a0      	LDI  R26,LOW(32)
0002fa 940e 0b22 	CALL _strrchr
0002fc 8fe8      	STD  Y+24,R30
0002fd 8ff9      	STD  Y+24+1,R31
                 ; 0000 00E7                     sscanf(p + 1, "%d", &light_threshold);
0002fe 9631      	ADIW R30,1
0002ff 93fa      	ST   -Y,R31
000300 93ea      	ST   -Y,R30
                +
000301 e8e8     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000302 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000303 93fa      	ST   -Y,R31
000304 93ea      	ST   -Y,R30
000305 01fe      	MOVW R30,R28
000306 96f5      	ADIW R30,53
000307 2766      	CLR  R22
000308 2777      	CLR  R23
000309 940e 0f5d 	CALL __PUTPARD1
00030b e084      	LDI  R24,4
00030c 940e 0ab9 	CALL _sscanf
00030e 9628      	ADIW R28,8
                 ; 0000 00E8                     *p = 0;
00030f 8da8      	LDD  R26,Y+24
000310 8db9      	LDD  R27,Y+24+1
000311 e0e0      	LDI  R30,LOW(0)
000312 93ec      	ST   X,R30
                 ; 0000 00E9                     p = strrchr(recv_data, ' ');
000313 01fe      	MOVW R30,R28
000314 967b      	ADIW R30,27
000315 93fa      	ST   -Y,R31
000316 93ea      	ST   -Y,R30
000317 e2a0      	LDI  R26,LOW(32)
000318 940e 0b22 	CALL _strrchr
00031a 8fe8      	STD  Y+24,R30
00031b 8ff9      	STD  Y+24+1,R31
                 ; 0000 00EA                     sscanf(p + 1, "%d", &humidity_threshold);
00031c 9631      	ADIW R30,1
00031d 93fa      	ST   -Y,R31
00031e 93ea      	ST   -Y,R30
                +
00031f e8e8     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000320 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000321 93fa      	ST   -Y,R31
000322 93ea      	ST   -Y,R30
000323 01fe      	MOVW R30,R28
000324 96f7      	ADIW R30,55
000325 2766      	CLR  R22
000326 2777      	CLR  R23
000327 940e 0f5d 	CALL __PUTPARD1
000329 e084      	LDI  R24,4
00032a 940e 0ab9 	CALL _sscanf
00032c 9628      	ADIW R28,8
                 ; 0000 00EB                     *p = 0;
00032d 8da8      	LDD  R26,Y+24
00032e 8db9      	LDD  R27,Y+24+1
00032f e0e0      	LDI  R30,LOW(0)
000330 93ec      	ST   X,R30
                 ; 0000 00EC                     p = strrchr(recv_data, ' ');
000331 01fe      	MOVW R30,R28
000332 967b      	ADIW R30,27
000333 93fa      	ST   -Y,R31
000334 93ea      	ST   -Y,R30
000335 e2a0      	LDI  R26,LOW(32)
000336 940e 0b22 	CALL _strrchr
000338 8fe8      	STD  Y+24,R30
000339 8ff9      	STD  Y+24+1,R31
                 ; 0000 00ED                     sscanf(p + 1, "%d", &temp_threshold);
00033a 9631      	ADIW R30,1
00033b 93fa      	ST   -Y,R31
00033c 93ea      	ST   -Y,R30
                +
00033d e8e8     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00033e e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00033f 93fa      	ST   -Y,R31
000340 93ea      	ST   -Y,R30
000341 01fe      	MOVW R30,R28
000342 96f9      	ADIW R30,57
000343 2766      	CLR  R22
000344 2777      	CLR  R23
000345 940e 0f5d 	CALL __PUTPARD1
000347 e084      	LDI  R24,4
000348 940e 0ab9 	CALL _sscanf
00034a 9628      	ADIW R28,8
                 ; 0000 00EE                     // eeprom  write
                 ; 0000 00EF                     eeprom_write_word(0, temp_threshold);
00034b a9ed      	LDD  R30,Y+53
00034c a9fe      	LDD  R31,Y+53+1
00034d e0a0      	LDI  R26,LOW(0)
00034e e0b0      	LDI  R27,HIGH(0)
00034f 940e 0f84 	CALL __EEPROMWRW
                 ; 0000 00F0                     eeprom_write_word(2, humidity_threshold);
000351 a9eb      	LDD  R30,Y+51
000352 a9fc      	LDD  R31,Y+51+1
000353 e0a2      	LDI  R26,LOW(2)
000354 e0b0      	LDI  R27,HIGH(2)
000355 940e 0f84 	CALL __EEPROMWRW
                 ; 0000 00F1                     eeprom_write_word(4, light_threshold);
000357 a9e9      	LDD  R30,Y+49
000358 a9fa      	LDD  R31,Y+49+1
000359 e0a4      	LDI  R26,LOW(4)
00035a e0b0      	LDI  R27,HIGH(4)
00035b 940e 0f84 	CALL __EEPROMWRW
                 ; 0000 00F2                 }
                 ; 0000 00F3             }
                 _0x3D:
                 ; 0000 00F4         }
                 _0x38:
                 ; 0000 00F5 
                 ; 0000 00F6 
                 ; 0000 00F7         if(loop_count >= 10){ // read rht11 sensor after every 1s
                 _0x33:
00035d 8daa      	LDD  R26,Y+26
00035e 30aa      	CPI  R26,LOW(0xA)
00035f f408      	BRSH PC+2
000360 c08f      	RJMP _0x3E
                 ; 0000 00F8             loop_count = 0;
000361 e0e0      	LDI  R30,LOW(0)
000362 8fea      	STD  Y+26,R30
                 ; 0000 00F9             light = ADC_read(6);
000363 e0a6      	LDI  R26,LOW(6)
000364 dd49      	RCALL _ADC_read
000365 abef      	STD  Y+55,R30
000366 aff8      	STD  Y+55+1,R31
                 ; 0000 00FA             if((err_code = read_dht11(&temp, &humidity)) == 0){
000367 b7ed      	IN   R30,SPL
000368 b7fe      	IN   R31,SPH
000369 9731      	SBIW R30,1
00036a 93fa      	ST   -Y,R31
00036b 93ea      	ST   -Y,R30
00036c 931f      	PUSH R17
00036d 930f      	PUSH R16
00036e b7ad      	IN   R26,SPL
00036f b7be      	IN   R27,SPH
000370 9711      	SBIW R26,1
000371 933f      	PUSH R19
000372 932f      	PUSH R18
000373 de68      	RCALL _read_dht11
000374 912f      	POP  R18
000375 913f      	POP  R19
000376 910f      	POP  R16
000377 911f      	POP  R17
000378 01af      	MOVW R20,R30
000379 9730      	SBIW R30,0
00037a f009      	BREQ PC+2
00037b c062      	RJMP _0x3F
                 ; 0000 00FB                 sprintf(mss, "0 %d %d %d", temp, humidity, light);
00037c 01fe      	MOVW R30,R28
00037d 93fa      	ST   -Y,R31
00037e 93ea      	ST   -Y,R30
                +
00037f e8eb     +LDI R30 , LOW ( 2 * _0x0 + ( 3 ) )
000380 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 3 ) )
                 	__POINTW1FN _0x0,3
000381 93fa      	ST   -Y,R31
000382 93ea      	ST   -Y,R30
000383 01f8      	MOVW R30,R16
000384 940e 0e99 	CALL __CWD1
000386 940e 0f5d 	CALL __PUTPARD1
000388 01f9      	MOVW R30,R18
000389 940e 0e99 	CALL __CWD1
00038b 940e 0f5d 	CALL __PUTPARD1
                +
00038d 01fe     +MOVW R30 , R28
00038e 5bed     +SUBI R30 , LOW ( - 67 )
00038f 4fff     +SBCI R31 , HIGH ( - 67 )
000390 9001     +LD R0 , Z +
000391 81f0     +LD R31 , Z
000392 2de0     +MOV R30 , R0
                 	__GETW1SX 67
000393 940e 0e99 	CALL __CWD1
000395 940e 0f5d 	CALL __PUTPARD1
000397 e08c      	LDI  R24,12
000398 940e 08a5 	CALL _sprintf
00039a 9660      	ADIW R28,16
                 ; 0000 00FC                 USART_put(mss);
00039b 01de      	MOVW R26,R28
00039c dd42      	RCALL _USART_put
                 ; 0000 00FD                 // LCD update
                 ; 0000 00FE                 LCD_clear();
00039d ddd7      	RCALL _LCD_clear
                 ; 0000 00FF                 sprintf(mss, "T:%doC, H:%d%%", temp, humidity);
00039e 01fe      	MOVW R30,R28
00039f 93fa      	ST   -Y,R31
0003a0 93ea      	ST   -Y,R30
                +
0003a1 e9e6     +LDI R30 , LOW ( 2 * _0x0 + ( 14 ) )
0003a2 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 14 ) )
                 	__POINTW1FN _0x0,14
0003a3 93fa      	ST   -Y,R31
0003a4 93ea      	ST   -Y,R30
0003a5 01f8      	MOVW R30,R16
0003a6 940e 0e99 	CALL __CWD1
0003a8 940e 0f5d 	CALL __PUTPARD1
0003aa 01f9      	MOVW R30,R18
0003ab 940e 0e99 	CALL __CWD1
0003ad 940e 0f5d 	CALL __PUTPARD1
0003af e088      	LDI  R24,8
0003b0 940e 08a5 	CALL _sprintf
0003b2 962c      	ADIW R28,12
                 ; 0000 0100                 LCD_print(mss);
0003b3 01de      	MOVW R26,R28
0003b4 ddc9      	RCALL _LCD_print
                 ; 0000 0101                 sprintf(mss, "L:%4.2f%%", light*100.0/1024);
0003b5 01fe      	MOVW R30,R28
0003b6 93fa      	ST   -Y,R31
0003b7 93ea      	ST   -Y,R30
                +
0003b8 eae5     +LDI R30 , LOW ( 2 * _0x0 + ( 29 ) )
0003b9 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 29 ) )
                 	__POINTW1FN _0x0,29
0003ba 93fa      	ST   -Y,R31
0003bb 93ea      	ST   -Y,R30
0003bc adeb      	LDD  R30,Y+59
0003bd adfc      	LDD  R31,Y+59+1
0003be 940e 0e99 	CALL __CWD1
0003c0 940e 0d39 	CALL __CDF1
                +
0003c2 e0a0     +LDI R26 , LOW ( 0x42C80000 )
0003c3 e0b0     +LDI R27 , HIGH ( 0x42C80000 )
0003c4 ec88     +LDI R24 , BYTE3 ( 0x42C80000 )
0003c5 e492     +LDI R25 , BYTE4 ( 0x42C80000 )
                 	__GETD2N 0x42C80000
0003c6 940e 0dc3 	CALL __MULF12
0003c8 01df      	MOVW R26,R30
0003c9 01cb      	MOVW R24,R22
                +
0003ca e0e0     +LDI R30 , LOW ( 0x44800000 )
0003cb e0f0     +LDI R31 , HIGH ( 0x44800000 )
0003cc e860     +LDI R22 , BYTE3 ( 0x44800000 )
0003cd e474     +LDI R23 , BYTE4 ( 0x44800000 )
                 	__GETD1N 0x44800000
0003ce 940e 0e11 	CALL __DIVF21
0003d0 940e 0f5d 	CALL __PUTPARD1
0003d2 e084      	LDI  R24,4
0003d3 940e 08a5 	CALL _sprintf
0003d5 9628      	ADIW R28,8
                 ; 0000 0102                 LCD_print_pos(1, 0, mss);
0003d6 e0e1      	LDI  R30,LOW(1)
0003d7 93ea      	ST   -Y,R30
0003d8 e0e0      	LDI  R30,LOW(0)
0003d9 93ea      	ST   -Y,R30
0003da 01de      	MOVW R26,R28
0003db 9612      	ADIW R26,2
0003dc dde1      	RCALL _LCD_print_pos
                 ; 0000 0103 
                 ; 0000 0104             } else{
0003dd c012      	RJMP _0x40
                 _0x3F:
                 ; 0000 0105                 sprintf(mss, "-1 %d", err_code);
0003de 01fe      	MOVW R30,R28
0003df 93fa      	ST   -Y,R31
0003e0 93ea      	ST   -Y,R30
                +
0003e1 eaef     +LDI R30 , LOW ( 2 * _0x0 + ( 39 ) )
0003e2 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 39 ) )
                 	__POINTW1FN _0x0,39
0003e3 93fa      	ST   -Y,R31
0003e4 93ea      	ST   -Y,R30
0003e5 01fa      	MOVW R30,R20
0003e6 940e 0e99 	CALL __CWD1
0003e8 940e 0f5d 	CALL __PUTPARD1
0003ea e084      	LDI  R24,4
0003eb 940e 08a5 	CALL _sprintf
0003ed 9628      	ADIW R28,8
                 ; 0000 0106                 USART_put(mss);
0003ee 01de      	MOVW R26,R28
0003ef dcef      	RCALL _USART_put
                 ; 0000 0107             }
                 _0x40:
                 ; 0000 0108         }
                 ; 0000 0109 
                 ; 0000 010A         // check threshold
                 ; 0000 010B         PORTB.2 = temp_threshold < temp;
                 _0x3E:
0003f0 01f8      	MOVW R30,R16
0003f1 a9ad      	LDD  R26,Y+53
0003f2 a9be      	LDD  R27,Y+53+1
0003f3 940e 0e9e 	CALL __LTW12
0003f5 30e0      	CPI  R30,0
0003f6 f411      	BRNE _0x41
0003f7 982a      	CBI  0x5,2
0003f8 c001      	RJMP _0x42
                 _0x41:
0003f9 9a2a      	SBI  0x5,2
                 _0x42:
                 ; 0000 010C         PORTB.3 = humidity_threshold < humidity;
0003fa 01f9      	MOVW R30,R18
0003fb a9ab      	LDD  R26,Y+51
0003fc a9bc      	LDD  R27,Y+51+1
0003fd 940e 0e9e 	CALL __LTW12
0003ff 30e0      	CPI  R30,0
000400 f411      	BRNE _0x43
000401 982b      	CBI  0x5,3
000402 c001      	RJMP _0x44
                 _0x43:
000403 9a2b      	SBI  0x5,3
                 _0x44:
                 ; 0000 010D         PORTB.4 = light_threshold > light;
000404 a9ef      	LDD  R30,Y+55
000405 adf8      	LDD  R31,Y+55+1
000406 a9a9      	LDD  R26,Y+49
000407 a9ba      	LDD  R27,Y+49+1
000408 940e 0ea4 	CALL __GTW12
00040a 30e0      	CPI  R30,0
00040b f411      	BRNE _0x45
00040c 982c      	CBI  0x5,4
00040d c001      	RJMP _0x46
                 _0x45:
00040e 9a2c      	SBI  0x5,4
                 _0x46:
                 ; 0000 010E 
                 ; 0000 010F 		delay_ms(100);
00040f e6a4      	LDI  R26,LOW(100)
000410 e0b0      	LDI  R27,0
000411 940e 0cc3 	CALL _delay_ms
                 ; 0000 0110 	}
000413 ce7e      	RJMP _0x30
                 ; 0000 0111 }
                 _0x47:
000414 cfff      	RJMP _0x47
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
000415 93ba      	ST   -Y,R27
000416 93aa      	ST   -Y,R26
000417 931a      	ST   -Y,R17
000418 930a      	ST   -Y,R16
000419 81aa      	LDD  R26,Y+2
00041a 81bb      	LDD  R27,Y+2+1
00041b 9612      	ADIW R26,2
00041c 940e 0f3f 	CALL __GETW1P
00041e 9730      	SBIW R30,0
00041f f159      	BREQ _0x2000016
000420 81aa      	LDD  R26,Y+2
000421 81bb      	LDD  R27,Y+2+1
000422 9614      	ADIW R26,4
000423 940e 0f3f 	CALL __GETW1P
000425 018f      	MOVW R16,R30
000426 9730      	SBIW R30,0
000427 f061      	BREQ _0x2000018
                +
000428 3002     +CPI R16 , LOW ( 2 )
000429 e0e0     +LDI R30 , HIGH ( 2 )
00042a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00042b f098      	BRLO _0x2000019
00042c 01f8      	MOVW R30,R16
00042d 9731      	SBIW R30,1
00042e 018f      	MOVW R16,R30
                +
00042f 81aa     +LDD R26 , Y + 2
000430 81bb     +LDD R27 , Y + 2 + 1
000431 9614     +ADIW R26 , 4
000432 93ed     +ST X + , R30
000433 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000018:
000434 81aa      	LDD  R26,Y+2
000435 81bb      	LDD  R27,Y+2+1
000436 9612      	ADIW R26,2
000437 91ed      	LD   R30,X+
000438 91fd      	LD   R31,X+
000439 9631      	ADIW R30,1
00043a 93fe      	ST   -X,R31
00043b 93ee      	ST   -X,R30
00043c 9731      	SBIW R30,1
00043d 81ac      	LDD  R26,Y+4
00043e 83a0      	STD  Z+0,R26
                 _0x2000019:
00043f 81aa      	LDD  R26,Y+2
000440 81bb      	LDD  R27,Y+2+1
000441 940e 0f3f 	CALL __GETW1P
000443 23ff      	TST  R31
000444 f02a      	BRMI _0x200001A
000445 91ed      	LD   R30,X+
000446 91fd      	LD   R31,X+
000447 9631      	ADIW R30,1
000448 93fe      	ST   -X,R31
000449 93ee      	ST   -X,R30
                 _0x200001A:
00044a c006      	RJMP _0x200001B
                 _0x2000016:
00044b 81aa      	LDD  R26,Y+2
00044c 81bb      	LDD  R27,Y+2+1
00044d efef      	LDI  R30,LOW(65535)
00044e efff      	LDI  R31,HIGH(65535)
00044f 93ed      	ST   X+,R30
000450 93fc      	ST   X,R31
                 _0x200001B:
000451 8119      	LDD  R17,Y+1
000452 8108      	LDD  R16,Y+0
000453 940c 0afa 	JMP  _0x20C0004
                 ; .FEND
                 __ftoe_G100:
                 ; .FSTART __ftoe_G100
000455 93ba      	ST   -Y,R27
000456 93aa      	ST   -Y,R26
000457 9724      	SBIW R28,4
000458 e0e0      	LDI  R30,LOW(0)
000459 83e8      	ST   Y,R30
00045a 83e9      	STD  Y+1,R30
00045b e8e0      	LDI  R30,LOW(128)
00045c 83ea      	STD  Y+2,R30
00045d e3ef      	LDI  R30,LOW(63)
00045e 83eb      	STD  Y+3,R30
00045f 940e 0fa3 	CALL __SAVELOCR4
000461 85ee      	LDD  R30,Y+14
000462 85ff      	LDD  R31,Y+14+1
000463 3fef      	CPI  R30,LOW(0xFFFF)
000464 efaf      	LDI  R26,HIGH(0xFFFF)
000465 07fa      	CPC  R31,R26
000466 f449      	BRNE _0x200001F
000467 85e8      	LDD  R30,Y+8
000468 85f9      	LDD  R31,Y+8+1
000469 93fa      	ST   -Y,R31
00046a 93ea      	ST   -Y,R30
                +
00046b eba6     +LDI R26 , LOW ( 2 * _0x2000000 + ( 0 ) )
00046c e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW2FN _0x2000000,0
00046d 940e 0afc 	CALL _strcpyf
00046f c144      	RJMP _0x20C0009
                 _0x200001F:
000470 3fef      	CPI  R30,LOW(0x7FFF)
000471 e7af      	LDI  R26,HIGH(0x7FFF)
000472 07fa      	CPC  R31,R26
000473 f449      	BRNE _0x200001E
000474 85e8      	LDD  R30,Y+8
000475 85f9      	LDD  R31,Y+8+1
000476 93fa      	ST   -Y,R31
000477 93ea      	ST   -Y,R30
                +
000478 eba7     +LDI R26 , LOW ( 2 * _0x2000000 + ( 1 ) )
000479 e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW2FN _0x2000000,1
00047a 940e 0afc 	CALL _strcpyf
00047c c137      	RJMP _0x20C0009
                 _0x200001E:
00047d 85ab      	LDD  R26,Y+11
00047e 30a7      	CPI  R26,LOW(0x7)
00047f f010      	BRLO _0x2000021
000480 e0e6      	LDI  R30,LOW(6)
000481 87eb      	STD  Y+11,R30
                 _0x2000021:
000482 851b      	LDD  R17,Y+11
                 _0x2000022:
000483 2fe1      	MOV  R30,R17
000484 5011      	SUBI R17,1
000485 30e0      	CPI  R30,0
000486 f079      	BREQ _0x2000024
                +
000487 81ac     +LDD R26 , Y + 4
000488 81bd     +LDD R27 , Y + 4 + 1
000489 818e     +LDD R24 , Y + 4 + 2
00048a 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
00048b e0e0     +LDI R30 , LOW ( 0x41200000 )
00048c e0f0     +LDI R31 , HIGH ( 0x41200000 )
00048d e260     +LDI R22 , BYTE3 ( 0x41200000 )
00048e e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00048f 940e 0dc3 	CALL __MULF12
                +
000491 83ec     +STD Y + 4 , R30
000492 83fd     +STD Y + 4 + 1 , R31
000493 836e     +STD Y + 4 + 2 , R22
000494 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000495 cfed      	RJMP _0x2000022
                 _0x2000024:
                +
000496 85ec     +LDD R30 , Y + 12
000497 85fd     +LDD R31 , Y + 12 + 1
000498 856e     +LDD R22 , Y + 12 + 2
000499 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00049a 940e 0f9d 	CALL __CPD10
00049c f481      	BRNE _0x2000025
00049d e030      	LDI  R19,LOW(0)
                +
00049e 81ac     +LDD R26 , Y + 4
00049f 81bd     +LDD R27 , Y + 4 + 1
0004a0 818e     +LDD R24 , Y + 4 + 2
0004a1 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
0004a2 e0e0     +LDI R30 , LOW ( 0x41200000 )
0004a3 e0f0     +LDI R31 , HIGH ( 0x41200000 )
0004a4 e260     +LDI R22 , BYTE3 ( 0x41200000 )
0004a5 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0004a6 940e 0dc3 	CALL __MULF12
                +
0004a8 83ec     +STD Y + 4 , R30
0004a9 83fd     +STD Y + 4 + 1 , R31
0004aa 836e     +STD Y + 4 + 2 , R22
0004ab 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
0004ac c07d      	RJMP _0x2000026
                 _0x2000025:
0004ad 853b      	LDD  R19,Y+11
                +
0004ae 81ec     +LDD R30 , Y + 4
0004af 81fd     +LDD R31 , Y + 4 + 1
0004b0 816e     +LDD R22 , Y + 4 + 2
0004b1 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
0004b2 85ac     +LDD R26 , Y + 12
0004b3 85bd     +LDD R27 , Y + 12 + 1
0004b4 858e     +LDD R24 , Y + 12 + 2
0004b5 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0004b6 940e 0e56 	CALL __CMPF12
0004b8 f009      	BREQ PC+2
0004b9 f408      	BRCC PC+2
0004ba c026      	RJMP _0x2000027
                +
0004bb 81ac     +LDD R26 , Y + 4
0004bc 81bd     +LDD R27 , Y + 4 + 1
0004bd 818e     +LDD R24 , Y + 4 + 2
0004be 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
0004bf e0e0     +LDI R30 , LOW ( 0x41200000 )
0004c0 e0f0     +LDI R31 , HIGH ( 0x41200000 )
0004c1 e260     +LDI R22 , BYTE3 ( 0x41200000 )
0004c2 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0004c3 940e 0dc3 	CALL __MULF12
                +
0004c5 83ec     +STD Y + 4 , R30
0004c6 83fd     +STD Y + 4 + 1 , R31
0004c7 836e     +STD Y + 4 + 2 , R22
0004c8 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                 _0x2000028:
                +
0004c9 81ec     +LDD R30 , Y + 4
0004ca 81fd     +LDD R31 , Y + 4 + 1
0004cb 816e     +LDD R22 , Y + 4 + 2
0004cc 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
0004cd 85ac     +LDD R26 , Y + 12
0004ce 85bd     +LDD R27 , Y + 12 + 1
0004cf 858e     +LDD R24 , Y + 12 + 2
0004d0 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0004d1 940e 0e56 	CALL __CMPF12
0004d3 f060      	BRLO _0x200002A
                +
0004d4 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0004d5 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0004d6 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0004d7 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0004d8 940e 0dc3 	CALL __MULF12
                +
0004da 87ec     +STD Y + 12 , R30
0004db 87fd     +STD Y + 12 + 1 , R31
0004dc 876e     +STD Y + 12 + 2 , R22
0004dd 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0004de 5f3f      	SUBI R19,-LOW(1)
0004df cfe9      	RJMP _0x2000028
                 _0x200002A:
0004e0 c025      	RJMP _0x200002B
                 _0x2000027:
                 _0x200002C:
                +
0004e1 81ec     +LDD R30 , Y + 4
0004e2 81fd     +LDD R31 , Y + 4 + 1
0004e3 816e     +LDD R22 , Y + 4 + 2
0004e4 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
0004e5 85ac     +LDD R26 , Y + 12
0004e6 85bd     +LDD R27 , Y + 12 + 1
0004e7 858e     +LDD R24 , Y + 12 + 2
0004e8 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0004e9 940e 0e56 	CALL __CMPF12
0004eb f460      	BRSH _0x200002E
                +
0004ec e0e0     +LDI R30 , LOW ( 0x41200000 )
0004ed e0f0     +LDI R31 , HIGH ( 0x41200000 )
0004ee e260     +LDI R22 , BYTE3 ( 0x41200000 )
0004ef e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0004f0 940e 0dc3 	CALL __MULF12
                +
0004f2 87ec     +STD Y + 12 , R30
0004f3 87fd     +STD Y + 12 + 1 , R31
0004f4 876e     +STD Y + 12 + 2 , R22
0004f5 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0004f6 5031      	SUBI R19,LOW(1)
0004f7 cfe9      	RJMP _0x200002C
                 _0x200002E:
                +
0004f8 81ac     +LDD R26 , Y + 4
0004f9 81bd     +LDD R27 , Y + 4 + 1
0004fa 818e     +LDD R24 , Y + 4 + 2
0004fb 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
0004fc e0e0     +LDI R30 , LOW ( 0x41200000 )
0004fd e0f0     +LDI R31 , HIGH ( 0x41200000 )
0004fe e260     +LDI R22 , BYTE3 ( 0x41200000 )
0004ff e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000500 940e 0dc3 	CALL __MULF12
                +
000502 83ec     +STD Y + 4 , R30
000503 83fd     +STD Y + 4 + 1 , R31
000504 836e     +STD Y + 4 + 2 , R22
000505 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                 _0x200002B:
                +
000506 85ec     +LDD R30 , Y + 12
000507 85fd     +LDD R31 , Y + 12 + 1
000508 856e     +LDD R22 , Y + 12 + 2
000509 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
                +
00050a e0a0     +LDI R26 , LOW ( 0x3F000000 )
00050b e0b0     +LDI R27 , HIGH ( 0x3F000000 )
00050c e080     +LDI R24 , BYTE3 ( 0x3F000000 )
00050d e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
00050e 940e 0d73 	CALL __ADDF12
                +
000510 87ec     +STD Y + 12 , R30
000511 87fd     +STD Y + 12 + 1 , R31
000512 876e     +STD Y + 12 + 2 , R22
000513 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
                +
000514 81ec     +LDD R30 , Y + 4
000515 81fd     +LDD R31 , Y + 4 + 1
000516 816e     +LDD R22 , Y + 4 + 2
000517 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
000518 85ac     +LDD R26 , Y + 12
000519 85bd     +LDD R27 , Y + 12 + 1
00051a 858e     +LDD R24 , Y + 12 + 2
00051b 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
00051c 940e 0e56 	CALL __CMPF12
00051e f058      	BRLO _0x200002F
                +
00051f eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000520 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000521 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000522 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000523 940e 0dc3 	CALL __MULF12
                +
000525 87ec     +STD Y + 12 , R30
000526 87fd     +STD Y + 12 + 1 , R31
000527 876e     +STD Y + 12 + 2 , R22
000528 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000529 5f3f      	SUBI R19,-LOW(1)
                 _0x200002F:
                 _0x2000026:
00052a e010      	LDI  R17,LOW(0)
                 _0x2000030:
00052b 85eb      	LDD  R30,Y+11
00052c 17e1      	CP   R30,R17
00052d f408      	BRSH PC+2
00052e c04f      	RJMP _0x2000032
                +
00052f 81ac     +LDD R26 , Y + 4
000530 81bd     +LDD R27 , Y + 4 + 1
000531 818e     +LDD R24 , Y + 4 + 2
000532 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000533 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000534 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000535 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000536 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000537 940e 0dc3 	CALL __MULF12
                +
000539 e0a0     +LDI R26 , LOW ( 0x3F000000 )
00053a e0b0     +LDI R27 , HIGH ( 0x3F000000 )
00053b e080     +LDI R24 , BYTE3 ( 0x3F000000 )
00053c e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
00053d 940e 0d73 	CALL __ADDF12
00053f 01df      	MOVW R26,R30
000540 01cb      	MOVW R24,R22
000541 940e 0b84 	CALL _floor
                +
000543 83ec     +STD Y + 4 , R30
000544 83fd     +STD Y + 4 + 1 , R31
000545 836e     +STD Y + 4 + 2 , R22
000546 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                +
000547 85ac     +LDD R26 , Y + 12
000548 85bd     +LDD R27 , Y + 12 + 1
000549 858e     +LDD R24 , Y + 12 + 2
00054a 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
00054b 940e 0e11 	CALL __DIVF21
00054d 940e 0d00 	CALL __CFD1U
00054f 2f0e      	MOV  R16,R30
000550 85a8      	LDD  R26,Y+8
000551 85b9      	LDD  R27,Y+8+1
000552 9611      	ADIW R26,1
000553 87a8      	STD  Y+8,R26
000554 87b9      	STD  Y+8+1,R27
000555 9711      	SBIW R26,1
000556 5de0      	SUBI R30,-LOW(48)
000557 93ec      	ST   X,R30
000558 2fe0      	MOV  R30,R16
000559 27ff      	CLR  R31
00055a 2766      	CLR  R22
00055b 2777      	CLR  R23
00055c 940e 0d39 	CALL __CDF1
                +
00055e 81ac     +LDD R26 , Y + 4
00055f 81bd     +LDD R27 , Y + 4 + 1
000560 818e     +LDD R24 , Y + 4 + 2
000561 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000562 940e 0dc3 	CALL __MULF12
                +
000564 85ac     +LDD R26 , Y + 12
000565 85bd     +LDD R27 , Y + 12 + 1
000566 858e     +LDD R24 , Y + 12 + 2
000567 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000568 940e 0f67 	CALL __SWAPD12
00056a 940e 0d6c 	CALL __SUBF12
                +
00056c 87ec     +STD Y + 12 , R30
00056d 87fd     +STD Y + 12 + 1 , R31
00056e 876e     +STD Y + 12 + 2 , R22
00056f 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000570 2fe1      	MOV  R30,R17
000571 5f1f      	SUBI R17,-1
000572 30e0      	CPI  R30,0
000573 f009      	BREQ _0x2000033
000574 cfb6      	RJMP _0x2000030
                 _0x2000033:
000575 85a8      	LDD  R26,Y+8
000576 85b9      	LDD  R27,Y+8+1
000577 9611      	ADIW R26,1
000578 87a8      	STD  Y+8,R26
000579 87b9      	STD  Y+8+1,R27
00057a 9711      	SBIW R26,1
00057b e2ee      	LDI  R30,LOW(46)
00057c 93ec      	ST   X,R30
00057d cfad      	RJMP _0x2000030
                 _0x2000032:
00057e 85e8      	LDD  R30,Y+8
00057f 85f9      	LDD  R31,Y+8+1
000580 9631      	ADIW R30,1
000581 87e8      	STD  Y+8,R30
000582 87f9      	STD  Y+8+1,R31
000583 9731      	SBIW R30,1
000584 85aa      	LDD  R26,Y+10
000585 83a0      	STD  Z+0,R26
000586 3030      	CPI  R19,0
000587 f42c      	BRGE _0x2000034
000588 9531      	NEG  R19
000589 85a8      	LDD  R26,Y+8
00058a 85b9      	LDD  R27,Y+8+1
00058b e2ed      	LDI  R30,LOW(45)
00058c c003      	RJMP _0x200011C
                 _0x2000034:
00058d 85a8      	LDD  R26,Y+8
00058e 85b9      	LDD  R27,Y+8+1
00058f e2eb      	LDI  R30,LOW(43)
                 _0x200011C:
000590 93ec      	ST   X,R30
000591 85e8      	LDD  R30,Y+8
000592 85f9      	LDD  R31,Y+8+1
000593 9631      	ADIW R30,1
000594 87e8      	STD  Y+8,R30
000595 87f9      	STD  Y+8+1,R31
000596 9631      	ADIW R30,1
000597 87e8      	STD  Y+8,R30
000598 87f9      	STD  Y+8+1,R31
000599 9731      	SBIW R30,1
00059a 01bf      	MOVW R22,R30
00059b 2fa3      	MOV  R26,R19
00059c e0ea      	LDI  R30,LOW(10)
00059d 940e 0ed8 	CALL __DIVB21
00059f 5de0      	SUBI R30,-LOW(48)
0005a0 01db      	MOVW R26,R22
0005a1 93ec      	ST   X,R30
0005a2 85e8      	LDD  R30,Y+8
0005a3 85f9      	LDD  R31,Y+8+1
0005a4 9631      	ADIW R30,1
0005a5 87e8      	STD  Y+8,R30
0005a6 87f9      	STD  Y+8+1,R31
0005a7 9731      	SBIW R30,1
0005a8 01bf      	MOVW R22,R30
0005a9 2fa3      	MOV  R26,R19
0005aa e0ea      	LDI  R30,LOW(10)
0005ab 940e 0f15 	CALL __MODB21
0005ad 5de0      	SUBI R30,-LOW(48)
0005ae 01db      	MOVW R26,R22
0005af 93ec      	ST   X,R30
0005b0 85a8      	LDD  R26,Y+8
0005b1 85b9      	LDD  R27,Y+8+1
0005b2 e0e0      	LDI  R30,LOW(0)
0005b3 93ec      	ST   X,R30
                 _0x20C0009:
0005b4 940e 0faa 	CALL __LOADLOCR4
0005b6 9660      	ADIW R28,16
0005b7 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
0005b8 93ba      	ST   -Y,R27
0005b9 93aa      	ST   -Y,R26
0005ba 97ef      	SBIW R28,63
0005bb 9761      	SBIW R28,17
0005bc 940e 0fa1 	CALL __SAVELOCR6
0005be e010      	LDI  R17,0
                +
0005bf 01fe     +MOVW R30 , R28
0005c0 5ae8     +SUBI R30 , LOW ( - 88 )
0005c1 4fff     +SBCI R31 , HIGH ( - 88 )
0005c2 9001     +LD R0 , Z +
0005c3 81f0     +LD R31 , Z
0005c4 2de0     +MOV R30 , R0
                 	__GETW1SX 88
0005c5 87e8      	STD  Y+8,R30
0005c6 87f9      	STD  Y+8+1,R31
                +
0005c7 01fe     +MOVW R30 , R28
0005c8 5aea     +SUBI R30 , LOW ( - 86 )
0005c9 4fff     +SBCI R31 , HIGH ( - 86 )
0005ca 9001     +LD R0 , Z +
0005cb 81f0     +LD R31 , Z
0005cc 2de0     +MOV R30 , R0
                 	__GETW1SX 86
0005cd 83ee      	STD  Y+6,R30
0005ce 83ff      	STD  Y+6+1,R31
0005cf 81ae      	LDD  R26,Y+6
0005d0 81bf      	LDD  R27,Y+6+1
0005d1 e0e0      	LDI  R30,LOW(0)
0005d2 e0f0      	LDI  R31,HIGH(0)
0005d3 93ed      	ST   X+,R30
0005d4 93fc      	ST   X,R31
                 _0x2000036:
0005d5 01de      	MOVW R26,R28
0005d6 5aa4      	SUBI R26,LOW(-(92))
0005d7 4fbf      	SBCI R27,HIGH(-(92))
0005d8 91ed      	LD   R30,X+
0005d9 91fd      	LD   R31,X+
0005da 9631      	ADIW R30,1
0005db 93fe      	ST   -X,R31
0005dc 93ee      	ST   -X,R30
0005dd 9731      	SBIW R30,1
0005de 91e4      	LPM  R30,Z
0005df 2f2e      	MOV  R18,R30
0005e0 30e0      	CPI  R30,0
0005e1 f409      	BRNE PC+2
0005e2 c2b9      	RJMP _0x2000038
0005e3 2fe1      	MOV  R30,R17
0005e4 30e0      	CPI  R30,0
0005e5 f459      	BRNE _0x200003C
0005e6 3225      	CPI  R18,37
0005e7 f411      	BRNE _0x200003D
0005e8 e011      	LDI  R17,LOW(1)
0005e9 c006      	RJMP _0x200003E
                 _0x200003D:
0005ea 932a      	ST   -Y,R18
0005eb 81af      	LDD  R26,Y+7
0005ec 85b8      	LDD  R27,Y+7+1
0005ed 85e9      	LDD  R30,Y+9
0005ee 85fa      	LDD  R31,Y+9+1
0005ef 9509      	ICALL
                 _0x200003E:
0005f0 c2aa      	RJMP _0x200003B
                 _0x200003C:
0005f1 30e1      	CPI  R30,LOW(0x1)
0005f2 f4e1      	BRNE _0x200003F
0005f3 3225      	CPI  R18,37
0005f4 f439      	BRNE _0x2000040
0005f5 932a      	ST   -Y,R18
0005f6 81af      	LDD  R26,Y+7
0005f7 85b8      	LDD  R27,Y+7+1
0005f8 85e9      	LDD  R30,Y+9
0005f9 85fa      	LDD  R31,Y+9+1
0005fa 9509      	ICALL
0005fb c29e      	RJMP _0x200011D
                 _0x2000040:
0005fc e012      	LDI  R17,LOW(2)
0005fd e0e0      	LDI  R30,LOW(0)
0005fe 8bed      	STD  Y+21,R30
0005ff e000      	LDI  R16,LOW(0)
000600 322d      	CPI  R18,45
000601 f411      	BRNE _0x2000041
000602 e001      	LDI  R16,LOW(1)
000603 c297      	RJMP _0x200003B
                 _0x2000041:
000604 322b      	CPI  R18,43
000605 f419      	BRNE _0x2000042
000606 e2eb      	LDI  R30,LOW(43)
000607 8bed      	STD  Y+21,R30
000608 c292      	RJMP _0x200003B
                 _0x2000042:
000609 3220      	CPI  R18,32
00060a f419      	BRNE _0x2000043
00060b e2e0      	LDI  R30,LOW(32)
00060c 8bed      	STD  Y+21,R30
00060d c28d      	RJMP _0x200003B
                 _0x2000043:
00060e c002      	RJMP _0x2000044
                 _0x200003F:
00060f 30e2      	CPI  R30,LOW(0x2)
000610 f439      	BRNE _0x2000045
                 _0x2000044:
000611 e050      	LDI  R21,LOW(0)
000612 e013      	LDI  R17,LOW(3)
000613 3320      	CPI  R18,48
000614 f411      	BRNE _0x2000046
000615 6800      	ORI  R16,LOW(128)
000616 c284      	RJMP _0x200003B
                 _0x2000046:
000617 c002      	RJMP _0x2000047
                 _0x2000045:
000618 30e3      	CPI  R30,LOW(0x3)
000619 f491      	BRNE _0x2000048
                 _0x2000047:
00061a 3320      	CPI  R18,48
00061b f010      	BRLO _0x200004A
00061c 332a      	CPI  R18,58
00061d f008      	BRLO _0x200004B
                 _0x200004A:
00061e c007      	RJMP _0x2000049
                 _0x200004B:
00061f e0aa      	LDI  R26,LOW(10)
000620 9f5a      	MUL  R21,R26
000621 2d50      	MOV  R21,R0
000622 2fe2      	MOV  R30,R18
000623 53e0      	SUBI R30,LOW(48)
000624 0f5e      	ADD  R21,R30
000625 c275      	RJMP _0x200003B
                 _0x2000049:
000626 e040      	LDI  R20,LOW(0)
000627 322e      	CPI  R18,46
000628 f411      	BRNE _0x200004C
000629 e014      	LDI  R17,LOW(4)
00062a c270      	RJMP _0x200003B
                 _0x200004C:
00062b c00f      	RJMP _0x200004D
                 _0x2000048:
00062c 30e4      	CPI  R30,LOW(0x4)
00062d f499      	BRNE _0x200004F
00062e 3320      	CPI  R18,48
00062f f010      	BRLO _0x2000051
000630 332a      	CPI  R18,58
000631 f008      	BRLO _0x2000052
                 _0x2000051:
000632 c008      	RJMP _0x2000050
                 _0x2000052:
000633 6200      	ORI  R16,LOW(32)
000634 e0aa      	LDI  R26,LOW(10)
000635 9f4a      	MUL  R20,R26
000636 2d40      	MOV  R20,R0
000637 2fe2      	MOV  R30,R18
000638 53e0      	SUBI R30,LOW(48)
000639 0f4e      	ADD  R20,R30
00063a c260      	RJMP _0x200003B
                 _0x2000050:
                 _0x200004D:
00063b 362c      	CPI  R18,108
00063c f419      	BRNE _0x2000053
00063d 6002      	ORI  R16,LOW(2)
00063e e015      	LDI  R17,LOW(5)
00063f c25b      	RJMP _0x200003B
                 _0x2000053:
000640 c003      	RJMP _0x2000054
                 _0x200004F:
000641 30e5      	CPI  R30,LOW(0x5)
000642 f009      	BREQ PC+2
000643 c257      	RJMP _0x200003B
                 _0x2000054:
000644 2fe2      	MOV  R30,R18
000645 36e3      	CPI  R30,LOW(0x63)
000646 f4a1      	BRNE _0x2000059
                +
000647 01fe     +MOVW R30 , R28
000648 5ae6     +SUBI R30 , LOW ( - 90 )
000649 4fff     +SBCI R31 , HIGH ( - 90 )
00064a 9001     +LD R0 , Z +
00064b 81f0     +LD R31 , Z
00064c 2de0     +MOV R30 , R0
                 	__GETW1SX 90
00064d 9734      	SBIW R30,4
                +
00064e 01de     +MOVW R26 , R28
00064f 5aa6     +SUBI R26 , LOW ( - 90 )
000650 4fbf     +SBCI R27 , HIGH ( - 90 )
000651 93ed     +ST X + , R30
000652 93fc     +ST X , R31
                 	__PUTW1SX 90
000653 81a4      	LDD  R26,Z+4
000654 93aa      	ST   -Y,R26
000655 81af      	LDD  R26,Y+7
000656 85b8      	LDD  R27,Y+7+1
000657 85e9      	LDD  R30,Y+9
000658 85fa      	LDD  R31,Y+9+1
000659 9509      	ICALL
00065a c23f      	RJMP _0x200005A
                 _0x2000059:
00065b 34e5      	CPI  R30,LOW(0x45)
00065c f011      	BREQ _0x200005D
00065d 36e5      	CPI  R30,LOW(0x65)
00065e f409      	BRNE _0x200005E
                 _0x200005D:
00065f c003      	RJMP _0x200005F
                 _0x200005E:
000660 36e6      	CPI  R30,LOW(0x66)
000661 f009      	BREQ PC+2
000662 c068      	RJMP _0x2000060
                 _0x200005F:
000663 01fe      	MOVW R30,R28
000664 9676      	ADIW R30,22
000665 87ee      	STD  Y+14,R30
000666 87ff      	STD  Y+14+1,R31
                +
000667 01de     +MOVW R26 , R28
000668 5aa6     +SUBI R26 , LOW ( - 90 )
000669 4fbf     +SBCI R27 , HIGH ( - 90 )
00066a 900d     +LD R0 , X +
00066b 91bc     +LD R27 , X
00066c 2da0     +MOV R26 , R0
                 	__GETW2SX 90
00066d 940e 0f43 	CALL __GETD1P
                +
00066f 87ea     +STD Y + 10 , R30
000670 87fb     +STD Y + 10 + 1 , R31
000671 876c     +STD Y + 10 + 2 , R22
000672 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
                +
000673 01fe     +MOVW R30 , R28
000674 5ae6     +SUBI R30 , LOW ( - 90 )
000675 4fff     +SBCI R31 , HIGH ( - 90 )
000676 9001     +LD R0 , Z +
000677 81f0     +LD R31 , Z
000678 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000679 9734      	SBIW R30,4
                +
00067a 01de     +MOVW R26 , R28
00067b 5aa6     +SUBI R26 , LOW ( - 90 )
00067c 4fbf     +SBCI R27 , HIGH ( - 90 )
00067d 93ed     +ST X + , R30
00067e 93fc     +ST X , R31
                 	__PUTW1SX 90
00067f 85ad      	LDD  R26,Y+13
000680 23aa      	TST  R26
000681 f032      	BRMI _0x2000061
000682 89ad      	LDD  R26,Y+21
000683 32ab      	CPI  R26,LOW(0x2B)
000684 f079      	BREQ _0x2000063
000685 32a0      	CPI  R26,LOW(0x20)
000686 f0b9      	BREQ _0x2000065
000687 c01e      	RJMP _0x2000066
                 _0x2000061:
                +
000688 85ea     +LDD R30 , Y + 10
000689 85fb     +LDD R31 , Y + 10 + 1
00068a 856c     +LDD R22 , Y + 10 + 2
00068b 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00068c 940e 0ccd 	CALL __ANEGF1
                +
00068e 87ea     +STD Y + 10 , R30
00068f 87fb     +STD Y + 10 + 1 , R31
000690 876c     +STD Y + 10 + 2 , R22
000691 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000692 e2ed      	LDI  R30,LOW(45)
000693 8bed      	STD  Y+21,R30
                 _0x2000063:
000694 ff07      	SBRS R16,7
000695 c008      	RJMP _0x2000067
000696 89ed      	LDD  R30,Y+21
000697 93ea      	ST   -Y,R30
000698 81af      	LDD  R26,Y+7
000699 85b8      	LDD  R27,Y+7+1
00069a 85e9      	LDD  R30,Y+9
00069b 85fa      	LDD  R31,Y+9+1
00069c 9509      	ICALL
00069d c008      	RJMP _0x2000068
                 _0x2000067:
                 _0x2000065:
00069e 85ee      	LDD  R30,Y+14
00069f 85ff      	LDD  R31,Y+14+1
0006a0 9631      	ADIW R30,1
0006a1 87ee      	STD  Y+14,R30
0006a2 87ff      	STD  Y+14+1,R31
0006a3 9731      	SBIW R30,1
0006a4 89ad      	LDD  R26,Y+21
0006a5 83a0      	STD  Z+0,R26
                 _0x2000068:
                 _0x2000066:
0006a6 ff05      	SBRS R16,5
0006a7 e046      	LDI  R20,LOW(6)
0006a8 3626      	CPI  R18,102
0006a9 f461      	BRNE _0x200006A
                +
0006aa 85ea     +LDD R30 , Y + 10
0006ab 85fb     +LDD R31 , Y + 10 + 1
0006ac 856c     +LDD R22 , Y + 10 + 2
0006ad 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
0006ae 940e 0f5d 	CALL __PUTPARD1
0006b0 934a      	ST   -Y,R20
0006b1 89ab      	LDD  R26,Y+19
0006b2 89bc      	LDD  R27,Y+19+1
0006b3 940e 0b9b 	CALL _ftoa
0006b5 c00b      	RJMP _0x200006B
                 _0x200006A:
                +
0006b6 85ea     +LDD R30 , Y + 10
0006b7 85fb     +LDD R31 , Y + 10 + 1
0006b8 856c     +LDD R22 , Y + 10 + 2
0006b9 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
0006ba 940e 0f5d 	CALL __PUTPARD1
0006bc 934a      	ST   -Y,R20
0006bd 932a      	ST   -Y,R18
0006be 89ac      	LDD  R26,Y+20
0006bf 89bd      	LDD  R27,Y+20+1
0006c0 dd94      	RCALL __ftoe_G100
                 _0x200006B:
0006c1 01fe      	MOVW R30,R28
0006c2 9676      	ADIW R30,22
0006c3 87ee      	STD  Y+14,R30
0006c4 87ff      	STD  Y+14+1,R31
0006c5 85ae      	LDD  R26,Y+14
0006c6 85bf      	LDD  R27,Y+14+1
0006c7 940e 0b09 	CALL _strlen
0006c9 2f1e      	MOV  R17,R30
0006ca c045      	RJMP _0x200006C
                 _0x2000060:
0006cb 37e3      	CPI  R30,LOW(0x73)
0006cc f4e9      	BRNE _0x200006E
                +
0006cd 01fe     +MOVW R30 , R28
0006ce 5ae6     +SUBI R30 , LOW ( - 90 )
0006cf 4fff     +SBCI R31 , HIGH ( - 90 )
0006d0 9001     +LD R0 , Z +
0006d1 81f0     +LD R31 , Z
0006d2 2de0     +MOV R30 , R0
                 	__GETW1SX 90
0006d3 9734      	SBIW R30,4
                +
0006d4 01de     +MOVW R26 , R28
0006d5 5aa6     +SUBI R26 , LOW ( - 90 )
0006d6 4fbf     +SBCI R27 , HIGH ( - 90 )
0006d7 93ed     +ST X + , R30
0006d8 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
0006d9 01de     +MOVW R26 , R28
0006da 5aa6     +SUBI R26 , LOW ( - 90 )
0006db 4fbf     +SBCI R27 , HIGH ( - 90 )
0006dc 900d     +LD R0 , X +
0006dd 91bc     +LD R27 , X
0006de 2da0     +MOV R26 , R0
                 	__GETW2SX 90
0006df 9614      	ADIW R26,4
0006e0 940e 0f3f 	CALL __GETW1P
0006e2 87ee      	STD  Y+14,R30
0006e3 87ff      	STD  Y+14+1,R31
0006e4 85ae      	LDD  R26,Y+14
0006e5 85bf      	LDD  R27,Y+14+1
0006e6 940e 0b09 	CALL _strlen
0006e8 2f1e      	MOV  R17,R30
0006e9 c01f      	RJMP _0x200006F
                 _0x200006E:
0006ea 37e0      	CPI  R30,LOW(0x70)
0006eb f549      	BRNE _0x2000071
                +
0006ec 01fe     +MOVW R30 , R28
0006ed 5ae6     +SUBI R30 , LOW ( - 90 )
0006ee 4fff     +SBCI R31 , HIGH ( - 90 )
0006ef 9001     +LD R0 , Z +
0006f0 81f0     +LD R31 , Z
0006f1 2de0     +MOV R30 , R0
                 	__GETW1SX 90
0006f2 9734      	SBIW R30,4
                +
0006f3 01de     +MOVW R26 , R28
0006f4 5aa6     +SUBI R26 , LOW ( - 90 )
0006f5 4fbf     +SBCI R27 , HIGH ( - 90 )
0006f6 93ed     +ST X + , R30
0006f7 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
0006f8 01de     +MOVW R26 , R28
0006f9 5aa6     +SUBI R26 , LOW ( - 90 )
0006fa 4fbf     +SBCI R27 , HIGH ( - 90 )
0006fb 900d     +LD R0 , X +
0006fc 91bc     +LD R27 , X
0006fd 2da0     +MOV R26 , R0
                 	__GETW2SX 90
0006fe 9614      	ADIW R26,4
0006ff 940e 0f3f 	CALL __GETW1P
000701 87ee      	STD  Y+14,R30
000702 87ff      	STD  Y+14+1,R31
000703 85ae      	LDD  R26,Y+14
000704 85bf      	LDD  R27,Y+14+1
000705 940e 0b15 	CALL _strlenf
000707 2f1e      	MOV  R17,R30
000708 6008      	ORI  R16,LOW(8)
                 _0x200006F:
000709 770f      	ANDI R16,LOW(127)
00070a 3040      	CPI  R20,0
00070b f011      	BREQ _0x2000073
00070c 1741      	CP   R20,R17
00070d f008      	BRLO _0x2000074
                 _0x2000073:
00070e c001      	RJMP _0x2000072
                 _0x2000074:
00070f 2f14      	MOV  R17,R20
                 _0x2000072:
                 _0x200006C:
000710 e040      	LDI  R20,LOW(0)
000711 e0e0      	LDI  R30,LOW(0)
000712 8bec      	STD  Y+20,R30
000713 e030      	LDI  R19,LOW(0)
000714 c0a9      	RJMP _0x2000075
                 _0x2000071:
000715 36e4      	CPI  R30,LOW(0x64)
000716 f011      	BREQ _0x2000078
000717 36e9      	CPI  R30,LOW(0x69)
000718 f411      	BRNE _0x2000079
                 _0x2000078:
000719 6004      	ORI  R16,LOW(4)
00071a c002      	RJMP _0x200007A
                 _0x2000079:
00071b 37e5      	CPI  R30,LOW(0x75)
00071c f4c1      	BRNE _0x200007B
                 _0x200007A:
00071d e0ea      	LDI  R30,LOW(10)
00071e 8bec      	STD  Y+20,R30
00071f ff01      	SBRS R16,1
000720 c00a      	RJMP _0x200007C
                +
000721 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
000722 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
000723 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
000724 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
                +
000725 8be8     +STD Y + 16 , R30
000726 8bf9     +STD Y + 16 + 1 , R31
000727 8b6a     +STD Y + 16 + 2 , R22
000728 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000729 e01a      	LDI  R17,LOW(10)
00072a c028      	RJMP _0x200007D
                 _0x200007C:
                +
00072b e1e0     +LDI R30 , LOW ( 0x2710 )
00072c e2f7     +LDI R31 , HIGH ( 0x2710 )
00072d e060     +LDI R22 , BYTE3 ( 0x2710 )
00072e e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
                +
00072f 8be8     +STD Y + 16 , R30
000730 8bf9     +STD Y + 16 + 1 , R31
000731 8b6a     +STD Y + 16 + 2 , R22
000732 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000733 e015      	LDI  R17,LOW(5)
000734 c01e      	RJMP _0x200007D
                 _0x200007B:
000735 35e8      	CPI  R30,LOW(0x58)
000736 f411      	BRNE _0x200007F
000737 6008      	ORI  R16,LOW(8)
000738 c003      	RJMP _0x2000080
                 _0x200007F:
000739 37e8      	CPI  R30,LOW(0x78)
00073a f009      	BREQ PC+2
00073b c15e      	RJMP _0x20000BE
                 _0x2000080:
00073c e1e0      	LDI  R30,LOW(16)
00073d 8bec      	STD  Y+20,R30
00073e ff01      	SBRS R16,1
00073f c00a      	RJMP _0x2000082
                +
000740 e0e0     +LDI R30 , LOW ( 0x10000000 )
000741 e0f0     +LDI R31 , HIGH ( 0x10000000 )
000742 e060     +LDI R22 , BYTE3 ( 0x10000000 )
000743 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
                +
000744 8be8     +STD Y + 16 , R30
000745 8bf9     +STD Y + 16 + 1 , R31
000746 8b6a     +STD Y + 16 + 2 , R22
000747 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000748 e018      	LDI  R17,LOW(8)
000749 c009      	RJMP _0x200007D
                 _0x2000082:
                +
00074a e0e0     +LDI R30 , LOW ( 0x1000 )
00074b e1f0     +LDI R31 , HIGH ( 0x1000 )
00074c e060     +LDI R22 , BYTE3 ( 0x1000 )
00074d e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
                +
00074e 8be8     +STD Y + 16 , R30
00074f 8bf9     +STD Y + 16 + 1 , R31
000750 8b6a     +STD Y + 16 + 2 , R22
000751 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000752 e014      	LDI  R17,LOW(4)
                 _0x200007D:
000753 3040      	CPI  R20,0
000754 f011      	BREQ _0x2000083
000755 770f      	ANDI R16,LOW(127)
000756 c001      	RJMP _0x2000084
                 _0x2000083:
000757 e041      	LDI  R20,LOW(1)
                 _0x2000084:
000758 ff01      	SBRS R16,1
000759 c016      	RJMP _0x2000085
                +
00075a 01fe     +MOVW R30 , R28
00075b 5ae6     +SUBI R30 , LOW ( - 90 )
00075c 4fff     +SBCI R31 , HIGH ( - 90 )
00075d 9001     +LD R0 , Z +
00075e 81f0     +LD R31 , Z
00075f 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000760 9734      	SBIW R30,4
                +
000761 01de     +MOVW R26 , R28
000762 5aa6     +SUBI R26 , LOW ( - 90 )
000763 4fbf     +SBCI R27 , HIGH ( - 90 )
000764 93ed     +ST X + , R30
000765 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
000766 01de     +MOVW R26 , R28
000767 5aa6     +SUBI R26 , LOW ( - 90 )
000768 4fbf     +SBCI R27 , HIGH ( - 90 )
000769 900d     +LD R0 , X +
00076a 91bc     +LD R27 , X
00076b 2da0     +MOV R26 , R0
                 	__GETW2SX 90
00076c 9614      	ADIW R26,4
00076d 940e 0f43 	CALL __GETD1P
00076f c031      	RJMP _0x200011E
                 _0x2000085:
000770 ff02      	SBRS R16,2
000771 c018      	RJMP _0x2000087
                +
000772 01fe     +MOVW R30 , R28
000773 5ae6     +SUBI R30 , LOW ( - 90 )
000774 4fff     +SBCI R31 , HIGH ( - 90 )
000775 9001     +LD R0 , Z +
000776 81f0     +LD R31 , Z
000777 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000778 9734      	SBIW R30,4
                +
000779 01de     +MOVW R26 , R28
00077a 5aa6     +SUBI R26 , LOW ( - 90 )
00077b 4fbf     +SBCI R27 , HIGH ( - 90 )
00077c 93ed     +ST X + , R30
00077d 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
00077e 01de     +MOVW R26 , R28
00077f 5aa6     +SUBI R26 , LOW ( - 90 )
000780 4fbf     +SBCI R27 , HIGH ( - 90 )
000781 900d     +LD R0 , X +
000782 91bc     +LD R27 , X
000783 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000784 9614      	ADIW R26,4
000785 940e 0f3f 	CALL __GETW1P
000787 940e 0e99 	CALL __CWD1
000789 c017      	RJMP _0x200011E
                 _0x2000087:
                +
00078a 01fe     +MOVW R30 , R28
00078b 5ae6     +SUBI R30 , LOW ( - 90 )
00078c 4fff     +SBCI R31 , HIGH ( - 90 )
00078d 9001     +LD R0 , Z +
00078e 81f0     +LD R31 , Z
00078f 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000790 9734      	SBIW R30,4
                +
000791 01de     +MOVW R26 , R28
000792 5aa6     +SUBI R26 , LOW ( - 90 )
000793 4fbf     +SBCI R27 , HIGH ( - 90 )
000794 93ed     +ST X + , R30
000795 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
000796 01de     +MOVW R26 , R28
000797 5aa6     +SUBI R26 , LOW ( - 90 )
000798 4fbf     +SBCI R27 , HIGH ( - 90 )
000799 900d     +LD R0 , X +
00079a 91bc     +LD R27 , X
00079b 2da0     +MOV R26 , R0
                 	__GETW2SX 90
00079c 9614      	ADIW R26,4
00079d 940e 0f3f 	CALL __GETW1P
00079f 2766      	CLR  R22
0007a0 2777      	CLR  R23
                 _0x200011E:
                +
0007a1 87ea     +STD Y + 10 , R30
0007a2 87fb     +STD Y + 10 + 1 , R31
0007a3 876c     +STD Y + 10 + 2 , R22
0007a4 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0007a5 ff02      	SBRS R16,2
0007a6 c016      	RJMP _0x2000089
0007a7 85ad      	LDD  R26,Y+13
0007a8 23aa      	TST  R26
0007a9 f462      	BRPL _0x200008A
                +
0007aa 85ea     +LDD R30 , Y + 10
0007ab 85fb     +LDD R31 , Y + 10 + 1
0007ac 856c     +LDD R22 , Y + 10 + 2
0007ad 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
0007ae 940e 0e83 	CALL __ANEGD1
                +
0007b0 87ea     +STD Y + 10 , R30
0007b1 87fb     +STD Y + 10 + 1 , R31
0007b2 876c     +STD Y + 10 + 2 , R22
0007b3 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0007b4 e2ed      	LDI  R30,LOW(45)
0007b5 8bed      	STD  Y+21,R30
                 _0x200008A:
0007b6 89ed      	LDD  R30,Y+21
0007b7 30e0      	CPI  R30,0
0007b8 f019      	BREQ _0x200008B
0007b9 5f1f      	SUBI R17,-LOW(1)
0007ba 5f4f      	SUBI R20,-LOW(1)
0007bb c001      	RJMP _0x200008C
                 _0x200008B:
0007bc 7f0b      	ANDI R16,LOW(251)
                 _0x200008C:
                 _0x2000089:
0007bd 2f34      	MOV  R19,R20
                 _0x2000075:
0007be fd00      	SBRC R16,0
0007bf c018      	RJMP _0x200008D
                 _0x200008E:
0007c0 1715      	CP   R17,R21
0007c1 f410      	BRSH _0x2000091
0007c2 1735      	CP   R19,R21
0007c3 f008      	BRLO _0x2000092
                 _0x2000091:
0007c4 c013      	RJMP _0x2000090
                 _0x2000092:
0007c5 ff07      	SBRS R16,7
0007c6 c008      	RJMP _0x2000093
0007c7 ff02      	SBRS R16,2
0007c8 c004      	RJMP _0x2000094
0007c9 7f0b      	ANDI R16,LOW(251)
0007ca 892d      	LDD  R18,Y+21
0007cb 5011      	SUBI R17,LOW(1)
0007cc c001      	RJMP _0x2000095
                 _0x2000094:
0007cd e320      	LDI  R18,LOW(48)
                 _0x2000095:
0007ce c001      	RJMP _0x2000096
                 _0x2000093:
0007cf e220      	LDI  R18,LOW(32)
                 _0x2000096:
0007d0 932a      	ST   -Y,R18
0007d1 81af      	LDD  R26,Y+7
0007d2 85b8      	LDD  R27,Y+7+1
0007d3 85e9      	LDD  R30,Y+9
0007d4 85fa      	LDD  R31,Y+9+1
0007d5 9509      	ICALL
0007d6 5051      	SUBI R21,LOW(1)
0007d7 cfe8      	RJMP _0x200008E
                 _0x2000090:
                 _0x200008D:
                 _0x2000097:
0007d8 1714      	CP   R17,R20
0007d9 f520      	BRSH _0x2000099
0007da 6100      	ORI  R16,LOW(16)
0007db ff02      	SBRS R16,2
0007dc c015      	RJMP _0x200009A
0007dd 7f0b      	ANDI R16,LOW(251)
0007de 89ed      	LDD  R30,Y+21
0007df 93ea      	ST   -Y,R30
                +
0007e0 01de     +MOVW R26 , R28
0007e1 5aa9     +SUBI R26 , LOW ( - 87 )
0007e2 4fbf     +SBCI R27 , HIGH ( - 87 )
0007e3 900d     +LD R0 , X +
0007e4 91bc     +LD R27 , X
0007e5 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
0007e6 01fe     +MOVW R30 , R28
0007e7 5ae7     +SUBI R30 , LOW ( - 89 )
0007e8 4fff     +SBCI R31 , HIGH ( - 89 )
0007e9 9001     +LD R0 , Z +
0007ea 81f0     +LD R31 , Z
0007eb 2de0     +MOV R30 , R0
                 	__GETW1SX 89
0007ec 9509      	ICALL
0007ed 3050      	CPI  R21,0
0007ee f009      	BREQ _0x200009B
0007ef 5051      	SUBI R21,LOW(1)
                 _0x200009B:
0007f0 5011      	SUBI R17,LOW(1)
0007f1 5041      	SUBI R20,LOW(1)
                 _0x200009A:
0007f2 e3e0      	LDI  R30,LOW(48)
0007f3 93ea      	ST   -Y,R30
0007f4 81af      	LDD  R26,Y+7
0007f5 85b8      	LDD  R27,Y+7+1
0007f6 85e9      	LDD  R30,Y+9
0007f7 85fa      	LDD  R31,Y+9+1
0007f8 9509      	ICALL
0007f9 3050      	CPI  R21,0
0007fa f009      	BREQ _0x200009C
0007fb 5051      	SUBI R21,LOW(1)
                 _0x200009C:
0007fc 5041      	SUBI R20,LOW(1)
0007fd cfda      	RJMP _0x2000097
                 _0x2000099:
0007fe 2f31      	MOV  R19,R17
0007ff 89ec      	LDD  R30,Y+20
000800 30e0      	CPI  R30,0
000801 f4d9      	BRNE _0x200009D
                 _0x200009E:
000802 3030      	CPI  R19,0
000803 f0c1      	BREQ _0x20000A0
000804 ff03      	SBRS R16,3
000805 c006      	RJMP _0x20000A1
000806 85ee      	LDD  R30,Y+14
000807 85ff      	LDD  R31,Y+14+1
000808 9125      	LPM  R18,Z+
000809 87ee      	STD  Y+14,R30
00080a 87ff      	STD  Y+14+1,R31
00080b c005      	RJMP _0x20000A2
                 _0x20000A1:
00080c 85ae      	LDD  R26,Y+14
00080d 85bf      	LDD  R27,Y+14+1
00080e 912d      	LD   R18,X+
00080f 87ae      	STD  Y+14,R26
000810 87bf      	STD  Y+14+1,R27
                 _0x20000A2:
000811 932a      	ST   -Y,R18
000812 81af      	LDD  R26,Y+7
000813 85b8      	LDD  R27,Y+7+1
000814 85e9      	LDD  R30,Y+9
000815 85fa      	LDD  R31,Y+9+1
000816 9509      	ICALL
000817 3050      	CPI  R21,0
000818 f009      	BREQ _0x20000A3
000819 5051      	SUBI R21,LOW(1)
                 _0x20000A3:
00081a 5031      	SUBI R19,LOW(1)
00081b cfe6      	RJMP _0x200009E
                 _0x20000A0:
00081c c070      	RJMP _0x20000A4
                 _0x200009D:
                 _0x20000A6:
                +
00081d 89e8     +LDD R30 , Y + 16
00081e 89f9     +LDD R31 , Y + 16 + 1
00081f 896a     +LDD R22 , Y + 16 + 2
000820 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000821 85aa     +LDD R26 , Y + 10
000822 85bb     +LDD R27 , Y + 10 + 1
000823 858c     +LDD R24 , Y + 10 + 2
000824 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000825 940e 0ef0 	CALL __DIVD21U
000827 2f2e      	MOV  R18,R30
000828 302a      	CPI  R18,10
000829 f030      	BRLO _0x20000A8
00082a ff03      	SBRS R16,3
00082b c002      	RJMP _0x20000A9
00082c 5c29      	SUBI R18,-LOW(55)
00082d c001      	RJMP _0x20000AA
                 _0x20000A9:
00082e 5a29      	SUBI R18,-LOW(87)
                 _0x20000AA:
00082f c001      	RJMP _0x20000AB
                 _0x20000A8:
000830 5d20      	SUBI R18,-LOW(48)
                 _0x20000AB:
000831 fd04      	SBRC R16,4
000832 c030      	RJMP _0x20000AD
000833 3321      	CPI  R18,49
000834 f460      	BRSH _0x20000AF
                +
000835 89a8     +LDD R26 , Y + 16
000836 89b9     +LDD R27 , Y + 16 + 1
000837 898a     +LDD R24 , Y + 16 + 2
000838 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
000839 30a1     +CPI R26 , LOW ( 0x1 )
00083a e0e0     +LDI R30 , HIGH ( 0x1 )
00083b 07be     +CPC R27 , R30
00083c e0e0     +LDI R30 , BYTE3 ( 0x1 )
00083d 078e     +CPC R24 , R30
00083e e0e0     +LDI R30 , BYTE4 ( 0x1 )
00083f 079e     +CPC R25 , R30
                 	__CPD2N 0x1
000840 f409      	BRNE _0x20000AE
                 _0x20000AF:
000841 c00b      	RJMP _0x20000B1
                 _0x20000AE:
000842 1743      	CP   R20,R19
000843 f440      	BRSH _0x200011F
000844 1753      	CP   R21,R19
000845 f010      	BRLO _0x20000B4
000846 ff00      	SBRS R16,0
000847 c001      	RJMP _0x20000B5
                 _0x20000B4:
000848 c023      	RJMP _0x20000B3
                 _0x20000B5:
000849 e220      	LDI  R18,LOW(32)
00084a ff07      	SBRS R16,7
00084b c017      	RJMP _0x20000B6
                 _0x200011F:
00084c e320      	LDI  R18,LOW(48)
                 _0x20000B1:
00084d 6100      	ORI  R16,LOW(16)
00084e ff02      	SBRS R16,2
00084f c013      	RJMP _0x20000B7
000850 7f0b      	ANDI R16,LOW(251)
000851 89ed      	LDD  R30,Y+21
000852 93ea      	ST   -Y,R30
                +
000853 01de     +MOVW R26 , R28
000854 5aa9     +SUBI R26 , LOW ( - 87 )
000855 4fbf     +SBCI R27 , HIGH ( - 87 )
000856 900d     +LD R0 , X +
000857 91bc     +LD R27 , X
000858 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
000859 01fe     +MOVW R30 , R28
00085a 5ae7     +SUBI R30 , LOW ( - 89 )
00085b 4fff     +SBCI R31 , HIGH ( - 89 )
00085c 9001     +LD R0 , Z +
00085d 81f0     +LD R31 , Z
00085e 2de0     +MOV R30 , R0
                 	__GETW1SX 89
00085f 9509      	ICALL
000860 3050      	CPI  R21,0
000861 f009      	BREQ _0x20000B8
000862 5051      	SUBI R21,LOW(1)
                 _0x20000B8:
                 _0x20000B7:
                 _0x20000B6:
                 _0x20000AD:
000863 932a      	ST   -Y,R18
000864 81af      	LDD  R26,Y+7
000865 85b8      	LDD  R27,Y+7+1
000866 85e9      	LDD  R30,Y+9
000867 85fa      	LDD  R31,Y+9+1
000868 9509      	ICALL
000869 3050      	CPI  R21,0
00086a f009      	BREQ _0x20000B9
00086b 5051      	SUBI R21,LOW(1)
                 _0x20000B9:
                 _0x20000B3:
00086c 5031      	SUBI R19,LOW(1)
                +
00086d 89e8     +LDD R30 , Y + 16
00086e 89f9     +LDD R31 , Y + 16 + 1
00086f 896a     +LDD R22 , Y + 16 + 2
000870 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000871 85aa     +LDD R26 , Y + 10
000872 85bb     +LDD R27 , Y + 10 + 1
000873 858c     +LDD R24 , Y + 10 + 2
000874 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000875 940e 0f2f 	CALL __MODD21U
                +
000877 87ea     +STD Y + 10 , R30
000878 87fb     +STD Y + 10 + 1 , R31
000879 876c     +STD Y + 10 + 2 , R22
00087a 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00087b 89ec      	LDD  R30,Y+20
                +
00087c 89a8     +LDD R26 , Y + 16
00087d 89b9     +LDD R27 , Y + 16 + 1
00087e 898a     +LDD R24 , Y + 16 + 2
00087f 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
000880 27ff      	CLR  R31
000881 2766      	CLR  R22
000882 2777      	CLR  R23
000883 940e 0ef0 	CALL __DIVD21U
                +
000885 8be8     +STD Y + 16 , R30
000886 8bf9     +STD Y + 16 + 1 , R31
000887 8b6a     +STD Y + 16 + 2 , R22
000888 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000889 940e 0f9d 	CALL __CPD10
00088b f009      	BREQ _0x20000A7
00088c cf90      	RJMP _0x20000A6
                 _0x20000A7:
                 _0x20000A4:
00088d ff00      	SBRS R16,0
00088e c00b      	RJMP _0x20000BA
                 _0x20000BB:
00088f 3050      	CPI  R21,0
000890 f049      	BREQ _0x20000BD
000891 5051      	SUBI R21,LOW(1)
000892 e2e0      	LDI  R30,LOW(32)
000893 93ea      	ST   -Y,R30
000894 81af      	LDD  R26,Y+7
000895 85b8      	LDD  R27,Y+7+1
000896 85e9      	LDD  R30,Y+9
000897 85fa      	LDD  R31,Y+9+1
000898 9509      	ICALL
000899 cff5      	RJMP _0x20000BB
                 _0x20000BD:
                 _0x20000BA:
                 _0x20000BE:
                 _0x200005A:
                 _0x200011D:
00089a e010      	LDI  R17,LOW(0)
                 _0x200003B:
00089b cd39      	RJMP _0x2000036
                 _0x2000038:
00089c 81ae      	LDD  R26,Y+6
00089d 81bf      	LDD  R27,Y+6+1
00089e 940e 0f3f 	CALL __GETW1P
0008a0 940e 0fa8 	CALL __LOADLOCR6
0008a2 96ef      	ADIW R28,63
0008a3 966f      	ADIW R28,31
0008a4 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0008a5 92ff      	PUSH R15
0008a6 2ef8      	MOV  R15,R24
0008a7 9726      	SBIW R28,6
0008a8 940e 0fa3 	CALL __SAVELOCR4
0008aa 01de      	MOVW R26,R28
0008ab 961c      	ADIW R26,12
0008ac 940e 0e76 	CALL __ADDW2R15
0008ae 940e 0f3f 	CALL __GETW1P
0008b0 9730      	SBIW R30,0
0008b1 f419      	BRNE _0x20000BF
0008b2 efef      	LDI  R30,LOW(65535)
0008b3 efff      	LDI  R31,HIGH(65535)
0008b4 c027      	RJMP _0x20C0008
                 _0x20000BF:
0008b5 01de      	MOVW R26,R28
0008b6 9616      	ADIW R26,6
0008b7 940e 0e76 	CALL __ADDW2R15
0008b9 018d      	MOVW R16,R26
0008ba 01de      	MOVW R26,R28
0008bb 961c      	ADIW R26,12
0008bc 940e 0e76 	CALL __ADDW2R15
0008be 940e 0f3f 	CALL __GETW1P
0008c0 83ee      	STD  Y+6,R30
0008c1 83ff      	STD  Y+6+1,R31
0008c2 e0e0      	LDI  R30,LOW(0)
0008c3 87e8      	STD  Y+8,R30
0008c4 87e9      	STD  Y+8+1,R30
0008c5 01de      	MOVW R26,R28
0008c6 961a      	ADIW R26,10
0008c7 940e 0e76 	CALL __ADDW2R15
0008c9 940e 0f3f 	CALL __GETW1P
0008cb 93fa      	ST   -Y,R31
0008cc 93ea      	ST   -Y,R30
0008cd 931a      	ST   -Y,R17
0008ce 930a      	ST   -Y,R16
0008cf e1e5      	LDI  R30,LOW(_put_buff_G100)
0008d0 e0f4      	LDI  R31,HIGH(_put_buff_G100)
0008d1 93fa      	ST   -Y,R31
0008d2 93ea      	ST   -Y,R30
0008d3 01de      	MOVW R26,R28
0008d4 961a      	ADIW R26,10
0008d5 dce2      	RCALL __print_G100
0008d6 019f      	MOVW R18,R30
0008d7 81ae      	LDD  R26,Y+6
0008d8 81bf      	LDD  R27,Y+6+1
0008d9 e0e0      	LDI  R30,LOW(0)
0008da 93ec      	ST   X,R30
0008db 01f9      	MOVW R30,R18
                 _0x20C0008:
0008dc 940e 0faa 	CALL __LOADLOCR4
0008de 962a      	ADIW R28,10
0008df 90ff      	POP  R15
0008e0 9508      	RET
                 ; .FEND
                 _get_buff_G100:
                 ; .FSTART _get_buff_G100
0008e1 93ba      	ST   -Y,R27
0008e2 93aa      	ST   -Y,R26
0008e3 931a      	ST   -Y,R17
0008e4 81a9      	LDD  R26,Y+1
0008e5 81ba      	LDD  R27,Y+1+1
0008e6 e0e0      	LDI  R30,LOW(0)
0008e7 93ec      	ST   X,R30
0008e8 81ab      	LDD  R26,Y+3
0008e9 81bc      	LDD  R27,Y+3+1
0008ea 91ec      	LD   R30,X
0008eb 2f1e      	MOV  R17,R30
0008ec 30e0      	CPI  R30,0
0008ed f019      	BREQ _0x20000C7
0008ee e0e0      	LDI  R30,LOW(0)
0008ef 93ec      	ST   X,R30
0008f0 c019      	RJMP _0x20000C8
                 _0x20000C7:
0008f1 81a9      	LDD  R26,Y+1
0008f2 81ba      	LDD  R27,Y+1+1
0008f3 9611      	ADIW R26,1
0008f4 940e 0f3f 	CALL __GETW1P
0008f6 9730      	SBIW R30,0
0008f7 f089      	BREQ _0x20000C9
0008f8 81e9      	LDD  R30,Y+1
0008f9 81fa      	LDD  R31,Y+1+1
0008fa 81a1      	LDD  R26,Z+1
0008fb 81b2      	LDD  R27,Z+2
0008fc 91ec      	LD   R30,X
0008fd 2f1e      	MOV  R17,R30
0008fe 30e0      	CPI  R30,0
0008ff f041      	BREQ _0x20000CA
000900 81a9      	LDD  R26,Y+1
000901 81ba      	LDD  R27,Y+1+1
000902 9611      	ADIW R26,1
000903 91ed      	LD   R30,X+
000904 91fd      	LD   R31,X+
000905 9631      	ADIW R30,1
000906 93fe      	ST   -X,R31
000907 93ee      	ST   -X,R30
                 _0x20000CA:
000908 c001      	RJMP _0x20000CB
                 _0x20000C9:
000909 e010      	LDI  R17,LOW(0)
                 _0x20000CB:
                 _0x20000C8:
00090a 2fe1      	MOV  R30,R17
00090b 8118      	LDD  R17,Y+0
00090c c1ed      	RJMP _0x20C0004
                 ; .FEND
                 __scanf_G100:
                 ; .FSTART __scanf_G100
00090d 92ff      	PUSH R15
00090e 93ba      	ST   -Y,R27
00090f 93aa      	ST   -Y,R26
000910 9726      	SBIW R28,6
000911 940e 0fa1 	CALL __SAVELOCR6
000913 e0e0      	LDI  R30,LOW(0)
000914 e0f0      	LDI  R31,HIGH(0)
000915 87ea      	STD  Y+10,R30
000916 87fb      	STD  Y+10+1,R31
000917 2f4e      	MOV  R20,R30
                 _0x20000CC:
000918 89ea      	LDD  R30,Y+18
000919 89fb      	LDD  R31,Y+18+1
00091a 9631      	ADIW R30,1
00091b 8bea      	STD  Y+18,R30
00091c 8bfb      	STD  Y+18+1,R31
00091d 9731      	SBIW R30,1
00091e 91e4      	LPM  R30,Z
00091f 2f3e      	MOV  R19,R30
000920 30e0      	CPI  R30,0
000921 f409      	BRNE PC+2
000922 c18f      	RJMP _0x20000CE
000923 2fa3      	MOV  R26,R19
000924 940e 0b39 	CALL _isspace
000926 30e0      	CPI  R30,0
000927 f0f9      	BREQ _0x20000CF
                 _0x20000D0:
000928 b7ed      	IN   R30,SPL
000929 b7fe      	IN   R31,SPH
00092a 93fa      	ST   -Y,R31
00092b 93ea      	ST   -Y,R30
00092c 934f      	PUSH R20
00092d 85ae      	LDD  R26,Y+14
00092e 85bf      	LDD  R27,Y+14+1
00092f 89e8      	LDD  R30,Y+16
000930 89f9      	LDD  R31,Y+16+1
000931 9509      	ICALL
000932 914f      	POP  R20
000933 2f3e      	MOV  R19,R30
000934 30e0      	CPI  R30,0
000935 f029      	BREQ _0x20000D3
000936 2fa3      	MOV  R26,R19
000937 940e 0b39 	CALL _isspace
000939 30e0      	CPI  R30,0
00093a f409      	BRNE _0x20000D4
                 _0x20000D3:
00093b c009      	RJMP _0x20000D2
                 _0x20000D4:
00093c 85ac      	LDD  R26,Y+12
00093d 85bd      	LDD  R27,Y+12+1
00093e 91ac      	LD   R26,X
00093f 30a0      	CPI  R26,0
000940 f41c      	BRGE _0x20000D5
000941 efef      	LDI  R30,LOW(65535)
000942 efff      	LDI  R31,HIGH(65535)
000943 c170      	RJMP _0x20C0006
                 _0x20000D5:
000944 cfe3      	RJMP _0x20000D0
                 _0x20000D2:
000945 2f43      	MOV  R20,R19
000946 c16a      	RJMP _0x20000D6
                 _0x20000CF:
000947 3235      	CPI  R19,37
000948 f009      	BREQ PC+2
000949 c14a      	RJMP _0x20000D7
00094a e050      	LDI  R21,LOW(0)
                 _0x20000D8:
00094b 89ea      	LDD  R30,Y+18
00094c 89fb      	LDD  R31,Y+18+1
00094d 9135      	LPM  R19,Z+
00094e 8bea      	STD  Y+18,R30
00094f 8bfb      	STD  Y+18+1,R31
000950 3330      	CPI  R19,48
000951 f010      	BRLO _0x20000DC
000952 333a      	CPI  R19,58
000953 f008      	BRLO _0x20000DB
                 _0x20000DC:
000954 c007      	RJMP _0x20000DA
                 _0x20000DB:
000955 e0aa      	LDI  R26,LOW(10)
000956 9f5a      	MUL  R21,R26
000957 2d50      	MOV  R21,R0
000958 2fe3      	MOV  R30,R19
000959 53e0      	SUBI R30,LOW(48)
00095a 0f5e      	ADD  R21,R30
00095b cfef      	RJMP _0x20000D8
                 _0x20000DA:
00095c 3030      	CPI  R19,0
00095d f409      	BRNE _0x20000DE
00095e c153      	RJMP _0x20000CE
                 _0x20000DE:
                 _0x20000DF:
00095f b7ed      	IN   R30,SPL
000960 b7fe      	IN   R31,SPH
000961 93fa      	ST   -Y,R31
000962 93ea      	ST   -Y,R30
000963 934f      	PUSH R20
000964 85ae      	LDD  R26,Y+14
000965 85bf      	LDD  R27,Y+14+1
000966 89e8      	LDD  R30,Y+16
000967 89f9      	LDD  R31,Y+16+1
000968 9509      	ICALL
000969 914f      	POP  R20
00096a 2f2e      	MOV  R18,R30
00096b 2fae      	MOV  R26,R30
00096c 940e 0b39 	CALL _isspace
00096e 30e0      	CPI  R30,0
00096f f049      	BREQ _0x20000E1
000970 85ac      	LDD  R26,Y+12
000971 85bd      	LDD  R27,Y+12+1
000972 91ac      	LD   R26,X
000973 30a0      	CPI  R26,0
000974 f41c      	BRGE _0x20000E2
000975 efef      	LDI  R30,LOW(65535)
000976 efff      	LDI  R31,HIGH(65535)
000977 c13c      	RJMP _0x20C0006
                 _0x20000E2:
000978 cfe6      	RJMP _0x20000DF
                 _0x20000E1:
000979 3020      	CPI  R18,0
00097a f409      	BRNE _0x20000E3
00097b c12d      	RJMP _0x20000E4
                 _0x20000E3:
00097c 2f42      	MOV  R20,R18
00097d 3050      	CPI  R21,0
00097e f409      	BRNE _0x20000E5
00097f ef5f      	LDI  R21,LOW(255)
                 _0x20000E5:
000980 94e8      	CLT
000981 f8f3      	BLD  R15,3
000982 2fe3      	MOV  R30,R19
000983 36e3      	CPI  R30,LOW(0x63)
000984 f501      	BRNE _0x20000E9
000985 89e8      	LDD  R30,Y+16
000986 89f9      	LDD  R31,Y+16+1
000987 9734      	SBIW R30,4
000988 8be8      	STD  Y+16,R30
000989 8bf9      	STD  Y+16+1,R31
00098a 89a8      	LDD  R26,Y+16
00098b 89b9      	LDD  R27,Y+16+1
00098c 9614      	ADIW R26,4
00098d 910d      	LD   R16,X+
00098e 911c      	LD   R17,X
00098f b7ed      	IN   R30,SPL
000990 b7fe      	IN   R31,SPH
000991 93fa      	ST   -Y,R31
000992 93ea      	ST   -Y,R30
000993 934f      	PUSH R20
000994 85ae      	LDD  R26,Y+14
000995 85bf      	LDD  R27,Y+14+1
000996 89e8      	LDD  R30,Y+16
000997 89f9      	LDD  R31,Y+16+1
000998 9509      	ICALL
000999 914f      	POP  R20
00099a 01d8      	MOVW R26,R16
00099b 93ec      	ST   X,R30
00099c 85ac      	LDD  R26,Y+12
00099d 85bd      	LDD  R27,Y+12+1
00099e 91ac      	LD   R26,X
00099f 30a0      	CPI  R26,0
0009a0 f41c      	BRGE _0x20000EA
0009a1 efef      	LDI  R30,LOW(65535)
0009a2 efff      	LDI  R31,HIGH(65535)
0009a3 c110      	RJMP _0x20C0006
                 _0x20000EA:
0009a4 c0e9      	RJMP _0x20000E8
                 _0x20000E9:
0009a5 37e3      	CPI  R30,LOW(0x73)
0009a6 f5b9      	BRNE _0x20000EB
0009a7 89e8      	LDD  R30,Y+16
0009a8 89f9      	LDD  R31,Y+16+1
0009a9 9734      	SBIW R30,4
0009aa 8be8      	STD  Y+16,R30
0009ab 8bf9      	STD  Y+16+1,R31
0009ac 89a8      	LDD  R26,Y+16
0009ad 89b9      	LDD  R27,Y+16+1
0009ae 9614      	ADIW R26,4
0009af 910d      	LD   R16,X+
0009b0 911c      	LD   R17,X
                 _0x20000EC:
0009b1 2fe5      	MOV  R30,R21
0009b2 5051      	SUBI R21,1
0009b3 30e0      	CPI  R30,0
0009b4 f129      	BREQ _0x20000EE
0009b5 b7ed      	IN   R30,SPL
0009b6 b7fe      	IN   R31,SPH
0009b7 93fa      	ST   -Y,R31
0009b8 93ea      	ST   -Y,R30
0009b9 934f      	PUSH R20
0009ba 85ae      	LDD  R26,Y+14
0009bb 85bf      	LDD  R27,Y+14+1
0009bc 89e8      	LDD  R30,Y+16
0009bd 89f9      	LDD  R31,Y+16+1
0009be 9509      	ICALL
0009bf 914f      	POP  R20
0009c0 2f3e      	MOV  R19,R30
0009c1 30e0      	CPI  R30,0
0009c2 f029      	BREQ _0x20000F0
0009c3 2fa3      	MOV  R26,R19
0009c4 940e 0b39 	CALL _isspace
0009c6 30e0      	CPI  R30,0
0009c7 f049      	BREQ _0x20000EF
                 _0x20000F0:
0009c8 85ac      	LDD  R26,Y+12
0009c9 85bd      	LDD  R27,Y+12+1
0009ca 91ac      	LD   R26,X
0009cb 30a0      	CPI  R26,0
0009cc f41c      	BRGE _0x20000F2
0009cd efef      	LDI  R30,LOW(65535)
0009ce efff      	LDI  R31,HIGH(65535)
0009cf c0e4      	RJMP _0x20C0006
                 _0x20000F2:
0009d0 c009      	RJMP _0x20000EE
                 _0x20000EF:
0009d1 931f      	PUSH R17
0009d2 930f      	PUSH R16
                +
0009d3 5f0f     +SUBI R16 , LOW ( - 1 )
0009d4 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0009d5 2fe3      	MOV  R30,R19
0009d6 91af      	POP  R26
0009d7 91bf      	POP  R27
0009d8 93ec      	ST   X,R30
0009d9 cfd7      	RJMP _0x20000EC
                 _0x20000EE:
0009da 01d8      	MOVW R26,R16
0009db e0e0      	LDI  R30,LOW(0)
0009dc 93ec      	ST   X,R30
0009dd c0b0      	RJMP _0x20000E8
                 _0x20000EB:
0009de 36ec      	CPI  R30,LOW(0x6C)
0009df f439      	BRNE _0x20000F4
0009e0 9468      	SET
0009e1 f8f3      	BLD  R15,3
0009e2 89ea      	LDD  R30,Y+18
0009e3 89fb      	LDD  R31,Y+18+1
0009e4 9135      	LPM  R19,Z+
0009e5 8bea      	STD  Y+18,R30
0009e6 8bfb      	STD  Y+18+1,R31
                 _0x20000F4:
0009e7 9468      	SET
0009e8 f8f1      	BLD  R15,1
0009e9 94e8      	CLT
0009ea f8f2      	BLD  R15,2
0009eb 2fe3      	MOV  R30,R19
0009ec 36e4      	CPI  R30,LOW(0x64)
0009ed f011      	BREQ _0x20000F9
0009ee 36e9      	CPI  R30,LOW(0x69)
0009ef f419      	BRNE _0x20000FA
                 _0x20000F9:
0009f0 94e8      	CLT
0009f1 f8f1      	BLD  R15,1
0009f2 c002      	RJMP _0x20000FB
                 _0x20000FA:
0009f3 37e5      	CPI  R30,LOW(0x75)
0009f4 f411      	BRNE _0x20000FC
                 _0x20000FB:
0009f5 e02a      	LDI  R18,LOW(10)
0009f6 c008      	RJMP _0x20000F7
                 _0x20000FC:
0009f7 37e8      	CPI  R30,LOW(0x78)
0009f8 f411      	BRNE _0x20000FD
0009f9 e120      	LDI  R18,LOW(16)
0009fa c004      	RJMP _0x20000F7
                 _0x20000FD:
0009fb 32e5      	CPI  R30,LOW(0x25)
0009fc f409      	BRNE _0x2000100
0009fd c096      	RJMP _0x20000FF
                 _0x2000100:
0009fe c0b3      	RJMP _0x20C0007
                 _0x20000F7:
0009ff e0e0      	LDI  R30,LOW(0)
                +
000a00 83ee     +STD Y + 6 , R30
000a01 83ef     +STD Y + 6 + 1 , R30
000a02 87e8     +STD Y + 6 + 2 , R30
000a03 87e9     +STD Y + 6 + 3 , R30
                 	__CLRD1S 6
000a04 9468      	SET
000a05 f8f0      	BLD  R15,0
                 _0x2000101:
000a06 2fe5      	MOV  R30,R21
000a07 5051      	SUBI R21,1
000a08 30e0      	CPI  R30,0
000a09 f409      	BRNE PC+2
000a0a c054      	RJMP _0x2000103
000a0b b7ed      	IN   R30,SPL
000a0c b7fe      	IN   R31,SPH
000a0d 93fa      	ST   -Y,R31
000a0e 93ea      	ST   -Y,R30
000a0f 934f      	PUSH R20
000a10 85ae      	LDD  R26,Y+14
000a11 85bf      	LDD  R27,Y+14+1
000a12 89e8      	LDD  R30,Y+16
000a13 89f9      	LDD  R31,Y+16+1
000a14 9509      	ICALL
000a15 914f      	POP  R20
000a16 2f3e      	MOV  R19,R30
000a17 32e1      	CPI  R30,LOW(0x21)
000a18 f448      	BRSH _0x2000104
000a19 85ac      	LDD  R26,Y+12
000a1a 85bd      	LDD  R27,Y+12+1
000a1b 91ac      	LD   R26,X
000a1c 30a0      	CPI  R26,0
000a1d f41c      	BRGE _0x2000105
000a1e efef      	LDI  R30,LOW(65535)
000a1f efff      	LDI  R31,HIGH(65535)
000a20 c093      	RJMP _0x20C0006
                 _0x2000105:
000a21 c017      	RJMP _0x2000106
                 _0x2000104:
000a22 fcf1      	SBRC R15,1
000a23 c008      	RJMP _0x2000107
000a24 9468      	SET
000a25 f8f1      	BLD  R15,1
000a26 323d      	CPI  R19,45
000a27 f411      	BRNE _0x2000108
000a28 f8f2      	BLD  R15,2
000a29 cfdc      	RJMP _0x2000101
                 _0x2000108:
000a2a 323b      	CPI  R19,43
000a2b f2d1      	BREQ _0x2000101
                 _0x2000107:
000a2c 3120      	CPI  R18,16
000a2d f431      	BRNE _0x200010A
000a2e 2fa3      	MOV  R26,R19
000a2f 940e 0b44 	CALL _isxdigit
000a31 30e0      	CPI  R30,0
000a32 f031      	BREQ _0x2000106
000a33 c009      	RJMP _0x200010C
                 _0x200010A:
000a34 2fa3      	MOV  R26,R19
000a35 940e 0b30 	CALL _isdigit
000a37 30e0      	CPI  R30,0
000a38 f421      	BRNE _0x200010D
                 _0x2000106:
000a39 fcf0      	SBRC R15,0
000a3a c077      	RJMP _0x200010F
000a3b 2f43      	MOV  R20,R19
000a3c c022      	RJMP _0x2000103
                 _0x200010D:
                 _0x200010C:
000a3d 3631      	CPI  R19,97
000a3e f010      	BRLO _0x2000110
000a3f 5537      	SUBI R19,LOW(87)
000a40 c005      	RJMP _0x2000111
                 _0x2000110:
000a41 3431      	CPI  R19,65
000a42 f010      	BRLO _0x2000112
000a43 5337      	SUBI R19,LOW(55)
000a44 c001      	RJMP _0x2000113
                 _0x2000112:
000a45 5330      	SUBI R19,LOW(48)
                 _0x2000113:
                 _0x2000111:
000a46 2fe2      	MOV  R30,R18
                +
000a47 81ae     +LDD R26 , Y + 6
000a48 81bf     +LDD R27 , Y + 6 + 1
000a49 8588     +LDD R24 , Y + 6 + 2
000a4a 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
000a4b 27ff      	CLR  R31
000a4c 2766      	CLR  R22
000a4d 2777      	CLR  R23
000a4e 940e 0eaa 	CALL __MULD12U
000a50 01df      	MOVW R26,R30
000a51 01cb      	MOVW R24,R22
000a52 2fe3      	MOV  R30,R19
000a53 27ff      	CLR  R31
000a54 2766      	CLR  R22
000a55 2777      	CLR  R23
000a56 940e 0e7a 	CALL __ADDD12
                +
000a58 83ee     +STD Y + 6 , R30
000a59 83ff     +STD Y + 6 + 1 , R31
000a5a 8768     +STD Y + 6 + 2 , R22
000a5b 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
000a5c 94e8      	CLT
000a5d f8f0      	BLD  R15,0
000a5e cfa7      	RJMP _0x2000101
                 _0x2000103:
000a5f fef2      	SBRS R15,2
000a60 c00a      	RJMP _0x2000114
                +
000a61 81ee     +LDD R30 , Y + 6
000a62 81ff     +LDD R31 , Y + 6 + 1
000a63 8568     +LDD R22 , Y + 6 + 2
000a64 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
000a65 940e 0e83 	CALL __ANEGD1
                +
000a67 83ee     +STD Y + 6 , R30
000a68 83ff     +STD Y + 6 + 1 , R31
000a69 8768     +STD Y + 6 + 2 , R22
000a6a 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
                 _0x2000114:
000a6b fef3      	SBRS R15,3
000a6c c012      	RJMP _0x2000115
000a6d 89e8      	LDD  R30,Y+16
000a6e 89f9      	LDD  R31,Y+16+1
000a6f 9734      	SBIW R30,4
000a70 8be8      	STD  Y+16,R30
000a71 8bf9      	STD  Y+16+1,R31
000a72 89a8      	LDD  R26,Y+16
000a73 89b9      	LDD  R27,Y+16+1
000a74 9614      	ADIW R26,4
000a75 910d      	LD   R16,X+
000a76 911c      	LD   R17,X
                +
000a77 81ee     +LDD R30 , Y + 6
000a78 81ff     +LDD R31 , Y + 6 + 1
000a79 8568     +LDD R22 , Y + 6 + 2
000a7a 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
000a7b 01d8      	MOVW R26,R16
000a7c 940e 0f49 	CALL __PUTDP1
000a7e c00f      	RJMP _0x2000116
                 _0x2000115:
000a7f 89e8      	LDD  R30,Y+16
000a80 89f9      	LDD  R31,Y+16+1
000a81 9734      	SBIW R30,4
000a82 8be8      	STD  Y+16,R30
000a83 8bf9      	STD  Y+16+1,R31
000a84 89a8      	LDD  R26,Y+16
000a85 89b9      	LDD  R27,Y+16+1
000a86 9614      	ADIW R26,4
000a87 910d      	LD   R16,X+
000a88 911c      	LD   R17,X
000a89 81ee      	LDD  R30,Y+6
000a8a 81ff      	LDD  R31,Y+6+1
000a8b 01d8      	MOVW R26,R16
000a8c 93ed      	ST   X+,R30
000a8d 93fc      	ST   X,R31
                 _0x2000116:
                 _0x20000E8:
000a8e 85ea      	LDD  R30,Y+10
000a8f 85fb      	LDD  R31,Y+10+1
000a90 9631      	ADIW R30,1
000a91 87ea      	STD  Y+10,R30
000a92 87fb      	STD  Y+10+1,R31
000a93 c01d      	RJMP _0x2000117
                 _0x20000D7:
                 _0x20000FF:
000a94 b7ed      	IN   R30,SPL
000a95 b7fe      	IN   R31,SPH
000a96 93fa      	ST   -Y,R31
000a97 93ea      	ST   -Y,R30
000a98 934f      	PUSH R20
000a99 85ae      	LDD  R26,Y+14
000a9a 85bf      	LDD  R27,Y+14+1
000a9b 89e8      	LDD  R30,Y+16
000a9c 89f9      	LDD  R31,Y+16+1
000a9d 9509      	ICALL
000a9e 914f      	POP  R20
000a9f 17e3      	CP   R30,R19
000aa0 f081      	BREQ _0x2000118
000aa1 85ac      	LDD  R26,Y+12
000aa2 85bd      	LDD  R27,Y+12+1
000aa3 91ac      	LD   R26,X
000aa4 30a0      	CPI  R26,0
000aa5 f41c      	BRGE _0x2000119
000aa6 efef      	LDI  R30,LOW(65535)
000aa7 efff      	LDI  R31,HIGH(65535)
000aa8 c00b      	RJMP _0x20C0006
                 _0x2000119:
                 _0x20000E4:
000aa9 85ea      	LDD  R30,Y+10
000aaa 85fb      	LDD  R31,Y+10+1
000aab 9730      	SBIW R30,0
000aac f419      	BRNE _0x200011A
000aad efef      	LDI  R30,LOW(65535)
000aae efff      	LDI  R31,HIGH(65535)
000aaf c004      	RJMP _0x20C0006
                 _0x200011A:
000ab0 c001      	RJMP _0x20000CE
                 _0x2000118:
                 _0x2000117:
                 _0x20000D6:
000ab1 ce66      	RJMP _0x20000CC
                 _0x20000CE:
                 _0x200010F:
                 _0x20C0007:
000ab2 85ea      	LDD  R30,Y+10
000ab3 85fb      	LDD  R31,Y+10+1
                 _0x20C0006:
000ab4 940e 0fa8 	CALL __LOADLOCR6
000ab6 9664      	ADIW R28,20
000ab7 90ff      	POP  R15
000ab8 9508      	RET
                 ; .FEND
                 _sscanf:
                 ; .FSTART _sscanf
000ab9 92ff      	PUSH R15
000aba 2ef8      	MOV  R15,R24
000abb 9723      	SBIW R28,3
000abc 931a      	ST   -Y,R17
000abd 930a      	ST   -Y,R16
000abe 01de      	MOVW R26,R28
000abf 9617      	ADIW R26,7
000ac0 940e 0e76 	CALL __ADDW2R15
000ac2 940e 0f3f 	CALL __GETW1P
000ac4 9730      	SBIW R30,0
000ac5 f419      	BRNE _0x200011B
000ac6 efef      	LDI  R30,LOW(65535)
000ac7 efff      	LDI  R31,HIGH(65535)
000ac8 c01e      	RJMP _0x20C0005
                 _0x200011B:
000ac9 01de      	MOVW R26,R28
000aca 9611      	ADIW R26,1
000acb 940e 0e76 	CALL __ADDW2R15
000acd 018d      	MOVW R16,R26
000ace 01de      	MOVW R26,R28
000acf 9617      	ADIW R26,7
000ad0 940e 0e76 	CALL __ADDW2R15
000ad2 940e 0f3f 	CALL __GETW1P
000ad4 83eb      	STD  Y+3,R30
000ad5 83fc      	STD  Y+3+1,R31
000ad6 01de      	MOVW R26,R28
000ad7 9615      	ADIW R26,5
000ad8 940e 0e76 	CALL __ADDW2R15
000ada 940e 0f3f 	CALL __GETW1P
000adc 93fa      	ST   -Y,R31
000add 93ea      	ST   -Y,R30
000ade 931a      	ST   -Y,R17
000adf 930a      	ST   -Y,R16
000ae0 eee1      	LDI  R30,LOW(_get_buff_G100)
000ae1 e0f8      	LDI  R31,HIGH(_get_buff_G100)
000ae2 93fa      	ST   -Y,R31
000ae3 93ea      	ST   -Y,R30
000ae4 01de      	MOVW R26,R28
000ae5 9618      	ADIW R26,8
000ae6 de26      	RCALL __scanf_G100
                 _0x20C0005:
000ae7 8119      	LDD  R17,Y+1
000ae8 8108      	LDD  R16,Y+0
000ae9 9625      	ADIW R28,5
000aea 90ff      	POP  R15
000aeb 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
000aec 93ba      	ST   -Y,R27
000aed 93aa      	ST   -Y,R26
000aee 81b9          ldd  r27,y+1
000aef 81a8          ld   r26,y
000af0 9610          adiw r26,0
000af1 f031          breq memset1
000af2 81fc          ldd  r31,y+4
000af3 81eb          ldd  r30,y+3
000af4 816a          ldd  r22,y+2
                 memset0:
000af5 9361          st   z+,r22
000af6 9711          sbiw r26,1
000af7 f7e9          brne memset0
                 memset1:
000af8 81eb          ldd  r30,y+3
000af9 81fc          ldd  r31,y+4
                 _0x20C0004:
000afa 9625      	ADIW R28,5
000afb 9508      	RET
                 ; .FEND
                 _strcpyf:
                 ; .FSTART _strcpyf
000afc 93ba      	ST   -Y,R27
000afd 93aa      	ST   -Y,R26
000afe 91e9          ld   r30,y+
000aff 91f9          ld   r31,y+
000b00 91a9          ld   r26,y+
000b01 91b9          ld   r27,y+
000b02 01cd          movw r24,r26
                 strcpyf0:
000b03 9005      	lpm  r0,z+
000b04 920d          st   x+,r0
000b05 2000          tst  r0
000b06 f7e1          brne strcpyf0
000b07 01fc          movw r30,r24
000b08 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
000b09 93ba      	ST   -Y,R27
000b0a 93aa      	ST   -Y,R26
000b0b 91a9          ld   r26,y+
000b0c 91b9          ld   r27,y+
000b0d 27ee          clr  r30
000b0e 27ff          clr  r31
                 strlen0:
000b0f 916d          ld   r22,x+
000b10 2366          tst  r22
000b11 f011          breq strlen1
000b12 9631          adiw r30,1
000b13 cffb          rjmp strlen0
                 strlen1:
000b14 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000b15 93ba      	ST   -Y,R27
000b16 93aa      	ST   -Y,R26
000b17 27aa          clr  r26
000b18 27bb          clr  r27
000b19 91e9          ld   r30,y+
000b1a 91f9          ld   r31,y+
                 strlenf0:
000b1b 9005      	lpm  r0,z+
000b1c 2000          tst  r0
000b1d f011          breq strlenf1
000b1e 9611          adiw r26,1
000b1f cffb          rjmp strlenf0
                 strlenf1:
000b20 01fd          movw r30,r26
000b21 9508          ret
                 ; .FEND
                 _strrchr:
                 ; .FSTART _strrchr
000b22 93aa      	ST   -Y,R26
000b23 9169          ld   r22,y+
000b24 91a9          ld   r26,y+
000b25 91b9          ld   r27,y+
000b26 27ee          clr  r30
000b27 27ff          clr  r31
                 strrchr0:
000b28 917c          ld   r23,x
000b29 1767          cp   r22,r23
000b2a f409          brne strrchr1
000b2b 01fd          movw r30,r26
                 strrchr1:
000b2c 9611          adiw r26,1
000b2d 2377          tst  r23
000b2e f7c9          brne strrchr0
000b2f 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _isdigit:
                 ; .FSTART _isdigit
000b30 93aa      	ST   -Y,R26
000b31 e0e1          ldi  r30,1
000b32 91f9          ld   r31,y+
000b33 33f0          cpi  r31,'0'
000b34 f010          brlo isdigit0
000b35 33fa          cpi  r31,'9'+1
000b36 f008          brlo isdigit1
                 isdigit0:
000b37 27ee          clr  r30
                 isdigit1:
000b38 9508          ret
                 ; .FEND
                 _isspace:
                 ; .FSTART _isspace
000b39 93aa      	ST   -Y,R26
000b3a e0e1          ldi  r30,1
000b3b 91f9          ld   r31,y+
000b3c 32f0          cpi  r31,' '
000b3d f029          breq isspace1
000b3e 30f9          cpi  r31,9
000b3f f010          brlo isspace0
000b40 30fe          cpi  r31,13+1
000b41 f008          brlo isspace1
                 isspace0:
000b42 27ee          clr  r30
                 isspace1:
000b43 9508          ret
                 ; .FEND
                 _isxdigit:
                 ; .FSTART _isxdigit
000b44 93aa      	ST   -Y,R26
000b45 e0e1          ldi  r30,1
000b46 91f9          ld   r31,y+
000b47 53f0          subi r31,0x30
000b48 f040          brcs isxdigit0
000b49 30fa          cpi  r31,10
000b4a f038          brcs isxdigit1
000b4b 75ff          andi r31,0x5f
000b4c 50f7          subi r31,7
000b4d 30fa          cpi  r31,10
000b4e f010          brcs isxdigit0
000b4f 31f0          cpi  r31,16
000b50 f008          brcs isxdigit1
                 isxdigit0:
000b51 27ee          clr  r30
                 isxdigit1:
000b52 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
000b53 940e 0f62 	CALL __PUTPARD2
000b55 817b         ldd  r23,y+3
000b56 816a         ldd  r22,y+2
000b57 81f9         ldd  r31,y+1
000b58 81e8         ld   r30,y
000b59 fb77         bst  r23,7
000b5a 0f77         lsl  r23
000b5b fd67         sbrc r22,7
000b5c 6071         sbr  r23,1
000b5d 2f97         mov  r25,r23
000b5e 579e         subi r25,0x7e
000b5f f081         breq __ftrunc0
000b60 f078         brcs __ftrunc0
000b61 3198         cpi  r25,24
000b62 f490         brsh __ftrunc1
000b63 27aa         clr  r26
000b64 27bb         clr  r27
000b65 2788         clr  r24
                 __ftrunc2:
000b66 9408         sec
000b67 9587         ror  r24
000b68 95b7         ror  r27
000b69 95a7         ror  r26
000b6a 959a         dec  r25
000b6b f7d1         brne __ftrunc2
000b6c 23ea         and  r30,r26
000b6d 23fb         and  r31,r27
000b6e 2368         and  r22,r24
000b6f c005         rjmp __ftrunc1
                 __ftrunc0:
000b70 94e8         clt
000b71 2777         clr  r23
000b72 27ee         clr  r30
000b73 27ff         clr  r31
000b74 2766         clr  r22
                 __ftrunc1:
000b75 776f         cbr  r22,0x80
000b76 9576         lsr  r23
000b77 f408         brcc __ftrunc3
000b78 6860         sbr  r22,0x80
                 __ftrunc3:
000b79 f977         bld  r23,7
000b7a 91a9         ld   r26,y+
000b7b 91b9         ld   r27,y+
000b7c 9189         ld   r24,y+
000b7d 9199         ld   r25,y+
000b7e 17ea         cp   r30,r26
000b7f 07fb         cpc  r31,r27
000b80 0768         cpc  r22,r24
000b81 0779         cpc  r23,r25
000b82 fb97         bst  r25,7
000b83 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
000b84 940e 0f62 	CALL __PUTPARD2
000b86 940e 0f53 	CALL __GETD2S0
000b88 940e 0b53 	CALL _ftrunc
000b8a 940e 0f58 	CALL __PUTD1S0
000b8c f419          brne __floor1
                 __floor0:
000b8d 940e 0f4e 	CALL __GETD1S0
000b8f c009      	RJMP _0x20C0003
                 __floor1:
000b90 f7e6          brtc __floor0
000b91 940e 0f4e 	CALL __GETD1S0
                +
000b93 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000b94 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000b95 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000b96 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000b97 940e 0d6c 	CALL __SUBF12
                 _0x20C0003:
000b99 9624      	ADIW R28,4
000b9a 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
000b9b 93ba      	ST   -Y,R27
000b9c 93aa      	ST   -Y,R26
000b9d 9724      	SBIW R28,4
000b9e e0e0      	LDI  R30,LOW(0)
000b9f 83e8      	ST   Y,R30
000ba0 83e9      	STD  Y+1,R30
000ba1 83ea      	STD  Y+2,R30
000ba2 e3ef      	LDI  R30,LOW(63)
000ba3 83eb      	STD  Y+3,R30
000ba4 931a      	ST   -Y,R17
000ba5 930a      	ST   -Y,R16
000ba6 85eb      	LDD  R30,Y+11
000ba7 85fc      	LDD  R31,Y+11+1
000ba8 3fef      	CPI  R30,LOW(0xFFFF)
000ba9 efaf      	LDI  R26,HIGH(0xFFFF)
000baa 07fa      	CPC  R31,R26
000bab f449      	BRNE _0x20A000D
000bac 81ee      	LDD  R30,Y+6
000bad 81ff      	LDD  R31,Y+6+1
000bae 93fa      	ST   -Y,R31
000baf 93ea      	ST   -Y,R30
                +
000bb0 ebae     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 0 ) )
000bb1 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 0 ) )
                 	__POINTW2FN _0x20A0000,0
000bb2 940e 0afc 	CALL _strcpyf
000bb4 c10a      	RJMP _0x20C0002
                 _0x20A000D:
000bb5 3fef      	CPI  R30,LOW(0x7FFF)
000bb6 e7af      	LDI  R26,HIGH(0x7FFF)
000bb7 07fa      	CPC  R31,R26
000bb8 f449      	BRNE _0x20A000C
000bb9 81ee      	LDD  R30,Y+6
000bba 81ff      	LDD  R31,Y+6+1
000bbb 93fa      	ST   -Y,R31
000bbc 93ea      	ST   -Y,R30
                +
000bbd ebaf     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 1 ) )
000bbe e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 1 ) )
                 	__POINTW2FN _0x20A0000,1
000bbf 940e 0afc 	CALL _strcpyf
000bc1 c0fd      	RJMP _0x20C0002
                 _0x20A000C:
000bc2 85ac      	LDD  R26,Y+12
000bc3 23aa      	TST  R26
000bc4 f492      	BRPL _0x20A000F
                +
000bc5 85e9     +LDD R30 , Y + 9
000bc6 85fa     +LDD R31 , Y + 9 + 1
000bc7 856b     +LDD R22 , Y + 9 + 2
000bc8 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000bc9 940e 0ccd 	CALL __ANEGF1
                +
000bcb 87e9     +STD Y + 9 , R30
000bcc 87fa     +STD Y + 9 + 1 , R31
000bcd 876b     +STD Y + 9 + 2 , R22
000bce 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000bcf 81ae      	LDD  R26,Y+6
000bd0 81bf      	LDD  R27,Y+6+1
000bd1 9611      	ADIW R26,1
000bd2 83ae      	STD  Y+6,R26
000bd3 83bf      	STD  Y+6+1,R27
000bd4 9711      	SBIW R26,1
000bd5 e2ed      	LDI  R30,LOW(45)
000bd6 93ec      	ST   X,R30
                 _0x20A000F:
000bd7 85a8      	LDD  R26,Y+8
000bd8 30a7      	CPI  R26,LOW(0x7)
000bd9 f010      	BRLO _0x20A0010
000bda e0e6      	LDI  R30,LOW(6)
000bdb 87e8      	STD  Y+8,R30
                 _0x20A0010:
000bdc 8518      	LDD  R17,Y+8
                 _0x20A0011:
000bdd 2fe1      	MOV  R30,R17
000bde 5011      	SUBI R17,1
000bdf 30e0      	CPI  R30,0
000be0 f079      	BREQ _0x20A0013
                +
000be1 81aa     +LDD R26 , Y + 2
000be2 81bb     +LDD R27 , Y + 2 + 1
000be3 818c     +LDD R24 , Y + 2 + 2
000be4 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
                +
000be5 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000be6 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000be7 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000be8 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000be9 940e 0dc3 	CALL __MULF12
                +
000beb 83ea     +STD Y + 2 , R30
000bec 83fb     +STD Y + 2 + 1 , R31
000bed 836c     +STD Y + 2 + 2 , R22
000bee 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000bef cfed      	RJMP _0x20A0011
                 _0x20A0013:
                +
000bf0 81ea     +LDD R30 , Y + 2
000bf1 81fb     +LDD R31 , Y + 2 + 1
000bf2 816c     +LDD R22 , Y + 2 + 2
000bf3 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000bf4 85a9     +LDD R26 , Y + 9
000bf5 85ba     +LDD R27 , Y + 9 + 1
000bf6 858b     +LDD R24 , Y + 9 + 2
000bf7 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000bf8 940e 0d73 	CALL __ADDF12
                +
000bfa 87e9     +STD Y + 9 , R30
000bfb 87fa     +STD Y + 9 + 1 , R31
000bfc 876b     +STD Y + 9 + 2 , R22
000bfd 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000bfe e010      	LDI  R17,LOW(0)
                +
000bff e0e0     +LDI R30 , LOW ( 0x3F800000 )
000c00 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000c01 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000c02 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
                +
000c03 83ea     +STD Y + 2 , R30
000c04 83fb     +STD Y + 2 + 1 , R31
000c05 836c     +STD Y + 2 + 2 , R22
000c06 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
                 _0x20A0014:
                +
000c07 81ea     +LDD R30 , Y + 2
000c08 81fb     +LDD R31 , Y + 2 + 1
000c09 816c     +LDD R22 , Y + 2 + 2
000c0a 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000c0b 85a9     +LDD R26 , Y + 9
000c0c 85ba     +LDD R27 , Y + 9 + 1
000c0d 858b     +LDD R24 , Y + 9 + 2
000c0e 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000c0f 940e 0e56 	CALL __CMPF12
000c11 f0d8      	BRLO _0x20A0016
                +
000c12 81aa     +LDD R26 , Y + 2
000c13 81bb     +LDD R27 , Y + 2 + 1
000c14 818c     +LDD R24 , Y + 2 + 2
000c15 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
                +
000c16 e0e0     +LDI R30 , LOW ( 0x41200000 )
000c17 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000c18 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000c19 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000c1a 940e 0dc3 	CALL __MULF12
                +
000c1c 83ea     +STD Y + 2 , R30
000c1d 83fb     +STD Y + 2 + 1 , R31
000c1e 836c     +STD Y + 2 + 2 , R22
000c1f 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000c20 5f1f      	SUBI R17,-LOW(1)
000c21 3217      	CPI  R17,39
000c22 f048      	BRLO _0x20A0017
000c23 81ee      	LDD  R30,Y+6
000c24 81ff      	LDD  R31,Y+6+1
000c25 93fa      	ST   -Y,R31
000c26 93ea      	ST   -Y,R30
                +
000c27 eca3     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 5 ) )
000c28 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 5 ) )
                 	__POINTW2FN _0x20A0000,5
000c29 940e 0afc 	CALL _strcpyf
000c2b c093      	RJMP _0x20C0002
                 _0x20A0017:
000c2c cfda      	RJMP _0x20A0014
                 _0x20A0016:
000c2d 3010      	CPI  R17,0
000c2e f449      	BRNE _0x20A0018
000c2f 81ae      	LDD  R26,Y+6
000c30 81bf      	LDD  R27,Y+6+1
000c31 9611      	ADIW R26,1
000c32 83ae      	STD  Y+6,R26
000c33 83bf      	STD  Y+6+1,R27
000c34 9711      	SBIW R26,1
000c35 e3e0      	LDI  R30,LOW(48)
000c36 93ec      	ST   X,R30
000c37 c047      	RJMP _0x20A0019
                 _0x20A0018:
                 _0x20A001A:
000c38 2fe1      	MOV  R30,R17
000c39 5011      	SUBI R17,1
000c3a 30e0      	CPI  R30,0
000c3b f409      	BRNE PC+2
000c3c c042      	RJMP _0x20A001C
                +
000c3d 81aa     +LDD R26 , Y + 2
000c3e 81bb     +LDD R27 , Y + 2 + 1
000c3f 818c     +LDD R24 , Y + 2 + 2
000c40 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
                +
000c41 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000c42 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000c43 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000c44 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000c45 940e 0dc3 	CALL __MULF12
                +
000c47 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000c48 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000c49 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000c4a e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000c4b 940e 0d73 	CALL __ADDF12
000c4d 01df      	MOVW R26,R30
000c4e 01cb      	MOVW R24,R22
000c4f 940e 0b84 	CALL _floor
                +
000c51 83ea     +STD Y + 2 , R30
000c52 83fb     +STD Y + 2 + 1 , R31
000c53 836c     +STD Y + 2 + 2 , R22
000c54 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
                +
000c55 85a9     +LDD R26 , Y + 9
000c56 85ba     +LDD R27 , Y + 9 + 1
000c57 858b     +LDD R24 , Y + 9 + 2
000c58 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000c59 940e 0e11 	CALL __DIVF21
000c5b 940e 0d00 	CALL __CFD1U
000c5d 2f0e      	MOV  R16,R30
000c5e 81ae      	LDD  R26,Y+6
000c5f 81bf      	LDD  R27,Y+6+1
000c60 9611      	ADIW R26,1
000c61 83ae      	STD  Y+6,R26
000c62 83bf      	STD  Y+6+1,R27
000c63 9711      	SBIW R26,1
000c64 5de0      	SUBI R30,-LOW(48)
000c65 93ec      	ST   X,R30
000c66 2fe0      	MOV  R30,R16
000c67 e0f0      	LDI  R31,0
                +
000c68 81aa     +LDD R26 , Y + 2
000c69 81bb     +LDD R27 , Y + 2 + 1
000c6a 818c     +LDD R24 , Y + 2 + 2
000c6b 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000c6c 940e 0e99 	CALL __CWD1
000c6e 940e 0d39 	CALL __CDF1
000c70 940e 0dc3 	CALL __MULF12
                +
000c72 85a9     +LDD R26 , Y + 9
000c73 85ba     +LDD R27 , Y + 9 + 1
000c74 858b     +LDD R24 , Y + 9 + 2
000c75 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000c76 940e 0f67 	CALL __SWAPD12
000c78 940e 0d6c 	CALL __SUBF12
                +
000c7a 87e9     +STD Y + 9 , R30
000c7b 87fa     +STD Y + 9 + 1 , R31
000c7c 876b     +STD Y + 9 + 2 , R22
000c7d 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000c7e cfb9      	RJMP _0x20A001A
                 _0x20A001C:
                 _0x20A0019:
000c7f 85e8      	LDD  R30,Y+8
000c80 30e0      	CPI  R30,0
000c81 f1c9      	BREQ _0x20C0001
000c82 81ae      	LDD  R26,Y+6
000c83 81bf      	LDD  R27,Y+6+1
000c84 9611      	ADIW R26,1
000c85 83ae      	STD  Y+6,R26
000c86 83bf      	STD  Y+6+1,R27
000c87 9711      	SBIW R26,1
000c88 e2ee      	LDI  R30,LOW(46)
000c89 93ec      	ST   X,R30
                 _0x20A001E:
000c8a 85e8      	LDD  R30,Y+8
000c8b 50e1      	SUBI R30,LOW(1)
000c8c 87e8      	STD  Y+8,R30
000c8d 5fef      	SUBI R30,-LOW(1)
000c8e f161      	BREQ _0x20A0020
                +
000c8f 85a9     +LDD R26 , Y + 9
000c90 85ba     +LDD R27 , Y + 9 + 1
000c91 858b     +LDD R24 , Y + 9 + 2
000c92 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
                +
000c93 e0e0     +LDI R30 , LOW ( 0x41200000 )
000c94 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000c95 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000c96 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000c97 940e 0dc3 	CALL __MULF12
                +
000c99 87e9     +STD Y + 9 , R30
000c9a 87fa     +STD Y + 9 + 1 , R31
000c9b 876b     +STD Y + 9 + 2 , R22
000c9c 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000c9d 940e 0d00 	CALL __CFD1U
000c9f 2f0e      	MOV  R16,R30
000ca0 81ae      	LDD  R26,Y+6
000ca1 81bf      	LDD  R27,Y+6+1
000ca2 9611      	ADIW R26,1
000ca3 83ae      	STD  Y+6,R26
000ca4 83bf      	STD  Y+6+1,R27
000ca5 9711      	SBIW R26,1
000ca6 5de0      	SUBI R30,-LOW(48)
000ca7 93ec      	ST   X,R30
000ca8 2fe0      	MOV  R30,R16
000ca9 e0f0      	LDI  R31,0
                +
000caa 85a9     +LDD R26 , Y + 9
000cab 85ba     +LDD R27 , Y + 9 + 1
000cac 858b     +LDD R24 , Y + 9 + 2
000cad 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000cae 940e 0e99 	CALL __CWD1
000cb0 940e 0d39 	CALL __CDF1
000cb2 940e 0f67 	CALL __SWAPD12
000cb4 940e 0d6c 	CALL __SUBF12
                +
000cb6 87e9     +STD Y + 9 , R30
000cb7 87fa     +STD Y + 9 + 1 , R31
000cb8 876b     +STD Y + 9 + 2 , R22
000cb9 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000cba cfcf      	RJMP _0x20A001E
                 _0x20A0020:
                 _0x20C0001:
000cbb 81ae      	LDD  R26,Y+6
000cbc 81bf      	LDD  R27,Y+6+1
000cbd e0e0      	LDI  R30,LOW(0)
000cbe 93ec      	ST   X,R30
                 _0x20C0002:
000cbf 8119      	LDD  R17,Y+1
000cc0 8108      	LDD  R16,Y+0
000cc1 962d      	ADIW R28,13
000cc2 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _recv_buf:
000300           	.BYTE 0x14
                 __seed_G105:
000314           	.BYTE 0x4
                 
                 	.CSEG
                 
                 	.CSEG
                 _delay_ms:
000cc3 9610      	adiw r26,0
000cc4 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000cc5 ec8d     +LDI R24 , LOW ( 0xACD )
000cc6 e09a     +LDI R25 , HIGH ( 0xACD )
                +__DELAY_USW_LOOP :
000cc7 9701     +SBIW R24 , 1
000cc8 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xACD
000cc9 95a8      	wdr
000cca 9711      	sbiw r26,1
000ccb f7c9      	brne __delay_ms0
                 __delay_ms1:
000ccc 9508      	ret
                 
                 __ANEGF1:
000ccd 9730      	SBIW R30,0
000cce 4060      	SBCI R22,0
000ccf 4070      	SBCI R23,0
000cd0 f009      	BREQ __ANEGF10
000cd1 5870      	SUBI R23,0x80
                 __ANEGF10:
000cd2 9508      	RET
                 
                 __ROUND_REPACK:
000cd3 2355      	TST  R21
000cd4 f442      	BRPL __REPACK
000cd5 3850      	CPI  R21,0x80
000cd6 f411      	BRNE __ROUND_REPACK0
000cd7 ffe0      	SBRS R30,0
000cd8 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000cd9 9631      	ADIW R30,1
000cda 1f69      	ADC  R22,R25
000cdb 1f79      	ADC  R23,R25
000cdc f06b      	BRVS __REPACK1
                 
                 __REPACK:
000cdd e850      	LDI  R21,0x80
000cde 2757      	EOR  R21,R23
000cdf f411      	BRNE __REPACK0
000ce0 935f      	PUSH R21
000ce1 c0cf      	RJMP __ZERORES
                 __REPACK0:
000ce2 3f5f      	CPI  R21,0xFF
000ce3 f031      	BREQ __REPACK1
000ce4 0f66      	LSL  R22
000ce5 0c00      	LSL  R0
000ce6 9557      	ROR  R21
000ce7 9567      	ROR  R22
000ce8 2f75      	MOV  R23,R21
000ce9 9508      	RET
                 __REPACK1:
000cea 935f      	PUSH R21
000ceb 2000      	TST  R0
000cec f00a      	BRMI __REPACK2
000ced c0cf      	RJMP __MAXRES
                 __REPACK2:
000cee c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000cef e850      	LDI  R21,0x80
000cf0 2e19      	MOV  R1,R25
000cf1 2215      	AND  R1,R21
000cf2 0f88      	LSL  R24
000cf3 1f99      	ROL  R25
000cf4 2795      	EOR  R25,R21
000cf5 0f55      	LSL  R21
000cf6 9587      	ROR  R24
                 
                 __UNPACK1:
000cf7 e850      	LDI  R21,0x80
000cf8 2e07      	MOV  R0,R23
000cf9 2205      	AND  R0,R21
000cfa 0f66      	LSL  R22
000cfb 1f77      	ROL  R23
000cfc 2775      	EOR  R23,R21
000cfd 0f55      	LSL  R21
000cfe 9567      	ROR  R22
000cff 9508      	RET
                 
                 __CFD1U:
000d00 9468      	SET
000d01 c001      	RJMP __CFD1U0
                 __CFD1:
000d02 94e8      	CLT
                 __CFD1U0:
000d03 935f      	PUSH R21
000d04 dff2      	RCALL __UNPACK1
000d05 3870      	CPI  R23,0x80
000d06 f018      	BRLO __CFD10
000d07 3f7f      	CPI  R23,0xFF
000d08 f408      	BRCC __CFD10
000d09 c0a7      	RJMP __ZERORES
                 __CFD10:
000d0a e156      	LDI  R21,22
000d0b 1b57      	SUB  R21,R23
000d0c f4aa      	BRPL __CFD11
000d0d 9551      	NEG  R21
000d0e 3058      	CPI  R21,8
000d0f f40e      	BRTC __CFD19
000d10 3059      	CPI  R21,9
                 __CFD19:
000d11 f030      	BRLO __CFD17
000d12 efef      	SER  R30
000d13 efff      	SER  R31
000d14 ef6f      	SER  R22
000d15 e77f      	LDI  R23,0x7F
000d16 f977      	BLD  R23,7
000d17 c01a      	RJMP __CFD15
                 __CFD17:
000d18 2777      	CLR  R23
000d19 2355      	TST  R21
000d1a f0b9      	BREQ __CFD15
                 __CFD18:
000d1b 0fee      	LSL  R30
000d1c 1fff      	ROL  R31
000d1d 1f66      	ROL  R22
000d1e 1f77      	ROL  R23
000d1f 955a      	DEC  R21
000d20 f7d1      	BRNE __CFD18
000d21 c010      	RJMP __CFD15
                 __CFD11:
000d22 2777      	CLR  R23
                 __CFD12:
000d23 3058      	CPI  R21,8
000d24 f028      	BRLO __CFD13
000d25 2fef      	MOV  R30,R31
000d26 2ff6      	MOV  R31,R22
000d27 2f67      	MOV  R22,R23
000d28 5058      	SUBI R21,8
000d29 cff9      	RJMP __CFD12
                 __CFD13:
000d2a 2355      	TST  R21
000d2b f031      	BREQ __CFD15
                 __CFD14:
000d2c 9576      	LSR  R23
000d2d 9567      	ROR  R22
000d2e 95f7      	ROR  R31
000d2f 95e7      	ROR  R30
000d30 955a      	DEC  R21
000d31 f7d1      	BRNE __CFD14
                 __CFD15:
000d32 2000      	TST  R0
000d33 f40a      	BRPL __CFD16
000d34 d14e      	RCALL __ANEGD1
                 __CFD16:
000d35 915f      	POP  R21
000d36 9508      	RET
                 
                 __CDF1U:
000d37 9468      	SET
000d38 c001      	RJMP __CDF1U0
                 __CDF1:
000d39 94e8      	CLT
                 __CDF1U0:
000d3a 9730      	SBIW R30,0
000d3b 4060      	SBCI R22,0
000d3c 4070      	SBCI R23,0
000d3d f0b1      	BREQ __CDF10
000d3e 2400      	CLR  R0
000d3f f026      	BRTS __CDF11
000d40 2377      	TST  R23
000d41 f412      	BRPL __CDF11
000d42 9400      	COM  R0
000d43 d13f      	RCALL __ANEGD1
                 __CDF11:
000d44 2e17      	MOV  R1,R23
000d45 e17e      	LDI  R23,30
000d46 2011      	TST  R1
                 __CDF12:
000d47 f032      	BRMI __CDF13
000d48 957a      	DEC  R23
000d49 0fee      	LSL  R30
000d4a 1fff      	ROL  R31
000d4b 1f66      	ROL  R22
000d4c 1c11      	ROL  R1
000d4d cff9      	RJMP __CDF12
                 __CDF13:
000d4e 2fef      	MOV  R30,R31
000d4f 2ff6      	MOV  R31,R22
000d50 2d61      	MOV  R22,R1
000d51 935f      	PUSH R21
000d52 df8a      	RCALL __REPACK
000d53 915f      	POP  R21
                 __CDF10:
000d54 9508      	RET
                 
                 __SWAPACC:
000d55 934f      	PUSH R20
000d56 01af      	MOVW R20,R30
000d57 01fd      	MOVW R30,R26
000d58 01da      	MOVW R26,R20
000d59 01ab      	MOVW R20,R22
000d5a 01bc      	MOVW R22,R24
000d5b 01ca      	MOVW R24,R20
000d5c 2d40      	MOV  R20,R0
000d5d 2c01      	MOV  R0,R1
000d5e 2e14      	MOV  R1,R20
000d5f 914f      	POP  R20
000d60 9508      	RET
                 
                 __UADD12:
000d61 0fea      	ADD  R30,R26
000d62 1ffb      	ADC  R31,R27
000d63 1f68      	ADC  R22,R24
000d64 9508      	RET
                 
                 __NEGMAN1:
000d65 95e0      	COM  R30
000d66 95f0      	COM  R31
000d67 9560      	COM  R22
000d68 5fef      	SUBI R30,-1
000d69 4fff      	SBCI R31,-1
000d6a 4f6f      	SBCI R22,-1
000d6b 9508      	RET
                 
                 __SUBF12:
000d6c 935f      	PUSH R21
000d6d df81      	RCALL __UNPACK
000d6e 3890      	CPI  R25,0x80
000d6f f171      	BREQ __ADDF129
000d70 e850      	LDI  R21,0x80
000d71 2615      	EOR  R1,R21
                 
000d72 c004      	RJMP __ADDF120
                 
                 __ADDF12:
000d73 935f      	PUSH R21
000d74 df7a      	RCALL __UNPACK
000d75 3890      	CPI  R25,0x80
000d76 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000d77 3870      	CPI  R23,0x80
000d78 f121      	BREQ __ADDF128
                 __ADDF121:
000d79 2f57      	MOV  R21,R23
000d7a 1b59      	SUB  R21,R25
000d7b f12b      	BRVS __ADDF1211
000d7c f412      	BRPL __ADDF122
000d7d dfd7      	RCALL __SWAPACC
000d7e cffa      	RJMP __ADDF121
                 __ADDF122:
000d7f 3158      	CPI  R21,24
000d80 f018      	BRLO __ADDF123
000d81 27aa      	CLR  R26
000d82 27bb      	CLR  R27
000d83 2788      	CLR  R24
                 __ADDF123:
000d84 3058      	CPI  R21,8
000d85 f028      	BRLO __ADDF124
000d86 2fab      	MOV  R26,R27
000d87 2fb8      	MOV  R27,R24
000d88 2788      	CLR  R24
000d89 5058      	SUBI R21,8
000d8a cff9      	RJMP __ADDF123
                 __ADDF124:
000d8b 2355      	TST  R21
000d8c f029      	BREQ __ADDF126
                 __ADDF125:
000d8d 9586      	LSR  R24
000d8e 95b7      	ROR  R27
000d8f 95a7      	ROR  R26
000d90 955a      	DEC  R21
000d91 f7d9      	BRNE __ADDF125
                 __ADDF126:
000d92 2d50      	MOV  R21,R0
000d93 2551      	EOR  R21,R1
000d94 f072      	BRMI __ADDF127
000d95 dfcb      	RCALL __UADD12
000d96 f438      	BRCC __ADDF129
000d97 9567      	ROR  R22
000d98 95f7      	ROR  R31
000d99 95e7      	ROR  R30
000d9a 9573      	INC  R23
000d9b f413      	BRVC __ADDF129
000d9c c020      	RJMP __MAXRES
                 __ADDF128:
000d9d dfb7      	RCALL __SWAPACC
                 __ADDF129:
000d9e df3e      	RCALL __REPACK
000d9f 915f      	POP  R21
000da0 9508      	RET
                 __ADDF1211:
000da1 f7d8      	BRCC __ADDF128
000da2 cffb      	RJMP __ADDF129
                 __ADDF127:
000da3 1bea      	SUB  R30,R26
000da4 0bfb      	SBC  R31,R27
000da5 0b68      	SBC  R22,R24
000da6 f051      	BREQ __ZERORES
000da7 f410      	BRCC __ADDF1210
000da8 9400      	COM  R0
000da9 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000daa 2366      	TST  R22
000dab f392      	BRMI __ADDF129
000dac 0fee      	LSL  R30
000dad 1fff      	ROL  R31
000dae 1f66      	ROL  R22
000daf 957a      	DEC  R23
000db0 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000db1 27ee      	CLR  R30
000db2 27ff      	CLR  R31
000db3 2766      	CLR  R22
000db4 2777      	CLR  R23
000db5 915f      	POP  R21
000db6 9508      	RET
                 
                 __MINRES:
000db7 efef      	SER  R30
000db8 efff      	SER  R31
000db9 e76f      	LDI  R22,0x7F
000dba ef7f      	SER  R23
000dbb 915f      	POP  R21
000dbc 9508      	RET
                 
                 __MAXRES:
000dbd efef      	SER  R30
000dbe efff      	SER  R31
000dbf e76f      	LDI  R22,0x7F
000dc0 e77f      	LDI  R23,0x7F
000dc1 915f      	POP  R21
000dc2 9508      	RET
                 
                 __MULF12:
000dc3 935f      	PUSH R21
000dc4 df2a      	RCALL __UNPACK
000dc5 3870      	CPI  R23,0x80
000dc6 f351      	BREQ __ZERORES
000dc7 3890      	CPI  R25,0x80
000dc8 f341      	BREQ __ZERORES
000dc9 2401      	EOR  R0,R1
000dca 9408      	SEC
000dcb 1f79      	ADC  R23,R25
000dcc f423      	BRVC __MULF124
000dcd f31c      	BRLT __ZERORES
                 __MULF125:
000dce 2000      	TST  R0
000dcf f33a      	BRMI __MINRES
000dd0 cfec      	RJMP __MAXRES
                 __MULF124:
000dd1 920f      	PUSH R0
000dd2 931f      	PUSH R17
000dd3 932f      	PUSH R18
000dd4 933f      	PUSH R19
000dd5 934f      	PUSH R20
000dd6 2711      	CLR  R17
000dd7 2722      	CLR  R18
000dd8 2799      	CLR  R25
000dd9 9f68      	MUL  R22,R24
000dda 01a0      	MOVW R20,R0
000ddb 9f8f      	MUL  R24,R31
000ddc 2d30      	MOV  R19,R0
000ddd 0d41      	ADD  R20,R1
000dde 1f59      	ADC  R21,R25
000ddf 9f6b      	MUL  R22,R27
000de0 0d30      	ADD  R19,R0
000de1 1d41      	ADC  R20,R1
000de2 1f59      	ADC  R21,R25
000de3 9f8e      	MUL  R24,R30
000de4 d027      	RCALL __MULF126
000de5 9fbf      	MUL  R27,R31
000de6 d025      	RCALL __MULF126
000de7 9f6a      	MUL  R22,R26
000de8 d023      	RCALL __MULF126
000de9 9fbe      	MUL  R27,R30
000dea d01d      	RCALL __MULF127
000deb 9faf      	MUL  R26,R31
000dec d01b      	RCALL __MULF127
000ded 9fae      	MUL  R26,R30
000dee 0d11      	ADD  R17,R1
000def 1f29      	ADC  R18,R25
000df0 1f39      	ADC  R19,R25
000df1 1f49      	ADC  R20,R25
000df2 1f59      	ADC  R21,R25
000df3 2fe3      	MOV  R30,R19
000df4 2ff4      	MOV  R31,R20
000df5 2f65      	MOV  R22,R21
000df6 2f52      	MOV  R21,R18
000df7 914f      	POP  R20
000df8 913f      	POP  R19
000df9 912f      	POP  R18
000dfa 911f      	POP  R17
000dfb 900f      	POP  R0
000dfc 2366      	TST  R22
000dfd f02a      	BRMI __MULF122
000dfe 0f55      	LSL  R21
000dff 1fee      	ROL  R30
000e00 1fff      	ROL  R31
000e01 1f66      	ROL  R22
000e02 c002      	RJMP __MULF123
                 __MULF122:
000e03 9573      	INC  R23
000e04 f24b      	BRVS __MULF125
                 __MULF123:
000e05 decd      	RCALL __ROUND_REPACK
000e06 915f      	POP  R21
000e07 9508      	RET
                 
                 __MULF127:
000e08 0d10      	ADD  R17,R0
000e09 1d21      	ADC  R18,R1
000e0a 1f39      	ADC  R19,R25
000e0b c002      	RJMP __MULF128
                 __MULF126:
000e0c 0d20      	ADD  R18,R0
000e0d 1d31      	ADC  R19,R1
                 __MULF128:
000e0e 1f49      	ADC  R20,R25
000e0f 1f59      	ADC  R21,R25
000e10 9508      	RET
                 
                 __DIVF21:
000e11 935f      	PUSH R21
000e12 dedc      	RCALL __UNPACK
000e13 3870      	CPI  R23,0x80
000e14 f421      	BRNE __DIVF210
000e15 2011      	TST  R1
                 __DIVF211:
000e16 f40a      	BRPL __DIVF219
000e17 cf9f      	RJMP __MINRES
                 __DIVF219:
000e18 cfa4      	RJMP __MAXRES
                 __DIVF210:
000e19 3890      	CPI  R25,0x80
000e1a f409      	BRNE __DIVF218
                 __DIVF217:
000e1b cf95      	RJMP __ZERORES
                 __DIVF218:
000e1c 2401      	EOR  R0,R1
000e1d 9408      	SEC
000e1e 0b97      	SBC  R25,R23
000e1f f41b      	BRVC __DIVF216
000e20 f3d4      	BRLT __DIVF217
000e21 2000      	TST  R0
000e22 cff3      	RJMP __DIVF211
                 __DIVF216:
000e23 2f79      	MOV  R23,R25
000e24 931f      	PUSH R17
000e25 932f      	PUSH R18
000e26 933f      	PUSH R19
000e27 934f      	PUSH R20
000e28 2411      	CLR  R1
000e29 2711      	CLR  R17
000e2a 2722      	CLR  R18
000e2b 2733      	CLR  R19
000e2c 2744      	CLR  R20
000e2d 2755      	CLR  R21
000e2e e290      	LDI  R25,32
                 __DIVF212:
000e2f 17ae      	CP   R26,R30
000e30 07bf      	CPC  R27,R31
000e31 0786      	CPC  R24,R22
000e32 0741      	CPC  R20,R17
000e33 f030      	BRLO __DIVF213
000e34 1bae      	SUB  R26,R30
000e35 0bbf      	SBC  R27,R31
000e36 0b86      	SBC  R24,R22
000e37 0b41      	SBC  R20,R17
000e38 9408      	SEC
000e39 c001      	RJMP __DIVF214
                 __DIVF213:
000e3a 9488      	CLC
                 __DIVF214:
000e3b 1f55      	ROL  R21
000e3c 1f22      	ROL  R18
000e3d 1f33      	ROL  R19
000e3e 1c11      	ROL  R1
000e3f 1faa      	ROL  R26
000e40 1fbb      	ROL  R27
000e41 1f88      	ROL  R24
000e42 1f44      	ROL  R20
000e43 959a      	DEC  R25
000e44 f751      	BRNE __DIVF212
000e45 01f9      	MOVW R30,R18
000e46 2d61      	MOV  R22,R1
000e47 914f      	POP  R20
000e48 913f      	POP  R19
000e49 912f      	POP  R18
000e4a 911f      	POP  R17
000e4b 2366      	TST  R22
000e4c f032      	BRMI __DIVF215
000e4d 0f55      	LSL  R21
000e4e 1fee      	ROL  R30
000e4f 1fff      	ROL  R31
000e50 1f66      	ROL  R22
000e51 957a      	DEC  R23
000e52 f243      	BRVS __DIVF217
                 __DIVF215:
000e53 de7f      	RCALL __ROUND_REPACK
000e54 915f      	POP  R21
000e55 9508      	RET
                 
                 __CMPF12:
000e56 2399      	TST  R25
000e57 f09a      	BRMI __CMPF120
000e58 2377      	TST  R23
000e59 f042      	BRMI __CMPF121
000e5a 1797      	CP   R25,R23
000e5b f048      	BRLO __CMPF122
000e5c f429      	BRNE __CMPF121
000e5d 17ae      	CP   R26,R30
000e5e 07bf      	CPC  R27,R31
000e5f 0786      	CPC  R24,R22
000e60 f020      	BRLO __CMPF122
000e61 f031      	BREQ __CMPF123
                 __CMPF121:
000e62 9498      	CLZ
000e63 9488      	CLC
000e64 9508      	RET
                 __CMPF122:
000e65 9498      	CLZ
000e66 9408      	SEC
000e67 9508      	RET
                 __CMPF123:
000e68 9418      	SEZ
000e69 9488      	CLC
000e6a 9508      	RET
                 __CMPF120:
000e6b 2377      	TST  R23
000e6c f7c2      	BRPL __CMPF122
000e6d 1797      	CP   R25,R23
000e6e f398      	BRLO __CMPF121
000e6f f7a9      	BRNE __CMPF122
000e70 17ea      	CP   R30,R26
000e71 07fb      	CPC  R31,R27
000e72 0768      	CPC  R22,R24
000e73 f388      	BRLO __CMPF122
000e74 f399      	BREQ __CMPF123
000e75 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
000e76 2400      	CLR  R0
000e77 0daf      	ADD  R26,R15
000e78 1db0      	ADC  R27,R0
000e79 9508      	RET
                 
                 __ADDD12:
000e7a 0fea      	ADD  R30,R26
000e7b 1ffb      	ADC  R31,R27
000e7c 1f68      	ADC  R22,R24
000e7d 1f79      	ADC  R23,R25
000e7e 9508      	RET
                 
                 __ANEGW1:
000e7f 95f1      	NEG  R31
000e80 95e1      	NEG  R30
000e81 40f0      	SBCI R31,0
000e82 9508      	RET
                 
                 __ANEGD1:
000e83 95f0      	COM  R31
000e84 9560      	COM  R22
000e85 9570      	COM  R23
000e86 95e1      	NEG  R30
000e87 4fff      	SBCI R31,-1
000e88 4f6f      	SBCI R22,-1
000e89 4f7f      	SBCI R23,-1
000e8a 9508      	RET
                 
                 __LSLB12:
000e8b 23ee      	TST  R30
000e8c 2e0e      	MOV  R0,R30
000e8d 2fea      	MOV  R30,R26
000e8e f019      	BREQ __LSLB12R
                 __LSLB12L:
000e8f 0fee      	LSL  R30
000e90 940a      	DEC  R0
000e91 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
000e92 9508      	RET
                 
                 __CBD1:
000e93 2ffe      	MOV  R31,R30
000e94 0fff      	ADD  R31,R31
000e95 0bff      	SBC  R31,R31
000e96 2f6f      	MOV  R22,R31
000e97 2f7f      	MOV  R23,R31
000e98 9508      	RET
                 
                 __CWD1:
000e99 2f6f      	MOV  R22,R31
000e9a 0f66      	ADD  R22,R22
000e9b 0b66      	SBC  R22,R22
000e9c 2f76      	MOV  R23,R22
000e9d 9508      	RET
                 
                 __LTW12:
000e9e 17ae      	CP   R26,R30
000e9f 07bf      	CPC  R27,R31
000ea0 e0e1      	LDI  R30,1
000ea1 f00c      	BRLT __LTW12T
000ea2 27ee      	CLR  R30
                 __LTW12T:
000ea3 9508      	RET
                 
                 __GTW12:
000ea4 17ea      	CP   R30,R26
000ea5 07fb      	CPC  R31,R27
000ea6 e0e1      	LDI  R30,1
000ea7 f00c      	BRLT __GTW12T
000ea8 27ee      	CLR  R30
                 __GTW12T:
000ea9 9508      	RET
                 
                 __MULD12U:
000eaa 9f7a      	MUL  R23,R26
000eab 2d70      	MOV  R23,R0
000eac 9f6b      	MUL  R22,R27
000ead 0d70      	ADD  R23,R0
000eae 9ff8      	MUL  R31,R24
000eaf 0d70      	ADD  R23,R0
000eb0 9fe9      	MUL  R30,R25
000eb1 0d70      	ADD  R23,R0
000eb2 9f6a      	MUL  R22,R26
000eb3 2d60      	MOV  R22,R0
000eb4 0d71      	ADD  R23,R1
000eb5 9ffb      	MUL  R31,R27
000eb6 0d60      	ADD  R22,R0
000eb7 1d71      	ADC  R23,R1
000eb8 9fe8      	MUL  R30,R24
000eb9 0d60      	ADD  R22,R0
000eba 1d71      	ADC  R23,R1
000ebb 2788      	CLR  R24
000ebc 9ffa      	MUL  R31,R26
000ebd 2df0      	MOV  R31,R0
000ebe 0d61      	ADD  R22,R1
000ebf 1f78      	ADC  R23,R24
000ec0 9feb      	MUL  R30,R27
000ec1 0df0      	ADD  R31,R0
000ec2 1d61      	ADC  R22,R1
000ec3 1f78      	ADC  R23,R24
000ec4 9fea      	MUL  R30,R26
000ec5 2de0      	MOV  R30,R0
000ec6 0df1      	ADD  R31,R1
000ec7 1f68      	ADC  R22,R24
000ec8 1f78      	ADC  R23,R24
000ec9 9508      	RET
                 
                 __DIVB21U:
000eca 2400      	CLR  R0
000ecb e098      	LDI  R25,8
                 __DIVB21U1:
000ecc 0faa      	LSL  R26
000ecd 1c00      	ROL  R0
000ece 1a0e      	SUB  R0,R30
000ecf f410      	BRCC __DIVB21U2
000ed0 0e0e      	ADD  R0,R30
000ed1 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
000ed2 60a1      	SBR  R26,1
                 __DIVB21U3:
000ed3 959a      	DEC  R25
000ed4 f7b9      	BRNE __DIVB21U1
000ed5 2fea      	MOV  R30,R26
000ed6 2da0      	MOV  R26,R0
000ed7 9508      	RET
                 
                 __DIVB21:
000ed8 d05a      	RCALL __CHKSIGNB
000ed9 dff0      	RCALL __DIVB21U
000eda f40e      	BRTC __DIVB211
000edb 95e1      	NEG  R30
                 __DIVB211:
000edc 9508      	RET
                 
                 __DIVW21U:
000edd 2400      	CLR  R0
000ede 2411      	CLR  R1
000edf e190      	LDI  R25,16
                 __DIVW21U1:
000ee0 0faa      	LSL  R26
000ee1 1fbb      	ROL  R27
000ee2 1c00      	ROL  R0
000ee3 1c11      	ROL  R1
000ee4 1a0e      	SUB  R0,R30
000ee5 0a1f      	SBC  R1,R31
000ee6 f418      	BRCC __DIVW21U2
000ee7 0e0e      	ADD  R0,R30
000ee8 1e1f      	ADC  R1,R31
000ee9 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000eea 60a1      	SBR  R26,1
                 __DIVW21U3:
000eeb 959a      	DEC  R25
000eec f799      	BRNE __DIVW21U1
000eed 01fd      	MOVW R30,R26
000eee 01d0      	MOVW R26,R0
000eef 9508      	RET
                 
                 __DIVD21U:
000ef0 933f      	PUSH R19
000ef1 934f      	PUSH R20
000ef2 935f      	PUSH R21
000ef3 2400      	CLR  R0
000ef4 2411      	CLR  R1
000ef5 2744      	CLR  R20
000ef6 2755      	CLR  R21
000ef7 e230      	LDI  R19,32
                 __DIVD21U1:
000ef8 0faa      	LSL  R26
000ef9 1fbb      	ROL  R27
000efa 1f88      	ROL  R24
000efb 1f99      	ROL  R25
000efc 1c00      	ROL  R0
000efd 1c11      	ROL  R1
000efe 1f44      	ROL  R20
000eff 1f55      	ROL  R21
000f00 1a0e      	SUB  R0,R30
000f01 0a1f      	SBC  R1,R31
000f02 0b46      	SBC  R20,R22
000f03 0b57      	SBC  R21,R23
000f04 f428      	BRCC __DIVD21U2
000f05 0e0e      	ADD  R0,R30
000f06 1e1f      	ADC  R1,R31
000f07 1f46      	ADC  R20,R22
000f08 1f57      	ADC  R21,R23
000f09 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000f0a 60a1      	SBR  R26,1
                 __DIVD21U3:
000f0b 953a      	DEC  R19
000f0c f759      	BRNE __DIVD21U1
000f0d 01fd      	MOVW R30,R26
000f0e 01bc      	MOVW R22,R24
000f0f 01d0      	MOVW R26,R0
000f10 01ca      	MOVW R24,R20
000f11 915f      	POP  R21
000f12 914f      	POP  R20
000f13 913f      	POP  R19
000f14 9508      	RET
                 
                 __MODB21:
000f15 94e8      	CLT
000f16 ffa7      	SBRS R26,7
000f17 c002      	RJMP __MODB211
000f18 95a1      	NEG  R26
000f19 9468      	SET
                 __MODB211:
000f1a fde7      	SBRC R30,7
000f1b 95e1      	NEG  R30
000f1c dfad      	RCALL __DIVB21U
000f1d 2fea      	MOV  R30,R26
000f1e f40e      	BRTC __MODB212
000f1f 95e1      	NEG  R30
                 __MODB212:
000f20 9508      	RET
                 
                 __MODW21:
000f21 94e8      	CLT
000f22 ffb7      	SBRS R27,7
000f23 c004      	RJMP __MODW211
000f24 95a0      	COM  R26
000f25 95b0      	COM  R27
000f26 9611      	ADIW R26,1
000f27 9468      	SET
                 __MODW211:
000f28 fdf7      	SBRC R31,7
000f29 df55      	RCALL __ANEGW1
000f2a dfb2      	RCALL __DIVW21U
000f2b 01fd      	MOVW R30,R26
000f2c f40e      	BRTC __MODW212
000f2d df51      	RCALL __ANEGW1
                 __MODW212:
000f2e 9508      	RET
                 
                 __MODD21U:
000f2f dfc0      	RCALL __DIVD21U
000f30 01fd      	MOVW R30,R26
000f31 01bc      	MOVW R22,R24
000f32 9508      	RET
                 
                 __CHKSIGNB:
000f33 94e8      	CLT
000f34 ffe7      	SBRS R30,7
000f35 c002      	RJMP __CHKSB1
000f36 95e1      	NEG  R30
000f37 9468      	SET
                 __CHKSB1:
000f38 ffa7      	SBRS R26,7
000f39 c004      	RJMP __CHKSB2
000f3a 95a1      	NEG  R26
000f3b f800      	BLD  R0,0
000f3c 9403      	INC  R0
000f3d fa00      	BST  R0,0
                 __CHKSB2:
000f3e 9508      	RET
                 
                 __GETW1P:
000f3f 91ed      	LD   R30,X+
000f40 91fc      	LD   R31,X
000f41 9711      	SBIW R26,1
000f42 9508      	RET
                 
                 __GETD1P:
000f43 91ed      	LD   R30,X+
000f44 91fd      	LD   R31,X+
000f45 916d      	LD   R22,X+
000f46 917c      	LD   R23,X
000f47 9713      	SBIW R26,3
000f48 9508      	RET
                 
                 __PUTDP1:
000f49 93ed      	ST   X+,R30
000f4a 93fd      	ST   X+,R31
000f4b 936d      	ST   X+,R22
000f4c 937c      	ST   X,R23
000f4d 9508      	RET
                 
                 __GETD1S0:
000f4e 81e8      	LD   R30,Y
000f4f 81f9      	LDD  R31,Y+1
000f50 816a      	LDD  R22,Y+2
000f51 817b      	LDD  R23,Y+3
000f52 9508      	RET
                 
                 __GETD2S0:
000f53 81a8      	LD   R26,Y
000f54 81b9      	LDD  R27,Y+1
000f55 818a      	LDD  R24,Y+2
000f56 819b      	LDD  R25,Y+3
000f57 9508      	RET
                 
                 __PUTD1S0:
000f58 83e8      	ST   Y,R30
000f59 83f9      	STD  Y+1,R31
000f5a 836a      	STD  Y+2,R22
000f5b 837b      	STD  Y+3,R23
000f5c 9508      	RET
                 
                 __PUTPARD1:
000f5d 937a      	ST   -Y,R23
000f5e 936a      	ST   -Y,R22
000f5f 93fa      	ST   -Y,R31
000f60 93ea      	ST   -Y,R30
000f61 9508      	RET
                 
                 __PUTPARD2:
000f62 939a      	ST   -Y,R25
000f63 938a      	ST   -Y,R24
000f64 93ba      	ST   -Y,R27
000f65 93aa      	ST   -Y,R26
000f66 9508      	RET
                 
                 __SWAPD12:
000f67 2e18      	MOV  R1,R24
000f68 2f86      	MOV  R24,R22
000f69 2d61      	MOV  R22,R1
000f6a 2e19      	MOV  R1,R25
000f6b 2f97      	MOV  R25,R23
000f6c 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000f6d 2e1b      	MOV  R1,R27
000f6e 2fbf      	MOV  R27,R31
000f6f 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000f70 2e1a      	MOV  R1,R26
000f71 2fae      	MOV  R26,R30
000f72 2de1      	MOV  R30,R1
000f73 9508      	RET
                 
                 __EEPROMRDW:
000f74 9611      	ADIW R26,1
000f75 d002      	RCALL __EEPROMRDB
000f76 2ffe      	MOV  R31,R30
000f77 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
000f78 99f9      	SBIC EECR,EEWE
000f79 cffe      	RJMP __EEPROMRDB
000f7a 93ff      	PUSH R31
000f7b b7ff      	IN   R31,SREG
000f7c 94f8      	CLI
000f7d bda1      	OUT  EEARL,R26
000f7e bdb2      	OUT  EEARH,R27
000f7f 9af8      	SBI  EECR,EERE
000f80 b5e0      	IN   R30,EEDR
000f81 bfff      	OUT  SREG,R31
000f82 91ff      	POP  R31
000f83 9508      	RET
                 
                 __EEPROMWRW:
000f84 d007      	RCALL __EEPROMWRB
000f85 9611      	ADIW R26,1
000f86 93ef      	PUSH R30
000f87 2fef      	MOV  R30,R31
000f88 d003      	RCALL __EEPROMWRB
000f89 91ef      	POP  R30
000f8a 9711      	SBIW R26,1
000f8b 9508      	RET
                 
                 __EEPROMWRB:
000f8c 9bf9      	SBIS EECR,EEWE
000f8d c002      	RJMP __EEPROMWRB1
000f8e 95a8      	WDR
000f8f cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
000f90 b79f      	IN   R25,SREG
000f91 94f8      	CLI
000f92 bda1      	OUT  EEARL,R26
000f93 bdb2      	OUT  EEARH,R27
000f94 9af8      	SBI  EECR,EERE
000f95 b580      	IN   R24,EEDR
000f96 17e8      	CP   R30,R24
000f97 f019      	BREQ __EEPROMWRB0
000f98 bde0      	OUT  EEDR,R30
000f99 9afa      	SBI  EECR,EEMWE
000f9a 9af9      	SBI  EECR,EEWE
                 __EEPROMWRB0:
000f9b bf9f      	OUT  SREG,R25
000f9c 9508      	RET
                 
                 __CPD10:
000f9d 9730      	SBIW R30,0
000f9e 4060      	SBCI R22,0
000f9f 4070      	SBCI R23,0
000fa0 9508      	RET
                 
                 __SAVELOCR6:
000fa1 935a      	ST   -Y,R21
                 __SAVELOCR5:
000fa2 934a      	ST   -Y,R20
                 __SAVELOCR4:
000fa3 933a      	ST   -Y,R19
                 __SAVELOCR3:
000fa4 932a      	ST   -Y,R18
                 __SAVELOCR2:
000fa5 931a      	ST   -Y,R17
000fa6 930a      	ST   -Y,R16
000fa7 9508      	RET
                 
                 __LOADLOCR6:
000fa8 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000fa9 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000faa 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000fab 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000fac 8119      	LDD  R17,Y+1
000fad 8108      	LD   R16,Y
000fae 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
000faf 0fac      	ADD  R26,R28
000fb0 1fbd      	ADC  R27,R29
                 __INITLOC0:
000fb1 9005      	LPM  R0,Z+
000fb2 920d      	ST   X+,R0
000fb3 958a      	DEC  R24
000fb4 f7e1      	BRNE __INITLOC0
000fb5 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega328P register use summary:
r0 : 114 r1 :  46 r2 :   0 r3 :   0 r4 :   3 r5 :   4 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:  22 
r16:  88 r17:  86 r18:  64 r19:  74 r20:  68 r21: 101 r22: 167 r23: 153 
r24: 124 r25:  90 r26: 478 r27: 237 r28:  92 r29:   2 r30: 865 r31: 401 
x  : 119 y  : 916 z  :  51 
Registers used: 24 out of 35 (68.6%)

ATmega328P instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  44 add   :  37 
adiw  :  94 and   :   5 andi  :  25 asr   :   0 bclr  :   0 bld   :  12 
brbc  :   0 brbs  :   0 brcc  :   9 brcs  :   5 break :   0 breq  :  72 
brge  :   7 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  37 
brlt  :   4 brmi  :  11 brne  :  99 brpl  :   9 brsh  :  12 brtc  :   5 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 call  : 172 
cbi   :  10 cbr   :   2 clc   :   3 clh   :   0 cli   :   3 cln   :   0 
clr   :  72 cls   :   0 clt   :  10 clv   :   0 clz   :   2 com   :  10 
cp    :  21 cpc   :  20 cpi   : 145 cpse  :   0 dec   :  22 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :  17 ijmp  :   0 
in    :  27 inc   :   3 jmp   :  28 ld    : 120 ldd   : 485 ldi   : 394 
lds   :  11 lpm   :  17 lsl   :  16 lsr   :   3 mov   : 142 movw  : 122 
mul   :  22 muls  :   0 mulsu :   0 neg   :  11 nop   :   0 or    :   6 
ori   :  14 out   :  21 pop   :  38 push  :  38 rcall :  53 ret   :  76 
reti  :   1 rjmp  : 215 rol   :  35 ror   :  15 sbc   :  13 sbci  :  48 
sbi   :  17 sbic  :   3 sbis  :   4 sbiw  :  63 sbr   :   5 sbrc  :   7 
sbrs  :  23 sec   :   5 seh   :   0 sei   :   1 sen   :   0 ser   :   8 
ses   :   0 set   :   9 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    : 229 std   : 237 sts   :  13 sub   :   9 subi  :  90 swap  :   2 
tst   :  27 wdr   :   3 
Instructions used: 83 out of 116 (71.6%)

ATmega328P memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001f6c   7934    110   8044   32768  24.5%
[.dseg] 0x000100 0x000318      0     24     24    2048   1.2%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 7 warnings
